Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	carbon		sa					2064905136	62	2017-08-04 12:28:56.547			
SQL:BatchStarting	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa					2064905136	62	2017-08-04 12:28:56.620			
SQL:BatchCompleted	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa	0	5	0	0	2064905136	62	2017-08-04 12:28:56.620	2017-08-04 12:28:56.620		
SQL:BatchStarting	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa					2064905136	62	2017-08-04 12:28:56.663			
SQL:BatchCompleted	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa	0	0	0	0	2064905136	62	2017-08-04 12:28:56.663	2017-08-04 12:28:56.663		
SQL:BatchStarting	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa					2064905136	62	2017-08-04 12:28:56.667			
SQL:BatchCompleted	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa	0	5	0	0	2064905136	62	2017-08-04 12:28:56.667	2017-08-04 12:28:56.667		
SQL:BatchStarting	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa					2064905136	62	2017-08-04 12:28:56.667			
SQL:BatchCompleted	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa	0	0	0	0	2064905136	62	2017-08-04 12:28:56.667	2017-08-04 12:28:56.667		
SQL:BatchStarting	SELECT CONVERT(NVARCHAR(36), CONTEXT_INFO())	carbon		sa					2064905136	62	2017-08-04 12:28:56.670			
SQL:BatchCompleted	SELECT CONVERT(NVARCHAR(36), CONTEXT_INFO())	carbon		sa	0	0	0	0	2064905136	62	2017-08-04 12:28:56.670	2017-08-04 12:28:56.670		
SQL:BatchStarting	set LOCK_TIMEOUT 5000	carbon		sa					2064905136	62	2017-08-04 12:28:56.677			
SQL:BatchCompleted	set LOCK_TIMEOUT 5000	carbon		sa	0	0	0	0	2064905136	62	2017-08-04 12:28:56.677	2017-08-04 12:28:56.677		
SQL:BatchStarting	SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;
SET NUMERIC_ROUNDABORT OFF;	carbon		sa					2064905136	62	2017-08-04 12:28:56.680			
SQL:BatchCompleted	SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;
SET NUMERIC_ROUNDABORT OFF;	carbon		sa	0	0	0	0	2064905136	62	2017-08-04 12:28:56.680	2017-08-04 12:28:56.680		
SQL:BatchStarting	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa					2064905136	62	2017-08-04 12:28:56.683			
SQL:BatchCompleted	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa	0	5	0	0	2064905136	62	2017-08-04 12:28:56.683	2017-08-04 12:28:56.683		
SQL:BatchStarting	SELECT OSVersion = RIGHT(@@version, LEN(@@version)- 3 -charindex (' ON ', @@version))	carbon		sa					2064905136	62	2017-08-04 12:28:56.687			
SQL:BatchCompleted	SELECT OSVersion = RIGHT(@@version, LEN(@@version)- 3 -charindex (' ON ', @@version))	carbon		sa	0	0	0	0	2064905136	62	2017-08-04 12:28:56.687	2017-08-04 12:28:56.687		
Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	carbon		sa					2064905136	63	2017-08-04 12:28:56.763			
Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	carbon		sa					2064905136	65	2017-08-04 12:28:56.837			
SQL:BatchStarting	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa					2064905136	65	2017-08-04 12:28:56.837			
SQL:BatchCompleted	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa	0	0	0	0	2064905136	65	2017-08-04 12:28:56.837	2017-08-04 12:28:56.837		
SQL:BatchStarting	SELECT CONVERT(NVARCHAR(36), CONTEXT_INFO())	carbon		sa					2064905136	65	2017-08-04 12:28:56.840			
SQL:BatchCompleted	SELECT CONVERT(NVARCHAR(36), CONTEXT_INFO())	carbon		sa	0	0	0	0	2064905136	65	2017-08-04 12:28:56.840	2017-08-04 12:28:56.840		
SQL:BatchStarting	set LOCK_TIMEOUT 5000	carbon		sa					2064905136	65	2017-08-04 12:28:56.840			
SQL:BatchCompleted	set LOCK_TIMEOUT 5000	carbon		sa	0	0	0	0	2064905136	65	2017-08-04 12:28:56.840	2017-08-04 12:28:56.840		
SQL:BatchStarting	SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;
SET NUMERIC_ROUNDABORT OFF;	carbon		sa					2064905136	65	2017-08-04 12:28:56.840			
SQL:BatchCompleted	SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;
SET NUMERIC_ROUNDABORT OFF;	carbon		sa	0	0	0	0	2064905136	65	2017-08-04 12:28:56.840	2017-08-04 12:28:56.840		
SQL:BatchStarting	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa					2064905136	65	2017-08-04 12:28:56.840			
SQL:BatchCompleted	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa	0	5	0	0	2064905136	65	2017-08-04 12:28:56.840	2017-08-04 12:28:56.840		
SQL:BatchStarting	SELECT OSVersion = RIGHT(@@version, LEN(@@version)- 3 -charindex (' ON ', @@version))	carbon		sa					2064905136	65	2017-08-04 12:28:56.843			
SQL:BatchCompleted	SELECT OSVersion = RIGHT(@@version, LEN(@@version)- 3 -charindex (' ON ', @@version))	carbon		sa	0	0	0	0	2064905136	65	2017-08-04 12:28:56.843	2017-08-04 12:28:56.843		
SQL:BatchStarting	DECLARE @edition sysname; SET @edition = cast(SERVERPROPERTY(N'EDITION') as sysname); select case when @edition = N'SQL Azure' then 2 else 1 end as 'DatabaseEngineType';
SELECT SERVERPROPERTY('EngineEdition') AS DatabaseEngineEdition
select N'Windows' as host_platform
	carbon		sa					2064905136	63	2017-08-04 12:28:57.193			
SQL:BatchCompleted	DECLARE @edition sysname; SET @edition = cast(SERVERPROPERTY(N'EDITION') as sysname); select case when @edition = N'SQL Azure' then 2 else 1 end as 'DatabaseEngineType';
SELECT SERVERPROPERTY('EngineEdition') AS DatabaseEngineEdition
select N'Windows' as host_platform
	carbon		sa	0	0	0	0	2064905136	63	2017-08-04 12:28:57.193	2017-08-04 12:28:57.193		
Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.300			
SQL:BatchStarting	DECLARE @edition sysname; SET @edition = cast(SERVERPROPERTY(N'EDITION') as sysname); select case when @edition = N'SQL Azure' then 2 else 1 end as 'DatabaseEngineType';
SELECT SERVERPROPERTY('EngineEdition') AS DatabaseEngineEdition
select N'Windows' as host_platform
	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.300			
SQL:BatchCompleted	DECLARE @edition sysname; SET @edition = cast(SERVERPROPERTY(N'EDITION') as sysname); select case when @edition = N'SQL Azure' then 2 else 1 end as 'DatabaseEngineType';
SELECT SERVERPROPERTY('EngineEdition') AS DatabaseEngineEdition
select N'Windows' as host_platform
	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.300	2017-08-04 12:28:57.300		
SQL:BatchStarting	select SERVERPROPERTY(N'servername')	carbon		sa					2064905136	63	2017-08-04 12:28:57.313			
SQL:BatchCompleted	select SERVERPROPERTY(N'servername')	carbon		sa	0	0	0	0	2064905136	63	2017-08-04 12:28:57.313	2017-08-04 12:28:57.313		
SQL:BatchStarting	select SERVERPROPERTY(N'servername')	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.330			
SQL:BatchCompleted	select SERVERPROPERTY(N'servername')	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.330	2017-08-04 12:28:57.330		
SQL:BatchStarting	use [master];
if (db_id() = 1)
begin
-- contained auth is 0 when connected to master
select 0
end
else
begin
-- need dynamic sql so that we compile this query only when we know resource db is available
exec('select case when authenticating_database_id = 1 then 0 else 1 end from
sys.dm_exec_sessions where session_id = @@SPID')
end;use [master]; --resetting the context	carbon		sa					2064905136	63	2017-08-04 12:28:57.330			
SQL:BatchCompleted	use [master];
if (db_id() = 1)
begin
-- contained auth is 0 when connected to master
select 0
end
else
begin
-- need dynamic sql so that we compile this query only when we know resource db is available
exec('select case when authenticating_database_id = 1 then 0 else 1 end from
sys.dm_exec_sessions where session_id = @@SPID')
end;use [master]; --resetting the context	carbon		sa	0	0	0	0	2064905136	63	2017-08-04 12:28:57.330	2017-08-04 12:28:57.330		
SQL:BatchStarting	SELECT
CAST(
        serverproperty(N'Servername')
       AS sysname) AS [Name]	carbon		sa					2064905136	63	2017-08-04 12:28:57.437			
SQL:BatchCompleted	SELECT
CAST(
        serverproperty(N'Servername')
       AS sysname) AS [Name]	carbon		sa	0	0	0	0	2064905136	63	2017-08-04 12:28:57.437	2017-08-04 12:28:57.437		
SQL:BatchStarting	
        declare @HkeyLocal nvarchar(18)
        declare @ServicesRegPath nvarchar(34)
        declare @SqlServiceRegPath sysname
        declare @BrowserServiceRegPath sysname
        declare @MSSqlServerRegPath nvarchar(31)
        declare @InstanceNamesRegPath nvarchar(59)
        declare @InstanceRegPath sysname
        declare @SetupRegPath sysname
        declare @NpRegPath sysname
        declare @TcpRegPath sysname
        declare @RegPathParams sysname
        declare @FilestreamRegPath sysname

        select @HkeyLocal=N'HKEY_LOCAL_MACHINE'

        -- Instance-based paths
        select @MSSqlServerRegPath=N'SOFTWARE\Microsoft\MSSQLServer'
        select @InstanceRegPath=@MSSqlServerRegPath + N'\MSSQLServer'
        select @FilestreamRegPath=@InstanceRegPath + N'\Filestream'
        select @SetupRegPath=@MSSqlServerRegPath + N'\Setup'
        select @RegPathParams=@InstanceRegPath+'\Parameters'

        -- Services
        select @ServicesRegPath=N'SYSTEM\CurrentControlSet\Services'
        select @SqlServiceRegPath=@ServicesRegPath + N'\MSSQLSERVER'
        select @BrowserServiceRegPath=@ServicesRegPath + N'\SQLBrowser'

        -- InstanceId setting
        select @InstanceNamesRegPath=N'SOFTWARE\Microsoft\Microsoft SQL Server\Instance Names\SQL'

        -- Network settings
        select @NpRegPath=@InstanceRegPath + N'\SuperSocketNetLib\Np'
        select @TcpRegPath=@InstanceRegPath + N'\SuperSocketNetLib\Tcp'
      


        declare @SmoAuditLevel int
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'AuditLevel', @SmoAuditLevel OUTPUT
      


        declare @NumErrorLogs int
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'NumErrorLogs', @NumErrorLogs OUTPUT
      


        declare @SmoLoginMode int
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'LoginMode', @SmoLoginMode OUTPUT
      


        declare @SmoMailProfile nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'MailAccountName', @SmoMailProfile OUTPUT
      


        declare @BackupDirectory nvarchar(512)
        if 1=isnull(cast(SERVERPROPERTY('IsLocalDB') as bit), 0)
        select @BackupDirectory=cast(SERVERPROPERTY('instancedefaultdatapath') as nvarchar(512))
        else
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'BackupDirectory', @BackupDirectory OUTPUT
      


        declare @SmoPerfMonMode int
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'Performance', @SmoPerfMonMode OUTPUT

        if @SmoPerfMonMode is null
        begin
        set @SmoPerfMonMode = 1000
        end
      


        declare @InstallSqlDataDir nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @SetupRegPath, N'SQLDataRoot', @InstallSqlDataDir OUTPUT
      


        declare @MasterPath nvarchar(512)
        declare @LogPath nvarchar(512)
        declare @ErrorLog nvarchar(512)
        declare @ErrorLogPath nvarchar(512)

        select @MasterPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'master'
        select @LogPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'mastlog'
        select @ErrorLog=cast(SERVERPROPERTY(N'errorlogfilename') as nvarchar(512))
        select @ErrorLogPath=substring(@ErrorLog, 1, len(@ErrorLog) - charindex('\', reverse(@ErrorLog)))
      


        declare @SmoRoot nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @SetupRegPath, N'SQLPath', @SmoRoot OUTPUT
      


        declare @ServiceStartMode int
        EXEC master.sys.xp_instance_regread @HkeyLocal, @SqlServiceRegPath, N'Start', @ServiceStartMode OUTPUT
      


        declare @ServiceAccount nvarchar(512)
        EXEC master.sys.xp_instance_regread @HkeyLocal, @SqlServiceRegPath, N'ObjectName', @ServiceAccount OUTPUT
      


        declare @NamedPipesEnabled int
        exec master.dbo.xp_instance_regread @HkeyLocal, @NpRegPath, N'Enabled', @NamedPipesEnabled OUTPUT
      


        declare @TcpEnabled int
        EXEC master.sys.xp_instance_regread @HkeyLocal, @TcpRegPath, N'Enabled', @TcpEnabled OUTPUT
      


        declare @InstallSharedDirectory nvarchar(512)
        EXEC master.sys.xp_instance_regread @HkeyLocal, @SetupRegPath, N'SQLPath', @InstallSharedDirectory OUTPUT
      


        declare @SqlGroup nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @SetupRegPath, N'SQLGroup', @SqlGroup OUTPUT
      


        declare @FilestreamLevel int
        exec master.dbo.xp_instance_regread @HkeyLocal, @FilestreamRegPath, N'EnableLevel', @FilestreamLevel OUTPUT
      


        declare @FilestreamShareName nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @FilestreamRegPath, N'ShareName', @FilestreamShareName OUTPUT
      


        declare @cluster_name nvarchar(128)
        declare @quorum_type tinyint
        declare @quorum_state tinyint
        BEGIN TRY
        SELECT @cluster_name = cluster_name,
        @quorum_type = quorum_type,
        @quorum_state = quorum_state
        FROM sys.dm_hadr_cluster
        END TRY
        BEGIN CATCH
        --Querying this DMV using a contained auth connection throws error 15562 (Module is untrusted)
        --because of lack of trustworthiness by the server. This is expected so we just leave the
        --values as default
        IF(ERROR_NUMBER() NOT IN (297,300, 15562))
        BEGIN
        THROW
        END
        END CATCH
      

SELECT
@SmoAuditLevel AS [AuditLevel],
ISNULL(@NumErrorLogs, -1) AS [NumberOfLogFiles],
(case when @SmoLoginMode < 3 then @SmoLoginMode else 9 end) AS [LoginMode],
ISNULL(@SmoMailProfile,N'') AS [MailProfile],
@BackupDirectory AS [BackupDirectory],
@SmoPerfMonMode AS [PerfMonMode],
ISNULL(@InstallSqlDataDir,N'') AS [InstallDataDirectory],
CAST(@@SERVICENAME AS sysname) AS [ServiceName],
@ErrorLogPath AS [ErrorLogPath],
@SmoRoot AS [RootDirectory],
CAST(case when 'a' <> 'A' then 1 else 0 end AS bit) AS [IsCaseSensitive],
@@MAX_PRECISION AS [MaxPrecision],
CAST(FULLTEXTSERVICEPROPERTY('IsFullTextInstalled') AS bit) AS [IsFullTextInstalled],
SERVERPROPERTY(N'ProductVersion') AS [VersionString],
CAST(SERVERPROPERTY(N'Edition') AS sysname) AS [Edition],
CAST(SERVERPROPERTY(N'ProductLevel') AS sysname) AS [ProductLevel],
CAST(SERVERPROPERTY('IsSingleUser') AS bit) AS [IsSingleUser],
CAST(SERVERPROPERTY('EngineEdition') AS int) AS [EngineEdition],
convert(sysname, serverproperty(N'collation')) AS [Collation],
CAST(SERVERPROPERTY('IsClustered') AS bit) AS [IsClustered],
CAST(SERVERPROPERTY(N'MachineName') AS sysname) AS [NetName],
@LogPath AS [MasterDBLogPath],
@MasterPath AS [MasterDBPath],
SERVERPROPERTY('instancedefaultdatapath') AS [DefaultFile],
SERVERPROPERTY('instancedefaultlogpath') AS [DefaultLog],
SERVERPROPERTY(N'ResourceVersion') AS [ResourceVersionString],
SERVERPROPERTY(N'ResourceLastUpdateDateTime') AS [ResourceLastUpdateDateTime],
SERVERPROPERTY(N'CollationID') AS [CollationID],
SERVERPROPERTY(N'ComparisonStyle') AS [ComparisonStyle],
SERVERPROPERTY(N'SqlCharSet') AS [SqlCharSet],
SERVERPROPERTY(N'SqlCharSetName') AS [SqlCharSetName],
SERVERPROPERTY(N'SqlSortOrder') AS [SqlSortOrder],
SERVERPROPERTY(N'SqlSortOrderName') AS [SqlSortOrderName],
SERVERPROPERTY(N'ComputerNamePhysicalNetBIOS') AS [ComputerNamePhysicalNetBIOS],
SERVERPROPERTY(N'BuildClrVersion') AS [BuildClrVersionString],
@ServiceStartMode AS [ServiceStartMode],
ISNULL(@ServiceAccount,N'') AS [ServiceAccount],
CAST(@NamedPipesEnabled AS bit) AS [NamedPipesEnabled],
CAST(@TcpEnabled AS bit) AS [TcpEnabled],
ISNULL(@InstallSharedDirectory,N'') AS [InstallSharedDirectory],
ISNULL(suser_sname(sid_binary(ISNULL(@SqlGroup,N''))),N'') AS [SqlDomainGroup],
case when 1=msdb.dbo.fn_syspolicy_is_automation_enabled() and exists (select * from msdb.dbo.syspolicy_system_health_state  where target_query_expression_with_id like 'Server%' ) then 1 else 0 end AS [PolicyHealthState],
@FilestreamLevel AS [FilestreamLevel],
ISNULL(@FilestreamShareName,N'') AS [FilestreamShareName],
-1 AS [TapeLoadWaitTime],
CAST(SERVERPROPERTY(N'IsHadrEnabled') AS bit) AS [IsHadrEnabled],
SERVERPROPERTY(N'HADRManagerStatus') AS [HadrManagerStatus],
ISNULL(@cluster_name, '') AS [ClusterName],
ISNULL(@quorum_type, 4) AS [ClusterQuorumType],
ISNULL(@quorum_state, 3) AS [ClusterQuorumState],
SUSER_SID(@ServiceAccount, 0) AS [ServiceAccountSid],
CAST(SERVERPROPERTY('IsPolyBaseInstalled') AS bit) AS [IsPolyBaseInstalled],
N'Windows' AS [HostPlatform],
CAST(
        serverproperty(N'Servername')
       AS sysname) AS [Name],
CAST(
        ISNULL(serverproperty(N'instancename'),N'')
       AS sysname) AS [InstanceName],
CAST(0x0001 AS int) AS [Status],
N'\' AS [PathSeparator],
0 AS [IsContainedAuthentication],
CAST(null AS int) AS [ServerType]

        drop table #SVer
      
	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.437			
SQL:BatchCompleted	
        declare @HkeyLocal nvarchar(18)
        declare @ServicesRegPath nvarchar(34)
        declare @SqlServiceRegPath sysname
        declare @BrowserServiceRegPath sysname
        declare @MSSqlServerRegPath nvarchar(31)
        declare @InstanceNamesRegPath nvarchar(59)
        declare @InstanceRegPath sysname
        declare @SetupRegPath sysname
        declare @NpRegPath sysname
        declare @TcpRegPath sysname
        declare @RegPathParams sysname
        declare @FilestreamRegPath sysname

        select @HkeyLocal=N'HKEY_LOCAL_MACHINE'

        -- Instance-based paths
        select @MSSqlServerRegPath=N'SOFTWARE\Microsoft\MSSQLServer'
        select @InstanceRegPath=@MSSqlServerRegPath + N'\MSSQLServer'
        select @FilestreamRegPath=@InstanceRegPath + N'\Filestream'
        select @SetupRegPath=@MSSqlServerRegPath + N'\Setup'
        select @RegPathParams=@InstanceRegPath+'\Parameters'

        -- Services
        select @ServicesRegPath=N'SYSTEM\CurrentControlSet\Services'
        select @SqlServiceRegPath=@ServicesRegPath + N'\MSSQLSERVER'
        select @BrowserServiceRegPath=@ServicesRegPath + N'\SQLBrowser'

        -- InstanceId setting
        select @InstanceNamesRegPath=N'SOFTWARE\Microsoft\Microsoft SQL Server\Instance Names\SQL'

        -- Network settings
        select @NpRegPath=@InstanceRegPath + N'\SuperSocketNetLib\Np'
        select @TcpRegPath=@InstanceRegPath + N'\SuperSocketNetLib\Tcp'
      


        declare @SmoAuditLevel int
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'AuditLevel', @SmoAuditLevel OUTPUT
      


        declare @NumErrorLogs int
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'NumErrorLogs', @NumErrorLogs OUTPUT
      


        declare @SmoLoginMode int
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'LoginMode', @SmoLoginMode OUTPUT
      


        declare @SmoMailProfile nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'MailAccountName', @SmoMailProfile OUTPUT
      


        declare @BackupDirectory nvarchar(512)
        if 1=isnull(cast(SERVERPROPERTY('IsLocalDB') as bit), 0)
        select @BackupDirectory=cast(SERVERPROPERTY('instancedefaultdatapath') as nvarchar(512))
        else
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'BackupDirectory', @BackupDirectory OUTPUT
      


        declare @SmoPerfMonMode int
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'Performance', @SmoPerfMonMode OUTPUT

        if @SmoPerfMonMode is null
        begin
        set @SmoPerfMonMode = 1000
        end
      


        declare @InstallSqlDataDir nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @SetupRegPath, N'SQLDataRoot', @InstallSqlDataDir OUTPUT
      


        declare @MasterPath nvarchar(512)
        declare @LogPath nvarchar(512)
        declare @ErrorLog nvarchar(512)
        declare @ErrorLogPath nvarchar(512)

        select @MasterPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'master'
        select @LogPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'mastlog'
        select @ErrorLog=cast(SERVERPROPERTY(N'errorlogfilename') as nvarchar(512))
        select @ErrorLogPath=substring(@ErrorLog, 1, len(@ErrorLog) - charindex('\', reverse(@ErrorLog)))
      


        declare @SmoRoot nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @SetupRegPath, N'SQLPath', @SmoRoot OUTPUT
      


        declare @ServiceStartMode int
        EXEC master.sys.xp_instance_regread @HkeyLocal, @SqlServiceRegPath, N'Start', @ServiceStartMode OUTPUT
      


        declare @ServiceAccount nvarchar(512)
        EXEC master.sys.xp_instance_regread @HkeyLocal, @SqlServiceRegPath, N'ObjectName', @ServiceAccount OUTPUT
      


        declare @NamedPipesEnabled int
        exec master.dbo.xp_instance_regread @HkeyLocal, @NpRegPath, N'Enabled', @NamedPipesEnabled OUTPUT
      


        declare @TcpEnabled int
        EXEC master.sys.xp_instance_regread @HkeyLocal, @TcpRegPath, N'Enabled', @TcpEnabled OUTPUT
      


        declare @InstallSharedDirectory nvarchar(512)
        EXEC master.sys.xp_instance_regread @HkeyLocal, @SetupRegPath, N'SQLPath', @InstallSharedDirectory OUTPUT
      


        declare @SqlGroup nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @SetupRegPath, N'SQLGroup', @SqlGroup OUTPUT
      


        declare @FilestreamLevel int
        exec master.dbo.xp_instance_regread @HkeyLocal, @FilestreamRegPath, N'EnableLevel', @FilestreamLevel OUTPUT
      


        declare @FilestreamShareName nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @FilestreamRegPath, N'ShareName', @FilestreamShareName OUTPUT
      


        declare @cluster_name nvarchar(128)
        declare @quorum_type tinyint
        declare @quorum_state tinyint
        BEGIN TRY
        SELECT @cluster_name = cluster_name,
        @quorum_type = quorum_type,
        @quorum_state = quorum_state
        FROM sys.dm_hadr_cluster
        END TRY
        BEGIN CATCH
        --Querying this DMV using a contained auth connection throws error 15562 (Module is untrusted)
        --because of lack of trustworthiness by the server. This is expected so we just leave the
        --values as default
        IF(ERROR_NUMBER() NOT IN (297,300, 15562))
        BEGIN
        THROW
        END
        END CATCH
      

SELECT
@SmoAuditLevel AS [AuditLevel],
ISNULL(@NumErrorLogs, -1) AS [NumberOfLogFiles],
(case when @SmoLoginMode < 3 then @SmoLoginMode else 9 end) AS [LoginMode],
ISNULL(@SmoMailProfile,N'') AS [MailProfile],
@BackupDirectory AS [BackupDirectory],
@SmoPerfMonMode AS [PerfMonMode],
ISNULL(@InstallSqlDataDir,N'') AS [InstallDataDirectory],
CAST(@@SERVICENAME AS sysname) AS [ServiceName],
@ErrorLogPath AS [ErrorLogPath],
@SmoRoot AS [RootDirectory],
CAST(case when 'a' <> 'A' then 1 else 0 end AS bit) AS [IsCaseSensitive],
@@MAX_PRECISION AS [MaxPrecision],
CAST(FULLTEXTSERVICEPROPERTY('IsFullTextInstalled') AS bit) AS [IsFullTextInstalled],
SERVERPROPERTY(N'ProductVersion') AS [VersionString],
CAST(SERVERPROPERTY(N'Edition') AS sysname) AS [Edition],
CAST(SERVERPROPERTY(N'ProductLevel') AS sysname) AS [ProductLevel],
CAST(SERVERPROPERTY('IsSingleUser') AS bit) AS [IsSingleUser],
CAST(SERVERPROPERTY('EngineEdition') AS int) AS [EngineEdition],
convert(sysname, serverproperty(N'collation')) AS [Collation],
CAST(SERVERPROPERTY('IsClustered') AS bit) AS [IsClustered],
CAST(SERVERPROPERTY(N'MachineName') AS sysname) AS [NetName],
@LogPath AS [MasterDBLogPath],
@MasterPath AS [MasterDBPath],
SERVERPROPERTY('instancedefaultdatapath') AS [DefaultFile],
SERVERPROPERTY('instancedefaultlogpath') AS [DefaultLog],
SERVERPROPERTY(N'ResourceVersion') AS [ResourceVersionString],
SERVERPROPERTY(N'ResourceLastUpdateDateTime') AS [ResourceLastUpdateDateTime],
SERVERPROPERTY(N'CollationID') AS [CollationID],
SERVERPROPERTY(N'ComparisonStyle') AS [ComparisonStyle],
SERVERPROPERTY(N'SqlCharSet') AS [SqlCharSet],
SERVERPROPERTY(N'SqlCharSetName') AS [SqlCharSetName],
SERVERPROPERTY(N'SqlSortOrder') AS [SqlSortOrder],
SERVERPROPERTY(N'SqlSortOrderName') AS [SqlSortOrderName],
SERVERPROPERTY(N'ComputerNamePhysicalNetBIOS') AS [ComputerNamePhysicalNetBIOS],
SERVERPROPERTY(N'BuildClrVersion') AS [BuildClrVersionString],
@ServiceStartMode AS [ServiceStartMode],
ISNULL(@ServiceAccount,N'') AS [ServiceAccount],
CAST(@NamedPipesEnabled AS bit) AS [NamedPipesEnabled],
CAST(@TcpEnabled AS bit) AS [TcpEnabled],
ISNULL(@InstallSharedDirectory,N'') AS [InstallSharedDirectory],
ISNULL(suser_sname(sid_binary(ISNULL(@SqlGroup,N''))),N'') AS [SqlDomainGroup],
case when 1=msdb.dbo.fn_syspolicy_is_automation_enabled() and exists (select * from msdb.dbo.syspolicy_system_health_state  where target_query_expression_with_id like 'Server%' ) then 1 else 0 end AS [PolicyHealthState],
@FilestreamLevel AS [FilestreamLevel],
ISNULL(@FilestreamShareName,N'') AS [FilestreamShareName],
-1 AS [TapeLoadWaitTime],
CAST(SERVERPROPERTY(N'IsHadrEnabled') AS bit) AS [IsHadrEnabled],
SERVERPROPERTY(N'HADRManagerStatus') AS [HadrManagerStatus],
ISNULL(@cluster_name, '') AS [ClusterName],
ISNULL(@quorum_type, 4) AS [ClusterQuorumType],
ISNULL(@quorum_state, 3) AS [ClusterQuorumState],
SUSER_SID(@ServiceAccount, 0) AS [ServiceAccountSid],
CAST(SERVERPROPERTY('IsPolyBaseInstalled') AS bit) AS [IsPolyBaseInstalled],
N'Windows' AS [HostPlatform],
CAST(
        serverproperty(N'Servername')
       AS sysname) AS [Name],
CAST(
        ISNULL(serverproperty(N'instancename'),N'')
       AS sysname) AS [InstanceName],
CAST(0x0001 AS int) AS [Status],
N'\' AS [PathSeparator],
0 AS [IsContainedAuthentication],
CAST(null AS int) AS [ServerType]

        drop table #SVer
      
	Core .Net SqlClient Data Provider		sa	16	9	0	16	2064905136	66	2017-08-04 12:28:57.437	2017-08-04 12:28:57.453		
SQL:BatchStarting	
        declare @MasterPath nvarchar(512)
        declare @LogPath nvarchar(512)
        declare @ErrorLog nvarchar(512)
        declare @ErrorLogPath nvarchar(512)

        select @MasterPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'master'
        select @LogPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'mastlog'
        select @ErrorLog=cast(SERVERPROPERTY(N'errorlogfilename') as nvarchar(512))
        select @ErrorLogPath=substring(@ErrorLog, 1, len(@ErrorLog) - charindex('\', reverse(@ErrorLog)))
      


        declare @SmoRoot nvarchar(512)
        exec master.dbo.xp_instance_regread N'HKEY_LOCAL_MACHINE', N'SOFTWARE\Microsoft\MSSQLServer\Setup', N'SQLPath', @SmoRoot OUTPUT
      


SELECT
CAST(case when 'a' <> 'A' then 1 else 0 end AS bit) AS [IsCaseSensitive],
@@MAX_PRECISION AS [MaxPrecision],
@ErrorLogPath AS [ErrorLogPath],
@SmoRoot AS [RootDirectory],
N'Windows' AS [HostPlatform],
N'\' AS [PathSeparator],
CAST(FULLTEXTSERVICEPROPERTY('IsFullTextInstalled') AS bit) AS [IsFullTextInstalled],
@LogPath AS [MasterDBLogPath],
@MasterPath AS [MasterDBPath],
SERVERPROPERTY(N'ProductVersion') AS [VersionString],
CAST(SERVERPROPERTY(N'Edition') AS sysname) AS [Edition],
CAST(SERVERPROPERTY(N'ProductLevel') AS sysname) AS [ProductLevel],
CAST(SERVERPROPERTY('IsSingleUser') AS bit) AS [IsSingleUser],
CAST(SERVERPROPERTY('EngineEdition') AS int) AS [EngineEdition],
convert(sysname, serverproperty(N'collation')) AS [Collation],
CAST(SERVERPROPERTY(N'MachineName') AS sysname) AS [NetName],
CAST(SERVERPROPERTY('IsClustered') AS bit) AS [IsClustered],
SERVERPROPERTY(N'ResourceVersion') AS [ResourceVersionString],
SERVERPROPERTY(N'ResourceLastUpdateDateTime') AS [ResourceLastUpdateDateTime],
SERVERPROPERTY(N'CollationID') AS [CollationID],
SERVERPROPERTY(N'ComparisonStyle') AS [ComparisonStyle],
SERVERPROPERTY(N'SqlCharSet') AS [SqlCharSet],
SERVERPROPERTY(N'SqlCharSetName') AS [SqlCharSetName],
SERVERPROPERTY(N'SqlSortOrder') AS [SqlSortOrder],
SERVERPROPERTY(N'SqlSortOrderName') AS [SqlSortOrderName],
SERVERPROPERTY(N'BuildClrVersion') AS [BuildClrVersionString],
SERVERPROPERTY(N'ComputerNamePhysicalNetBIOS') AS [ComputerNamePhysicalNetBIOS],
CAST(SERVERPROPERTY('IsPolyBaseInstalled') AS bit) AS [IsPolyBaseInstalled]	carbon		sa					2064905136	63	2017-08-04 12:28:57.480			
SQL:BatchCompleted	
        declare @MasterPath nvarchar(512)
        declare @LogPath nvarchar(512)
        declare @ErrorLog nvarchar(512)
        declare @ErrorLogPath nvarchar(512)

        select @MasterPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'master'
        select @LogPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'mastlog'
        select @ErrorLog=cast(SERVERPROPERTY(N'errorlogfilename') as nvarchar(512))
        select @ErrorLogPath=substring(@ErrorLog, 1, len(@ErrorLog) - charindex('\', reverse(@ErrorLog)))
      


        declare @SmoRoot nvarchar(512)
        exec master.dbo.xp_instance_regread N'HKEY_LOCAL_MACHINE', N'SOFTWARE\Microsoft\MSSQLServer\Setup', N'SQLPath', @SmoRoot OUTPUT
      


SELECT
CAST(case when 'a' <> 'A' then 1 else 0 end AS bit) AS [IsCaseSensitive],
@@MAX_PRECISION AS [MaxPrecision],
@ErrorLogPath AS [ErrorLogPath],
@SmoRoot AS [RootDirectory],
N'Windows' AS [HostPlatform],
N'\' AS [PathSeparator],
CAST(FULLTEXTSERVICEPROPERTY('IsFullTextInstalled') AS bit) AS [IsFullTextInstalled],
@LogPath AS [MasterDBLogPath],
@MasterPath AS [MasterDBPath],
SERVERPROPERTY(N'ProductVersion') AS [VersionString],
CAST(SERVERPROPERTY(N'Edition') AS sysname) AS [Edition],
CAST(SERVERPROPERTY(N'ProductLevel') AS sysname) AS [ProductLevel],
CAST(SERVERPROPERTY('IsSingleUser') AS bit) AS [IsSingleUser],
CAST(SERVERPROPERTY('EngineEdition') AS int) AS [EngineEdition],
convert(sysname, serverproperty(N'collation')) AS [Collation],
CAST(SERVERPROPERTY(N'MachineName') AS sysname) AS [NetName],
CAST(SERVERPROPERTY('IsClustered') AS bit) AS [IsClustered],
SERVERPROPERTY(N'ResourceVersion') AS [ResourceVersionString],
SERVERPROPERTY(N'ResourceLastUpdateDateTime') AS [ResourceLastUpdateDateTime],
SERVERPROPERTY(N'CollationID') AS [CollationID],
SERVERPROPERTY(N'ComparisonStyle') AS [ComparisonStyle],
SERVERPROPERTY(N'SqlCharSet') AS [SqlCharSet],
SERVERPROPERTY(N'SqlCharSetName') AS [SqlCharSetName],
SERVERPROPERTY(N'SqlSortOrder') AS [SqlSortOrder],
SERVERPROPERTY(N'SqlSortOrderName') AS [SqlSortOrderName],
SERVERPROPERTY(N'BuildClrVersion') AS [BuildClrVersionString],
SERVERPROPERTY(N'ComputerNamePhysicalNetBIOS') AS [ComputerNamePhysicalNetBIOS],
CAST(SERVERPROPERTY('IsPolyBaseInstalled') AS bit) AS [IsPolyBaseInstalled]	carbon		sa	0	5	0	2	2064905136	63	2017-08-04 12:28:57.480	2017-08-04 12:28:57.483		
SQL:BatchStarting	SELECT
cfg.name AS [Name],
cfg.configuration_id AS [Number],
cfg.minimum AS [Minimum],
cfg.maximum AS [Maximum],
cfg.is_dynamic AS [Dynamic],
cfg.is_advanced AS [Advanced],
cfg.value AS [ConfigValue],
cfg.value_in_use AS [RunValue],
cfg.description AS [Description]
FROM
sys.configurations AS cfg	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.533			
SQL:BatchCompleted	SELECT
cfg.name AS [Name],
cfg.configuration_id AS [Number],
cfg.minimum AS [Minimum],
cfg.maximum AS [Maximum],
cfg.is_dynamic AS [Dynamic],
cfg.is_advanced AS [Advanced],
cfg.value AS [ConfigValue],
cfg.value_in_use AS [RunValue],
cfg.description AS [Description]
FROM
sys.configurations AS cfg	Core .Net SqlClient Data Provider		sa	0	4	0	0	2064905136	66	2017-08-04 12:28:57.533	2017-08-04 12:28:57.533		
RPC:Completed	exec sp_executesql N'SELECT
dtb.name AS [Name]
FROM
master.sys.databases AS dtb
WHERE
(dtb.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'master'	Core .Net SqlClient Data Provider		sa	0	8	0	0	2064905136	66	2017-08-04 12:28:57.580	2017-08-04 12:28:57.580		
RPC:Completed	exec sp_executesql N'SELECT
dtb.collation_name AS [Collation],
dtb.name AS [DatabaseName2]
FROM
master.sys.databases AS dtb
WHERE
(dtb.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'master'	carbon		sa	0	8	0	0	2064905136	63	2017-08-04 12:28:57.580	2017-08-04 12:28:57.580		
SQL:BatchStarting	SELECT
dtb.name AS [Name],
dtb.database_id AS [ID],
CAST(case when dtb.name in ('master','model','msdb','tempdb') then 1 else dtb.is_distributor end AS bit) AS [IsSystemObject],
dtb.collation_name AS [Collation],
CAST(has_dbaccess(dtb.name) AS bit) AS [IsAccessible],
dtb.name AS [DatabaseName2]
FROM
master.sys.databases AS dtb
ORDER BY
[Name] ASC	carbon		sa					2064905136	63	2017-08-04 12:28:57.600			
RPC:Completed	exec sp_executesql N'SELECT
dtb.compatibility_level AS [CompatibilityLevel],
dtb.name AS [DatabaseName2]
FROM
master.sys.databases AS dtb
WHERE
(dtb.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'master'	Core .Net SqlClient Data Provider		sa	0	10	0	0	2064905136	66	2017-08-04 12:28:57.610	2017-08-04 12:28:57.610		
SQL:BatchCompleted	SELECT
dtb.name AS [Name],
dtb.database_id AS [ID],
CAST(case when dtb.name in ('master','model','msdb','tempdb') then 1 else dtb.is_distributor end AS bit) AS [IsSystemObject],
dtb.collation_name AS [Collation],
CAST(has_dbaccess(dtb.name) AS bit) AS [IsAccessible],
dtb.name AS [DatabaseName2]
FROM
master.sys.databases AS dtb
ORDER BY
[Name] ASC	carbon		sa	16	174	0	12	2064905136	63	2017-08-04 12:28:57.600	2017-08-04 12:28:57.613		
RPC:Completed	exec sp_executesql N'SELECT
ISNULL((case dmi.mirroring_redo_queue_type when N''UNLIMITED'' then 0 else dmi.mirroring_redo_queue end),0) AS [MirroringRedoQueueMaxSize],
ISNULL(dmi.mirroring_connection_timeout,0) AS [MirroringTimeout],
ISNULL(dmi.mirroring_partner_name,'''') AS [MirroringPartner],
ISNULL(dmi.mirroring_partner_instance,'''') AS [MirroringPartnerInstance],
ISNULL(dmi.mirroring_role,0) AS [MirroringRole],
ISNULL(dmi.mirroring_safety_level + 1, 0) AS [MirroringSafetyLevel],
ISNULL(dmi.mirroring_state + 1, 0) AS [MirroringStatus],
ISNULL(dmi.mirroring_witness_name,'''') AS [MirroringWitness],
ISNULL(dmi.mirroring_witness_state + 1, 0) AS [MirroringWitnessStatus],
CAST(case when dmi.mirroring_partner_name is null then 0 else 1 end AS bit) AS [IsMirroringEnabled],
ISNULL(dmi.mirroring_guid,''00000000-0000-0000-0000-0000000000000000'') AS [MirroringID],
ISNULL(dmi.mirroring_role_sequence,0) AS [MirroringRoleSequence],
ISNULL(dmi.mirroring_safety_sequence,0) AS [MirroringSafetySequence],
ISNULL(dmi.mirroring_failover_lsn,0) AS [MirroringFailoverLogSequenceNumber],
dtb.is_ansi_null_default_on AS [AnsiNullDefault],
dtb.is_ansi_nulls_on AS [AnsiNullsEnabled],
dtb.is_ansi_padding_on AS [AnsiPaddingEnabled],
dtb.is_ansi_warnings_on AS [AnsiWarningsEnabled],
dtb.is_arithabort_on AS [ArithmeticAbortEnabled],
dtb.is_auto_shrink_on AS [AutoShrink],
dtb.is_cursor_close_on_commit_on AS [CloseCursorsOnCommitEnabled],
dtb.is_concat_null_yields_null_on AS [ConcatenateNullYieldsNull],
dtb.is_numeric_roundabort_on AS [NumericRoundAbortEnabled],
dtb.is_quoted_identifier_on AS [QuotedIdentifiersEnabled],
dtb.is_read_only AS [ReadOnly],
dtb.is_recursive_triggers_on AS [RecursiveTriggersEnabled],
dtb.user_access AS [UserAccess],
dtb.is_db_chaining_on AS [DatabaseOwnershipChaining],
dtb.is_auto_update_stats_async_on AS [AutoUpdateStatisticsAsync],
dtb.is_date_correlation_on AS [DateCorrelationOptimization],
dtb.is_trustworthy_on AS [Trustworthy],
dtb.name AS [Name],
dtb.database_id AS [ID],
dtb.create_date AS [CreateDate],
dtb.is_auto_create_stats_on AS [AutoCreateStatisticsEnabled],
dtb.is_auto_update_stats_on AS [AutoUpdateStatisticsEnabled],
dtb.is_parameterization_forced AS [IsParameterizationForced],
dtb.is_read_committed_snapshot_on AS [IsReadCommittedSnapshotOn],
CAST(isnull(dtb.source_database_id, 0) AS bit) AS [IsDatabaseSnapshot],
ISNULL(DB_NAME(dtb.source_database_id), N'''') AS [DatabaseSnapshotBaseName],
dtb.is_fulltext_enabled AS [IsFullTextEnabled],
dtb.service_broker_guid AS [ServiceBrokerGuid],
dtb.snapshot_isolation_state AS [SnapshotIsolationState],
(dtb.is_published*1+dtb.is_subscribed*2+dtb.is_merge_published*4) AS [ReplicationOptions],
dtb.is_local_cursor_default AS [LocalCursorsDefault],
dtb.page_verify_option AS [PageVerify],
dtb.recovery_model AS [RecoveryModel],
dtb.is_auto_close_on AS [AutoClose],
dtb.is_broker_enabled AS [BrokerEnabled],
ISNULL(suser_sname(dtb.owner_sid),'''') AS [Owner],
ISNULL(dtb.log_reuse_wait,0) AS [LogReuseWaitStatus],
drs.recovery_fork_guid AS [RecoveryForkGuid],
drs.database_guid AS [DatabaseGuid],
CAST((case when drs.last_log_backup_lsn is not null then 1 else 0 end) AS bit) AS [HasFullBackup],
CAST(case when dtb.name in (''master'',''model'',''msdb'',''tempdb'') then 1 else dtb.is_distributor end AS bit) AS [IsSystemObject],
CAST(case when ctb.database_id is null then 0 else 1  end AS bit) AS [ChangeTrackingEnabled],
CAST(ISNULL(ctb.is_auto_cleanup_on,0) AS bit) AS [ChangeTrackingAutoCleanUp],
ISNULL(ctb.retention_period,0) AS [ChangeTrackingRetentionPeriod],
CAST(ISNULL(ctb.retention_period_units,0) AS tinyint) AS [ChangeTrackingRetentionPeriodUnits],
dtb.containment AS [ContainmentType],
dtb.default_language_lcid AS [DefaultLanguageLcid],
dtb.default_language_name AS [DefaultLanguageName],
dtb.default_fulltext_language_lcid AS [DefaultFullTextLanguageLcid],
ISNULL(dtb.default_fulltext_language_name,N'''') AS [DefaultFullTextLanguageName],
CAST(dtb.is_nested_triggers_on AS bit) AS [NestedTriggersEnabled],
CAST(dtb.is_transform_noise_words_on AS bit) AS [TransformNoiseWords],
dtb.two_digit_year_cutoff AS [TwoDigitYearCutoff],
dtb.target_recovery_time_in_seconds AS [TargetRecoveryTime],
dtb.delayed_durability AS [DelayedDurability],
dtb.is_auto_create_stats_incremental_on AS [AutoCreateIncrementalStatisticsEnabled],

        case
        when dtb.collation_name is null then 0x200
        else 0
        end |
        case
        when 1 = dtb.is_in_standby then 0x40
        else 0
        end |
        case dtb.state
        when 1 then 0x2
        when 2 then 0x8
        when 3 then 0x4
        when 4 then 0x10
        when 5 then 0x100
        when 6 then 0x20
        else 1
        end
       AS [Status],
CAST(( case LOWER(convert( nvarchar(128), DATABASEPROPERTYEX(dtb.name, ''Updateability''))) when ''read_write'' then 1 else 0 end) AS bit) AS [IsUpdateable],
CAST(dtb.is_encrypted AS bit) AS [EncryptionEnabled],
CAST(dtb.is_honor_broker_priority_on AS bit) AS [HonorBrokerPriority],
CAST(
        case
        when SERVERPROPERTY(''EngineEdition'') = 6 then cast(1 as bit)
        else cast(0 as bit)
        end
       AS bit) AS [IsSqlDw],
CAST(has_dbaccess(dtb.name) AS bit) AS [IsAccessible],
ISNULL(fsopt.directory_name , N'''') AS [FilestreamDirectoryName],
ISNULL(fsopt.non_transacted_access , 0) AS [FilestreamNonTransactedAccess],
CAST(dtb.is_remote_data_archive_enabled AS bit) AS [RemoteDataArchiveEnabled],
NULL AS [RemoteDataArchiveEndpoint],
NULL AS [RemoteDataArchiveLinkedServer],
NULL AS [RemoteDatabaseName],
0 AS [RemoteDataArchiveUseFederatedServiceAccount],
NULL AS [RemoteDataArchiveCredential],
0 AS [MaxDop],
NULL AS [MaxDopForSecondary],
0 AS [LegacyCardinalityEstimation],
2 AS [LegacyCardinalityEstimationForSecondary],
0 AS [ParameterSniffing],
2 AS [ParameterSniffingForSecondary],
0 AS [QueryOptimizerHotfixes],
2 AS [QueryOptimizerHotfixesForSecondary],
dtb.name AS [DatabaseName2],
dtb.containment AS [ContainmentType2],
dtb.name AS [DatabaseName5],
dtb.name AS [DatabaseName6]
FROM
master.sys.databases AS dtb
LEFT OUTER JOIN sys.database_mirroring AS dmi ON dmi.database_id = dtb.database_id
LEFT OUTER JOIN sys.database_recovery_status AS drs ON drs.database_id = dtb.database_id
LEFT OUTER JOIN sys.change_tracking_databases AS ctb ON ctb.database_id = dtb.database_id 
LEFT OUTER JOIN sys.database_filestream_options AS fsopt ON fsopt.database_id = dtb.database_id
WHERE
(dtb.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'master'	Core .Net SqlClient Data Provider		sa	0	47	0	0	2064905136	66	2017-08-04 12:28:57.677	2017-08-04 12:28:57.677		
SQL:BatchStarting	select 
case 
    when cfg.configuration_id = 124 -- configuration id for default language
    then (select lcid from sys.syslanguages as sl where sl.langid = cfg.value_in_use) -- getting default language LCID from default language langid
    else cfg.value_in_use
end as value,
case 
    when cfg.configuration_id = 124 -- configuration id for default language
    then (select name collate catalog_default from sys.syslanguages as sl where sl.langid = cfg.value_in_use) -- getting default language name from default language langid
    when cfg.configuration_id = 1126 -- configuration id for default fulltext language
    then ISNULL((select name collate catalog_default from sys.fulltext_languages as fl where fl.lcid = cfg.value_in_use), N'') -- getting default fulltext language name from default fulltext language lcid
    else null
end as name,
cfg.configuration_id as configuration_id
from sys.configurations as cfg
where cfg.configuration_id in (115, 124, 1126, 1127, 1555) 
order by cfg.configuration_id asc	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.693			
SQL:BatchCompleted	select 
case 
    when cfg.configuration_id = 124 -- configuration id for default language
    then (select lcid from sys.syslanguages as sl where sl.langid = cfg.value_in_use) -- getting default language LCID from default language langid
    else cfg.value_in_use
end as value,
case 
    when cfg.configuration_id = 124 -- configuration id for default language
    then (select name collate catalog_default from sys.syslanguages as sl where sl.langid = cfg.value_in_use) -- getting default language name from default language langid
    when cfg.configuration_id = 1126 -- configuration id for default fulltext language
    then ISNULL((select name collate catalog_default from sys.fulltext_languages as fl where fl.lcid = cfg.value_in_use), N'') -- getting default fulltext language name from default fulltext language lcid
    else null
end as name,
cfg.configuration_id as configuration_id
from sys.configurations as cfg
where cfg.configuration_id in (115, 124, 1126, 1127, 1555) 
order by cfg.configuration_id asc	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.693	2017-08-04 12:28:57.693		
SQL:BatchStarting	SELECT CASE WHEN has_dbaccess(N'master') = 1 THEN 'true' ELSE 'false' END	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.700			
SQL:BatchCompleted	SELECT CASE WHEN has_dbaccess(N'master') = 1 THEN 'true' ELSE 'false' END	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.700	2017-08-04 12:28:57.700		
RPC:Completed	exec sp_executesql N'SELECT COLLATIONPROPERTY((select collation_name from sys.databases where name = ISNULL(@dbname, db_name())), ''LCID''), COLLATIONPROPERTY((select collation_name from sys.databases where name = ISNULL(@dbname, db_name())), ''ComparisonStyle'')',N'@dbname nvarchar(6)',@dbname=N'master'	Core .Net SqlClient Data Provider		sa	0	22	0	0	2064905136	66	2017-08-04 12:28:57.713	2017-08-04 12:28:57.713		
Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	Core .Net SqlClient Data Provider		sa					2064905136	67	2017-08-04 12:28:57.723			
SQL:BatchStarting	SELECT
eds.location AS [RemoteDataArchiveEndpoint],
eds.name AS [RemoteDataArchiveLinkedServer],
rdad.remote_database_name AS [RemoteDatabaseName],
rdad.federated_service_account AS [RemoteDataArchiveUseFederatedServiceAccount],
case when rdad.federated_service_account = 1 then null else cred.name end AS [RemoteDataArchiveCredential]
FROM
sys.remote_data_archive_databases rdad
INNER JOIN sys.external_data_sources eds ON rdad.data_source_id = eds.data_source_id
LEFT OUTER JOIN sys.database_scoped_credentials cred ON eds.credential_id = cred.credential_id	Core .Net SqlClient Data Provider		sa					2064905136	67	2017-08-04 12:28:57.723			
SQL:BatchCompleted	SELECT
eds.location AS [RemoteDataArchiveEndpoint],
eds.name AS [RemoteDataArchiveLinkedServer],
rdad.remote_database_name AS [RemoteDatabaseName],
rdad.federated_service_account AS [RemoteDataArchiveUseFederatedServiceAccount],
case when rdad.federated_service_account = 1 then null else cred.name end AS [RemoteDataArchiveCredential]
FROM
sys.remote_data_archive_databases rdad
INNER JOIN sys.external_data_sources eds ON rdad.data_source_id = eds.data_source_id
LEFT OUTER JOIN sys.database_scoped_credentials cred ON eds.credential_id = cred.credential_id	Core .Net SqlClient Data Provider		sa	0	2	0	0	2064905136	67	2017-08-04 12:28:57.723	2017-08-04 12:28:57.723		
Audit Logout		Core .Net SqlClient Data Provider		sa	0	2	0	7	2064905136	67	2017-08-04 12:28:57.723	2017-08-04 12:28:57.730		
SQL:BatchStarting	SELECT CASE WHEN has_dbaccess(N'master') = 1 THEN 'true' ELSE 'false' END	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.740			
SQL:BatchCompleted	SELECT CASE WHEN has_dbaccess(N'master') = 1 THEN 'true' ELSE 'false' END	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.740	2017-08-04 12:28:57.740		
Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	Core .Net SqlClient Data Provider		sa					2064905136	67	2017-08-04 12:28:57.760			
SQL:BatchStarting	SELECT
(select value from sys.database_scoped_configurations as dsc where dsc.name = 'MAXDOP') AS [MaxDop],
(select value_for_secondary from sys.database_scoped_configurations as dsc where dsc.name = 'MAXDOP') AS [MaxDopForSecondary],
(select value from sys.database_scoped_configurations as dsc where dsc.name = 'LEGACY_CARDINALITY_ESTIMATION') AS [LegacyCardinalityEstimation],
(select ISNULL(value_for_secondary, 2) from sys.database_scoped_configurations as dsc where dsc.name = 'LEGACY_CARDINALITY_ESTIMATION') AS [LegacyCardinalityEstimationForSecondary],
(select value from sys.database_scoped_configurations as dsc where dsc.name = 'PARAMETER_SNIFFING') AS [ParameterSniffing],
(select ISNULL(value_for_secondary, 2) from sys.database_scoped_configurations as dsc where dsc.name = 'PARAMETER_SNIFFING') AS [ParameterSniffingForSecondary],
(select value from sys.database_scoped_configurations as dsc where dsc.name = 'QUERY_OPTIMIZER_HOTFIXES') AS [QueryOptimizerHotfixes],
(select ISNULL(value_for_secondary, 2) from sys.database_scoped_configurations as dsc where dsc.name = 'QUERY_OPTIMIZER_HOTFIXES') AS [QueryOptimizerHotfixesForSecondary]	Core .Net SqlClient Data Provider		sa					2064905136	67	2017-08-04 12:28:57.760			
SQL:BatchCompleted	SELECT
(select value from sys.database_scoped_configurations as dsc where dsc.name = 'MAXDOP') AS [MaxDop],
(select value_for_secondary from sys.database_scoped_configurations as dsc where dsc.name = 'MAXDOP') AS [MaxDopForSecondary],
(select value from sys.database_scoped_configurations as dsc where dsc.name = 'LEGACY_CARDINALITY_ESTIMATION') AS [LegacyCardinalityEstimation],
(select ISNULL(value_for_secondary, 2) from sys.database_scoped_configurations as dsc where dsc.name = 'LEGACY_CARDINALITY_ESTIMATION') AS [LegacyCardinalityEstimationForSecondary],
(select value from sys.database_scoped_configurations as dsc where dsc.name = 'PARAMETER_SNIFFING') AS [ParameterSniffing],
(select ISNULL(value_for_secondary, 2) from sys.database_scoped_configurations as dsc where dsc.name = 'PARAMETER_SNIFFING') AS [ParameterSniffingForSecondary],
(select value from sys.database_scoped_configurations as dsc where dsc.name = 'QUERY_OPTIMIZER_HOTFIXES') AS [QueryOptimizerHotfixes],
(select ISNULL(value_for_secondary, 2) from sys.database_scoped_configurations as dsc where dsc.name = 'QUERY_OPTIMIZER_HOTFIXES') AS [QueryOptimizerHotfixesForSecondary]	Core .Net SqlClient Data Provider		sa	0	44	0	0	2064905136	67	2017-08-04 12:28:57.760	2017-08-04 12:28:57.760		
Audit Logout		Core .Net SqlClient Data Provider		sa	0	44	0	3	2064905136	67	2017-08-04 12:28:57.760	2017-08-04 12:28:57.763		
SQL:BatchStarting	SELECT
(@@microsoftversion / 0x1000000) & 0xff AS [VersionMajor]	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.770			
SQL:BatchCompleted	SELECT
(@@microsoftversion / 0x1000000) & 0xff AS [VersionMajor]	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.770	2017-08-04 12:28:57.770		
SQL:BatchStarting	select is_srvrolemember('sysadmin') * 1 +is_srvrolemember('serveradmin') * 2 +is_srvrolemember('setupadmin') * 4 +is_srvrolemember('securityadmin') * 8 +is_srvrolemember('processadmin') * 16 +is_srvrolemember('dbcreator') * 32 +is_srvrolemember('diskadmin') * 64+ is_srvrolemember('bulkadmin') * 128	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.770			
SQL:BatchCompleted	select is_srvrolemember('sysadmin') * 1 +is_srvrolemember('serveradmin') * 2 +is_srvrolemember('setupadmin') * 4 +is_srvrolemember('securityadmin') * 8 +is_srvrolemember('processadmin') * 16 +is_srvrolemember('dbcreator') * 32 +is_srvrolemember('diskadmin') * 64+ is_srvrolemember('bulkadmin') * 128	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.770	2017-08-04 12:28:57.770		
SQL:BatchStarting	USE [master]	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.777			
SQL:BatchCompleted	USE [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.777	2017-08-04 12:28:57.777		
SQL:BatchStarting	select suser_sname((select sid from sys.database_principals where name = N'dbo'));	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.777			
SQL:BatchCompleted	select suser_sname((select sid from sys.database_principals where name = N'dbo'));	Core .Net SqlClient Data Provider		sa	0	6	0	0	2064905136	66	2017-08-04 12:28:57.777	2017-08-04 12:28:57.777		
RPC:Completed	exec sp_executesql N'
        create table #tempbackup (database_name nvarchar(128), [type] char(1), backup_finish_date datetime)
        insert into #tempbackup select database_name, [type], max(backup_finish_date) from msdb..backupset where [type] = ''D'' or [type] = ''L'' or [type]=''I'' group by database_name, [type]
      


SELECT
(select backup_finish_date from #tempbackup where type = @_msparam_0 and db_id(database_name) = dtb.database_id) AS [LastBackupDate]
FROM
master.sys.databases AS dtb
WHERE
(dtb.name=@_msparam_1)

        drop table #tempbackup
      
',N'@_msparam_0 nvarchar(4000),@_msparam_1 nvarchar(4000)',@_msparam_0=N'D',@_msparam_1=N'master'	Core .Net SqlClient Data Provider		sa	15	221	0	5	2064905136	66	2017-08-04 12:28:57.790	2017-08-04 12:28:57.797	0X00000000050000001A00730070005F006500780065006300750074006500730071006C006C04000082001A00E7206E00760061007200630068006100720028003500340036002900440400000A002000200020002000200020002000200063007200650061007400650020007400610062006C00650020002300740065006D0070006200610063006B007500700020002800640061007400610062006100730065005F006E0061006D00650020006E007600610072006300680061007200280031003200380029002C0020005B0074007900700065005D00200063006800610072002800310029002C0020006200610063006B00750070005F00660069006E00	
RPC:Completed	exec sp_executesql N'
        create table #tempbackup (database_name nvarchar(128), [type] char(1), backup_finish_date datetime)
        insert into #tempbackup select database_name, [type], max(backup_finish_date) from msdb..backupset where [type] = ''D'' or [type] = ''L'' or [type]=''I'' group by database_name, [type]
      


SELECT
(select backup_finish_date from #tempbackup where type = @_msparam_0 and db_id(database_name) = dtb.database_id) AS [LastLogBackupDate]
FROM
master.sys.databases AS dtb
WHERE
(dtb.name=@_msparam_1)

        drop table #tempbackup
      
',N'@_msparam_0 nvarchar(4000),@_msparam_1 nvarchar(4000)',@_msparam_0=N'L',@_msparam_1=N'master'	Core .Net SqlClient Data Provider		sa	0	200	1	3	2064905136	66	2017-08-04 12:28:57.797	2017-08-04 12:28:57.800		
RPC:Completed	exec sp_executesql N'SELECT
dtb.collation_name AS [Collation],
dtb.name AS [DatabaseName2]
FROM
master.sys.databases AS dtb
WHERE
(dtb.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'master'	Core .Net SqlClient Data Provider		sa	0	8	0	0	2064905136	66	2017-08-04 12:28:57.803	2017-08-04 12:28:57.803		
SQL:BatchStarting	
        declare @MasterPath nvarchar(512)
        declare @LogPath nvarchar(512)
        declare @ErrorLog nvarchar(512)
        declare @ErrorLogPath nvarchar(512)

        select @MasterPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'master'
        select @LogPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'mastlog'
        select @ErrorLog=cast(SERVERPROPERTY(N'errorlogfilename') as nvarchar(512))
        select @ErrorLogPath=substring(@ErrorLog, 1, len(@ErrorLog) - charindex('\', reverse(@ErrorLog)))
      


        declare @SmoRoot nvarchar(512)
        exec master.dbo.xp_instance_regread N'HKEY_LOCAL_MACHINE', N'SOFTWARE\Microsoft\MSSQLServer\Setup', N'SQLPath', @SmoRoot OUTPUT
      


SELECT
CAST(case when 'a' <> 'A' then 1 else 0 end AS bit) AS [IsCaseSensitive],
@@MAX_PRECISION AS [MaxPrecision],
@ErrorLogPath AS [ErrorLogPath],
@SmoRoot AS [RootDirectory],
N'Windows' AS [HostPlatform],
N'\' AS [PathSeparator],
CAST(FULLTEXTSERVICEPROPERTY('IsFullTextInstalled') AS bit) AS [IsFullTextInstalled],
@LogPath AS [MasterDBLogPath],
@MasterPath AS [MasterDBPath],
SERVERPROPERTY(N'ProductVersion') AS [VersionString],
CAST(SERVERPROPERTY(N'Edition') AS sysname) AS [Edition],
CAST(SERVERPROPERTY(N'ProductLevel') AS sysname) AS [ProductLevel],
CAST(SERVERPROPERTY('IsSingleUser') AS bit) AS [IsSingleUser],
CAST(SERVERPROPERTY('EngineEdition') AS int) AS [EngineEdition],
convert(sysname, serverproperty(N'collation')) AS [Collation],
CAST(SERVERPROPERTY(N'MachineName') AS sysname) AS [NetName],
CAST(SERVERPROPERTY('IsClustered') AS bit) AS [IsClustered],
SERVERPROPERTY(N'ResourceVersion') AS [ResourceVersionString],
SERVERPROPERTY(N'ResourceLastUpdateDateTime') AS [ResourceLastUpdateDateTime],
SERVERPROPERTY(N'CollationID') AS [CollationID],
SERVERPROPERTY(N'ComparisonStyle') AS [ComparisonStyle],
SERVERPROPERTY(N'SqlCharSet') AS [SqlCharSet],
SERVERPROPERTY(N'SqlCharSetName') AS [SqlCharSetName],
SERVERPROPERTY(N'SqlSortOrder') AS [SqlSortOrder],
SERVERPROPERTY(N'SqlSortOrderName') AS [SqlSortOrderName],
SERVERPROPERTY(N'BuildClrVersion') AS [BuildClrVersionString],
SERVERPROPERTY(N'ComputerNamePhysicalNetBIOS') AS [ComputerNamePhysicalNetBIOS],
CAST(SERVERPROPERTY('IsPolyBaseInstalled') AS bit) AS [IsPolyBaseInstalled]	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.817			
SQL:BatchCompleted	
        declare @MasterPath nvarchar(512)
        declare @LogPath nvarchar(512)
        declare @ErrorLog nvarchar(512)
        declare @ErrorLogPath nvarchar(512)

        select @MasterPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'master'
        select @LogPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'mastlog'
        select @ErrorLog=cast(SERVERPROPERTY(N'errorlogfilename') as nvarchar(512))
        select @ErrorLogPath=substring(@ErrorLog, 1, len(@ErrorLog) - charindex('\', reverse(@ErrorLog)))
      


        declare @SmoRoot nvarchar(512)
        exec master.dbo.xp_instance_regread N'HKEY_LOCAL_MACHINE', N'SOFTWARE\Microsoft\MSSQLServer\Setup', N'SQLPath', @SmoRoot OUTPUT
      


SELECT
CAST(case when 'a' <> 'A' then 1 else 0 end AS bit) AS [IsCaseSensitive],
@@MAX_PRECISION AS [MaxPrecision],
@ErrorLogPath AS [ErrorLogPath],
@SmoRoot AS [RootDirectory],
N'Windows' AS [HostPlatform],
N'\' AS [PathSeparator],
CAST(FULLTEXTSERVICEPROPERTY('IsFullTextInstalled') AS bit) AS [IsFullTextInstalled],
@LogPath AS [MasterDBLogPath],
@MasterPath AS [MasterDBPath],
SERVERPROPERTY(N'ProductVersion') AS [VersionString],
CAST(SERVERPROPERTY(N'Edition') AS sysname) AS [Edition],
CAST(SERVERPROPERTY(N'ProductLevel') AS sysname) AS [ProductLevel],
CAST(SERVERPROPERTY('IsSingleUser') AS bit) AS [IsSingleUser],
CAST(SERVERPROPERTY('EngineEdition') AS int) AS [EngineEdition],
convert(sysname, serverproperty(N'collation')) AS [Collation],
CAST(SERVERPROPERTY(N'MachineName') AS sysname) AS [NetName],
CAST(SERVERPROPERTY('IsClustered') AS bit) AS [IsClustered],
SERVERPROPERTY(N'ResourceVersion') AS [ResourceVersionString],
SERVERPROPERTY(N'ResourceLastUpdateDateTime') AS [ResourceLastUpdateDateTime],
SERVERPROPERTY(N'CollationID') AS [CollationID],
SERVERPROPERTY(N'ComparisonStyle') AS [ComparisonStyle],
SERVERPROPERTY(N'SqlCharSet') AS [SqlCharSet],
SERVERPROPERTY(N'SqlCharSetName') AS [SqlCharSetName],
SERVERPROPERTY(N'SqlSortOrder') AS [SqlSortOrder],
SERVERPROPERTY(N'SqlSortOrderName') AS [SqlSortOrderName],
SERVERPROPERTY(N'BuildClrVersion') AS [BuildClrVersionString],
SERVERPROPERTY(N'ComputerNamePhysicalNetBIOS') AS [ComputerNamePhysicalNetBIOS],
CAST(SERVERPROPERTY('IsPolyBaseInstalled') AS bit) AS [IsPolyBaseInstalled]	Core .Net SqlClient Data Provider		sa	0	5	0	1	2064905136	66	2017-08-04 12:28:57.817	2017-08-04 12:28:57.817		
RPC:Completed	exec sp_executesql N'
        create table #tmp_sp_db_vardecimal_storage_format (dbname sysname null, vardecimal_enabled varchar(3) null)
        if exists (select o.object_id from sys.system_objects o where o.name=N''sp_db_vardecimal_storage_format'')
        begin
        insert into #tmp_sp_db_vardecimal_storage_format exec sys.sp_db_vardecimal_storage_format
        end
      


SELECT

        case
        when vardec.vardecimal_enabled = ''ON'' then cast(1 as bit)
        else cast(0 as bit)
        end
       AS [IsVarDecimalStorageFormatEnabled]
FROM
master.sys.databases AS dtb
LEFT OUTER JOIN #tmp_sp_db_vardecimal_storage_format as vardec ON dtb.database_id = db_id(vardec.dbname)
WHERE
(dtb.name=@_msparam_0)

        drop table #tmp_sp_db_vardecimal_storage_format
      
',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'master'	Core .Net SqlClient Data Provider		sa	16	469	1	6	2064905136	66	2017-08-04 12:28:57.820	2017-08-04 12:28:57.827		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.867			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.867	2017-08-04 12:28:57.867		
RPC:Completed	exec sp_executesql N'SELECT
sp.name AS [Name]
FROM
sys.database_scoped_configurations AS sp
WHERE
(sp.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'MAXDOP'	Core .Net SqlClient Data Provider		sa	0	8	0	0	2064905136	66	2017-08-04 12:28:57.867	2017-08-04 12:28:57.867		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.870			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.870	2017-08-04 12:28:57.870		
RPC:Completed	exec sp_executesql N'SELECT
sp.name AS [Name],
sp.configuration_id AS [Id],
CAST(
      CASE
        WHEN SQL_VARIANT_PROPERTY(value,''BaseType'') = ''bit'' THEN 
          CASE value
            WHEN 1 THEN ''ON''
            WHEN 0 THEN ''OFF''
          END
        ELSE ISNULL(value, ''NULL'')
      END
     AS nvarchar(200)) AS [Value],
CAST(
      CASE
        WHEN SQL_VARIANT_PROPERTY(value_for_secondary,''BaseType'') = ''bit'' THEN
          CASE value_for_secondary
            WHEN 1 THEN ''ON''
            WHEN 0 THEN ''OFF''
          END
        ELSE ISNULL(value_for_secondary, ''PRIMARY'')
      END
     AS nvarchar(200)) AS [ValueForSecondary]
FROM
sys.database_scoped_configurations AS sp
WHERE
(sp.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'MAXDOP'	Core .Net SqlClient Data Provider		sa	0	10	0	0	2064905136	66	2017-08-04 12:28:57.873	2017-08-04 12:28:57.873		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.877			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.877	2017-08-04 12:28:57.877		
RPC:Completed	exec sp_executesql N'SELECT
sp.name AS [Name]
FROM
sys.database_scoped_configurations AS sp
WHERE
(sp.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'Legacy_Cardinality_Estimation'	Core .Net SqlClient Data Provider		sa	0	8	0	0	2064905136	66	2017-08-04 12:28:57.880	2017-08-04 12:28:57.880		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.880			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.880	2017-08-04 12:28:57.880		
RPC:Completed	exec sp_executesql N'SELECT
sp.name AS [Name],
sp.configuration_id AS [Id],
CAST(
      CASE
        WHEN SQL_VARIANT_PROPERTY(value,''BaseType'') = ''bit'' THEN 
          CASE value
            WHEN 1 THEN ''ON''
            WHEN 0 THEN ''OFF''
          END
        ELSE ISNULL(value, ''NULL'')
      END
     AS nvarchar(200)) AS [Value],
CAST(
      CASE
        WHEN SQL_VARIANT_PROPERTY(value_for_secondary,''BaseType'') = ''bit'' THEN
          CASE value_for_secondary
            WHEN 1 THEN ''ON''
            WHEN 0 THEN ''OFF''
          END
        ELSE ISNULL(value_for_secondary, ''PRIMARY'')
      END
     AS nvarchar(200)) AS [ValueForSecondary]
FROM
sys.database_scoped_configurations AS sp
WHERE
(sp.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'Legacy_Cardinality_Estimation'	Core .Net SqlClient Data Provider		sa	0	10	0	0	2064905136	66	2017-08-04 12:28:57.880	2017-08-04 12:28:57.880		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.883			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.883	2017-08-04 12:28:57.883		
RPC:Completed	exec sp_executesql N'SELECT
sp.name AS [Name]
FROM
sys.database_scoped_configurations AS sp
WHERE
(sp.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'Parameter_Sniffing'	Core .Net SqlClient Data Provider		sa	0	8	0	0	2064905136	66	2017-08-04 12:28:57.887	2017-08-04 12:28:57.887		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.890			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.890	2017-08-04 12:28:57.890		
RPC:Completed	exec sp_executesql N'SELECT
sp.name AS [Name],
sp.configuration_id AS [Id],
CAST(
      CASE
        WHEN SQL_VARIANT_PROPERTY(value,''BaseType'') = ''bit'' THEN 
          CASE value
            WHEN 1 THEN ''ON''
            WHEN 0 THEN ''OFF''
          END
        ELSE ISNULL(value, ''NULL'')
      END
     AS nvarchar(200)) AS [Value],
CAST(
      CASE
        WHEN SQL_VARIANT_PROPERTY(value_for_secondary,''BaseType'') = ''bit'' THEN
          CASE value_for_secondary
            WHEN 1 THEN ''ON''
            WHEN 0 THEN ''OFF''
          END
        ELSE ISNULL(value_for_secondary, ''PRIMARY'')
      END
     AS nvarchar(200)) AS [ValueForSecondary]
FROM
sys.database_scoped_configurations AS sp
WHERE
(sp.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'Parameter_Sniffing'	Core .Net SqlClient Data Provider		sa	0	10	0	0	2064905136	66	2017-08-04 12:28:57.890	2017-08-04 12:28:57.890		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.893			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.893	2017-08-04 12:28:57.893		
RPC:Completed	exec sp_executesql N'SELECT
sp.name AS [Name]
FROM
sys.database_scoped_configurations AS sp
WHERE
(sp.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'Query_Optimizer_Hotfixes'	Core .Net SqlClient Data Provider		sa	0	8	0	0	2064905136	66	2017-08-04 12:28:57.893	2017-08-04 12:28:57.893		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.897			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.897	2017-08-04 12:28:57.897		
RPC:Completed	exec sp_executesql N'SELECT
sp.name AS [Name],
sp.configuration_id AS [Id],
CAST(
      CASE
        WHEN SQL_VARIANT_PROPERTY(value,''BaseType'') = ''bit'' THEN 
          CASE value
            WHEN 1 THEN ''ON''
            WHEN 0 THEN ''OFF''
          END
        ELSE ISNULL(value, ''NULL'')
      END
     AS nvarchar(200)) AS [Value],
CAST(
      CASE
        WHEN SQL_VARIANT_PROPERTY(value_for_secondary,''BaseType'') = ''bit'' THEN
          CASE value_for_secondary
            WHEN 1 THEN ''ON''
            WHEN 0 THEN ''OFF''
          END
        ELSE ISNULL(value_for_secondary, ''PRIMARY'')
      END
     AS nvarchar(200)) AS [ValueForSecondary]
FROM
sys.database_scoped_configurations AS sp
WHERE
(sp.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'Query_Optimizer_Hotfixes'	Core .Net SqlClient Data Provider		sa	0	10	0	0	2064905136	66	2017-08-04 12:28:57.897	2017-08-04 12:28:57.897	0X00000000040000001A00730070005F006500780065006300750074006500730071006C009A05000082001A00E7206E0076006100720063006800610072002800360039003700290072050000530045004C004500430054000A00730070002E006E0061006D00650020004100530020005B004E0061006D0065005D002C000A00730070002E0063006F006E00660069006700750072006100740069006F006E005F006900640020004100530020005B00490064005D002C000A00430041005300540028000A0020002000200020002000200043004100530045000A00200020002000200020002000200020005700480045004E002000530051004C005F005600	
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.903			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.903	2017-08-04 12:28:57.903		
SQL:BatchStarting	
        DECLARE @is_policy_automation_enabled bit
        SET @is_policy_automation_enabled  = (SELECT CONVERT(bit, current_value)
        FROM msdb.dbo.syspolicy_configuration
        WHERE name = 'Enabled')
      


SELECT
CAST(cast(g.name as varbinary(256)) AS sysname) AS [Name],
g.data_space_id AS [ID],
CAST(g.is_default AS bit) AS [IsDefault],
g.is_read_only AS [ReadOnly],
CAST(ISNULL((select sum(cast(gs.size as float))*convert(float,8) from sys.database_files gs where gs.data_space_id = g.data_space_id), 0) AS float) AS [Size],
CASE g.type WHEN 'FG' THEN 0 WHEN 'PS' THEN 1 WHEN 'FD' THEN 2 WHEN 'FX' THEN 3 END AS [FileGroupType],
CAST(CASE WHEN 'FD'=g.type THEN 1 ELSE 0 END AS bit) AS [IsFileStream],
case when 1=@is_policy_automation_enabled and exists (select * from msdb.dbo.syspolicy_system_health_state where target_query_expression_with_id like 'Server' + '/Database\[@ID=' + convert(nvarchar(20),dtb.database_id) + '\]'+ '/FileGroup\[@ID=' + convert(nvarchar(20),g.data_space_id) + '\]%' ESCAPE '\') then 1 else 0 end AS [PolicyHealthState]
FROM
master.sys.databases AS dtb,
sys.filegroups AS g
WHERE
(dtb.name=db_name())
ORDER BY
[Name] ASC	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.907			
SQL:BatchCompleted	
        DECLARE @is_policy_automation_enabled bit
        SET @is_policy_automation_enabled  = (SELECT CONVERT(bit, current_value)
        FROM msdb.dbo.syspolicy_configuration
        WHERE name = 'Enabled')
      


SELECT
CAST(cast(g.name as varbinary(256)) AS sysname) AS [Name],
g.data_space_id AS [ID],
CAST(g.is_default AS bit) AS [IsDefault],
g.is_read_only AS [ReadOnly],
CAST(ISNULL((select sum(cast(gs.size as float))*convert(float,8) from sys.database_files gs where gs.data_space_id = g.data_space_id), 0) AS float) AS [Size],
CASE g.type WHEN 'FG' THEN 0 WHEN 'PS' THEN 1 WHEN 'FD' THEN 2 WHEN 'FX' THEN 3 END AS [FileGroupType],
CAST(CASE WHEN 'FD'=g.type THEN 1 ELSE 0 END AS bit) AS [IsFileStream],
case when 1=@is_policy_automation_enabled and exists (select * from msdb.dbo.syspolicy_system_health_state where target_query_expression_with_id like 'Server' + '/Database\[@ID=' + convert(nvarchar(20),dtb.database_id) + '\]'+ '/FileGroup\[@ID=' + convert(nvarchar(20),g.data_space_id) + '\]%' ESCAPE '\') then 1 else 0 end AS [PolicyHealthState]
FROM
master.sys.databases AS dtb,
sys.filegroups AS g
WHERE
(dtb.name=db_name())
ORDER BY
[Name] ASC	Core .Net SqlClient Data Provider		sa	0	14	0	0	2064905136	66	2017-08-04 12:28:57.907	2017-08-04 12:28:57.907		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.913			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.913	2017-08-04 12:28:57.913		
RPC:Completed	exec sp_executesql N'  with s as (
select df.[type] as [type],
df.name collate database_default as name,
df.drop_lsn as drop_lsn,
dtb.database_id as database_id, 
df.[file_id] as [file_id],
df.max_size as max_size, 
df.growth as growth,
df.is_percent_growth as is_percent_growth,
df.is_media_read_only as is_media_read_only,
df.is_read_only as is_read_only,
df.[state] as [state],
df.is_sparse as is_sparse,
df.data_space_id as data_space_id,
df.physical_name collate database_default as physical_name,
df.size as size
    from sys.database_files as df inner join sys.databases as dtb 
         on (db_id() = dtb.database_id) 
              and (df.type = 2 or df.type = 0) 
              and (df.drop_lsn is null) 
         where
              (dtb.source_database_id is null)
union
select 
mf.[type] as [type],
mf.name collate database_default as name,
mf.drop_lsn as drop_lsn,
mf.database_id as database_id,
mf.[file_id] as [file_id],
mf.max_size as max_size,
mf.growth as growth,
mf.is_percent_growth as is_percent_growth,
mf.is_media_read_only as is_media_read_only,
mf.is_read_only as is_read_only,
mf.[state] as [state],
mf.is_sparse as is_sparse,
mf.data_space_id as data_space_id,
mf.physical_name collate database_default as physical_name,
mf.size as size 
    from sys.master_files as mf inner join sys.databases as db
       on (mf.database_id = db.database_id)
          and (mf.type = 2 or mf.type = 0) 
          and (mf.drop_lsn is null)           
          and (db.source_database_id is not null)
       where mf.database_id = db_id()) 
            


SELECT
s.name AS [Name],
CAST(CASE s.file_id WHEN 1 THEN 1 ELSE 0 END AS bit) AS [IsPrimaryFile],
CAST(CASE when s.growth=0 THEN (CASE WHEN s.type = 2 THEN 0 ELSE 99 END) ELSE s.is_percent_growth END AS int) AS [GrowthType],
s.physical_name AS [FileName],
s.size * CONVERT(float,8) AS [Size],
CASE when s.max_size=-1 then -1 else s.max_size * CONVERT(float,8) END AS [MaxSize],
s.file_id AS [ID],
''Server[@Name='' + quotename(CAST(
        serverproperty(N''Servername'')
       AS sysname),'''''''') + '']'' + ''/Database[@Name='' + quotename(db_name(),'''''''') + '']'' + ''/FileGroup[@Name='' + quotename(CAST(cast(g.name as varbinary(256)) AS sysname),'''''''') + '']'' + ''/File[@Name='' + quotename(s.name,'''''''') + '']'' AS [Urn],
CAST(CASE s.is_percent_growth WHEN 1 THEN s.growth ELSE s.growth*8 END AS float) AS [Growth],
s.is_media_read_only AS [IsReadOnlyMedia],
s.is_read_only AS [IsReadOnly],
CAST(case s.state when 6 then 1 else 0 end AS bit) AS [IsOffline],
s.is_sparse AS [IsSparse]
FROM
sys.filegroups AS g
INNER JOIN s ON s.data_space_id=g.data_space_id
WHERE
(CAST(cast(g.name as varbinary(256)) AS sysname)=@_msparam_0)
ORDER BY
[Name] ASC',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'PRIMARY'	Core .Net SqlClient Data Provider		sa	0	12	0	0	2064905136	66	2017-08-04 12:28:57.917	2017-08-04 12:28:57.917		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.943			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	2064905136	66	2017-08-04 12:28:57.943	2017-08-04 12:28:57.943		
SQL:BatchStarting	SELECT
s.name AS [Name],
CAST(FILEPROPERTY(s.name, 'SpaceUsed') AS float)* CONVERT(float,8) AS [UsedSpace],
CAST(CASE when s.growth=0 THEN (CASE WHEN s.type = 2 THEN 0 ELSE 99 END) ELSE s.is_percent_growth END AS int) AS [GrowthType],
s.physical_name AS [FileName],
s.size * CONVERT(float,8) AS [Size],
CASE when s.max_size=-1 then -1 else s.max_size * CONVERT(float,8) END AS [MaxSize],
s.file_id AS [ID],
'Server[@Name=' + quotename(CAST(
        serverproperty(N'Servername')
       AS sysname),'''') + ']' + '/Database[@Name=' + quotename(db_name(),'''') + ']' + '/LogFile[@Name=' + quotename(s.name,'''') + ']' AS [Urn],
CAST(CASE s.is_percent_growth WHEN 1 THEN s.growth ELSE s.growth*8 END AS float) AS [Growth],
s.is_media_read_only AS [IsReadOnlyMedia],
s.is_read_only AS [IsReadOnly],
CAST(case s.state when 6 then 1 else 0 end AS bit) AS [IsOffline],
s.is_sparse AS [IsSparse]
FROM
sys.database_files AS s
WHERE
(s.type = 1)
ORDER BY
[Name] ASC	Core .Net SqlClient Data Provider		sa					2064905136	66	2017-08-04 12:28:57.943			
SQL:BatchCompleted	SELECT
s.name AS [Name],
CAST(FILEPROPERTY(s.name, 'SpaceUsed') AS float)* CONVERT(float,8) AS [UsedSpace],
CAST(CASE when s.growth=0 THEN (CASE WHEN s.type = 2 THEN 0 ELSE 99 END) ELSE s.is_percent_growth END AS int) AS [GrowthType],
s.physical_name AS [FileName],
s.size * CONVERT(float,8) AS [Size],
CASE when s.max_size=-1 then -1 else s.max_size * CONVERT(float,8) END AS [MaxSize],
s.file_id AS [ID],
'Server[@Name=' + quotename(CAST(
        serverproperty(N'Servername')
       AS sysname),'''') + ']' + '/Database[@Name=' + quotename(db_name(),'''') + ']' + '/LogFile[@Name=' + quotename(s.name,'''') + ']' AS [Urn],
CAST(CASE s.is_percent_growth WHEN 1 THEN s.growth ELSE s.growth*8 END AS float) AS [Growth],
s.is_media_read_only AS [IsReadOnlyMedia],
s.is_read_only AS [IsReadOnly],
CAST(case s.state when 6 then 1 else 0 end AS bit) AS [IsOffline],
s.is_sparse AS [IsSparse]
FROM
sys.database_files AS s
WHERE
(s.type = 1)
ORDER BY
[Name] ASC	Core .Net SqlClient Data Provider		sa	0	6	0	0	2064905136	66	2017-08-04 12:28:57.943	2017-08-04 12:28:57.943		
Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	carbon		sa					2064905136	67	2017-08-04 12:28:57.980			
SQL:BatchStarting	SELECT s.name AS schema_name, o.[name] AS object_name, o.[type] AS object_type
                  FROM sys.all_objects o
                    INNER JOIN sys.schemas s ON o.schema_id = s.schema_id
                  WHERE (o.[type] = 'P' OR o.[type] = 'V' OR o.[type] = 'U') ORDER BY object_type, schema_name, object_name	carbon		sa					2064905136	67	2017-08-04 12:28:57.980			
SQL:BatchCompleted	SELECT s.name AS schema_name, o.[name] AS object_name, o.[type] AS object_type
                  FROM sys.all_objects o
                    INNER JOIN sys.schemas s ON o.schema_id = s.schema_id
                  WHERE (o.[type] = 'P' OR o.[type] = 'V' OR o.[type] = 'U') ORDER BY object_type, schema_name, object_name	carbon		sa	31	100	0	42	2064905136	67	2017-08-04 12:28:57.980	2017-08-04 12:28:58.023		
Audit Logout		carbon		sa	31	100	0	438790	2064905136	67	2017-08-04 12:28:57.980	2017-08-04 12:36:16.770		
Audit Logout		carbon		sa	16	187	0	495447	2064905136	63	2017-08-04 12:28:56.763	2017-08-04 12:37:12.210		
Audit Logout		carbon		sa	0	5	0	495374	2064905136	65	2017-08-04 12:28:56.837	2017-08-04 12:37:12.210		
Audit Logout		carbon		sa	0	15	0	495664	2064905136	62	2017-08-04 12:28:56.547	2017-08-04 12:37:12.210		
Audit Logout		Core .Net SqlClient Data Provider		sa	47	1113	2	494910	2064905136	66	2017-08-04 12:28:57.300	2017-08-04 12:37:12.210		
Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	carbon		sa					1881496663	51	2017-08-04 14:13:03.783			
SQL:BatchStarting	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa					1881496663	51	2017-08-04 14:13:03.933			
SQL:BatchCompleted	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa	0	5	0	0	1881496663	51	2017-08-04 14:13:03.933	2017-08-04 14:13:03.933		
SQL:BatchStarting	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa					1881496663	51	2017-08-04 14:13:04.000			
SQL:BatchCompleted	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa	0	0	0	0	1881496663	51	2017-08-04 14:13:04.000	2017-08-04 14:13:04.000		
SQL:BatchStarting	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa					1881496663	51	2017-08-04 14:13:04.003			
SQL:BatchCompleted	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa	0	5	0	0	1881496663	51	2017-08-04 14:13:04.003	2017-08-04 14:13:04.003		
SQL:BatchStarting	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa					1881496663	51	2017-08-04 14:13:04.007			
SQL:BatchCompleted	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa	0	0	0	0	1881496663	51	2017-08-04 14:13:04.007	2017-08-04 14:13:04.007		
SQL:BatchStarting	SELECT CONVERT(NVARCHAR(36), CONTEXT_INFO())	carbon		sa					1881496663	51	2017-08-04 14:13:04.013			
SQL:BatchCompleted	SELECT CONVERT(NVARCHAR(36), CONTEXT_INFO())	carbon		sa	0	0	0	0	1881496663	51	2017-08-04 14:13:04.013	2017-08-04 14:13:04.013		
SQL:BatchStarting	set LOCK_TIMEOUT 5000	carbon		sa					1881496663	51	2017-08-04 14:13:04.023			
SQL:BatchCompleted	set LOCK_TIMEOUT 5000	carbon		sa	0	0	0	0	1881496663	51	2017-08-04 14:13:04.023	2017-08-04 14:13:04.023		
SQL:BatchStarting	SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;
SET NUMERIC_ROUNDABORT OFF;	carbon		sa					1881496663	51	2017-08-04 14:13:04.030			
SQL:BatchCompleted	SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;
SET NUMERIC_ROUNDABORT OFF;	carbon		sa	0	0	0	0	1881496663	51	2017-08-04 14:13:04.030	2017-08-04 14:13:04.030		
SQL:BatchStarting	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa					1881496663	51	2017-08-04 14:13:04.040			
SQL:BatchCompleted	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa	0	5	0	0	1881496663	51	2017-08-04 14:13:04.040	2017-08-04 14:13:04.040		
SQL:BatchStarting	SELECT OSVersion = RIGHT(@@version, LEN(@@version)- 3 -charindex (' ON ', @@version))	carbon		sa					1881496663	51	2017-08-04 14:13:04.043			
SQL:BatchCompleted	SELECT OSVersion = RIGHT(@@version, LEN(@@version)- 3 -charindex (' ON ', @@version))	carbon		sa	0	0	0	0	1881496663	51	2017-08-04 14:13:04.043	2017-08-04 14:13:04.043		
Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	carbon		sa					1881496663	56	2017-08-04 14:13:04.133			
SQL:BatchStarting	DECLARE @edition sysname; SET @edition = cast(SERVERPROPERTY(N'EDITION') as sysname); select case when @edition = N'SQL Azure' then 2 else 1 end as 'DatabaseEngineType';
SELECT SERVERPROPERTY('EngineEdition') AS DatabaseEngineEdition
select N'Windows' as host_platform
	carbon		sa					1881496663	56	2017-08-04 14:13:04.513			
SQL:BatchCompleted	DECLARE @edition sysname; SET @edition = cast(SERVERPROPERTY(N'EDITION') as sysname); select case when @edition = N'SQL Azure' then 2 else 1 end as 'DatabaseEngineType';
SELECT SERVERPROPERTY('EngineEdition') AS DatabaseEngineEdition
select N'Windows' as host_platform
	carbon		sa	0	0	0	0	1881496663	56	2017-08-04 14:13:04.513	2017-08-04 14:13:04.513		
SQL:BatchStarting	select SERVERPROPERTY(N'servername')	carbon		sa					1881496663	56	2017-08-04 14:13:04.657			
SQL:BatchCompleted	select SERVERPROPERTY(N'servername')	carbon		sa	0	0	0	0	1881496663	56	2017-08-04 14:13:04.657	2017-08-04 14:13:04.657		
SQL:BatchStarting	use [master];
if (db_id() = 1)
begin
-- contained auth is 0 when connected to master
select 0
end
else
begin
-- need dynamic sql so that we compile this query only when we know resource db is available
exec('select case when authenticating_database_id = 1 then 0 else 1 end from
sys.dm_exec_sessions where session_id = @@SPID')
end;use [master]; --resetting the context	carbon		sa					1881496663	56	2017-08-04 14:13:04.683			
SQL:BatchCompleted	use [master];
if (db_id() = 1)
begin
-- contained auth is 0 when connected to master
select 0
end
else
begin
-- need dynamic sql so that we compile this query only when we know resource db is available
exec('select case when authenticating_database_id = 1 then 0 else 1 end from
sys.dm_exec_sessions where session_id = @@SPID')
end;use [master]; --resetting the context	carbon		sa	0	0	0	0	1881496663	56	2017-08-04 14:13:04.683	2017-08-04 14:13:04.683		
SQL:BatchStarting	SELECT
CAST(
        serverproperty(N'Servername')
       AS sysname) AS [Name]	carbon		sa					1881496663	56	2017-08-04 14:13:04.873			
SQL:BatchCompleted	SELECT
CAST(
        serverproperty(N'Servername')
       AS sysname) AS [Name]	carbon		sa	0	0	0	0	1881496663	56	2017-08-04 14:13:04.873	2017-08-04 14:13:04.873		
SQL:BatchStarting	
        declare @MasterPath nvarchar(512)
        declare @LogPath nvarchar(512)
        declare @ErrorLog nvarchar(512)
        declare @ErrorLogPath nvarchar(512)

        select @MasterPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'master'
        select @LogPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'mastlog'
        select @ErrorLog=cast(SERVERPROPERTY(N'errorlogfilename') as nvarchar(512))
        select @ErrorLogPath=substring(@ErrorLog, 1, len(@ErrorLog) - charindex('\', reverse(@ErrorLog)))
      


        declare @SmoRoot nvarchar(512)
        exec master.dbo.xp_instance_regread N'HKEY_LOCAL_MACHINE', N'SOFTWARE\Microsoft\MSSQLServer\Setup', N'SQLPath', @SmoRoot OUTPUT
      


SELECT
CAST(case when 'a' <> 'A' then 1 else 0 end AS bit) AS [IsCaseSensitive],
@@MAX_PRECISION AS [MaxPrecision],
@ErrorLogPath AS [ErrorLogPath],
@SmoRoot AS [RootDirectory],
N'Windows' AS [HostPlatform],
N'\' AS [PathSeparator],
CAST(FULLTEXTSERVICEPROPERTY('IsFullTextInstalled') AS bit) AS [IsFullTextInstalled],
@LogPath AS [MasterDBLogPath],
@MasterPath AS [MasterDBPath],
SERVERPROPERTY(N'ProductVersion') AS [VersionString],
CAST(SERVERPROPERTY(N'Edition') AS sysname) AS [Edition],
CAST(SERVERPROPERTY(N'ProductLevel') AS sysname) AS [ProductLevel],
CAST(SERVERPROPERTY('IsSingleUser') AS bit) AS [IsSingleUser],
CAST(SERVERPROPERTY('EngineEdition') AS int) AS [EngineEdition],
convert(sysname, serverproperty(N'collation')) AS [Collation],
CAST(SERVERPROPERTY(N'MachineName') AS sysname) AS [NetName],
CAST(SERVERPROPERTY('IsClustered') AS bit) AS [IsClustered],
SERVERPROPERTY(N'ResourceVersion') AS [ResourceVersionString],
SERVERPROPERTY(N'ResourceLastUpdateDateTime') AS [ResourceLastUpdateDateTime],
SERVERPROPERTY(N'CollationID') AS [CollationID],
SERVERPROPERTY(N'ComparisonStyle') AS [ComparisonStyle],
SERVERPROPERTY(N'SqlCharSet') AS [SqlCharSet],
SERVERPROPERTY(N'SqlCharSetName') AS [SqlCharSetName],
SERVERPROPERTY(N'SqlSortOrder') AS [SqlSortOrder],
SERVERPROPERTY(N'SqlSortOrderName') AS [SqlSortOrderName],
SERVERPROPERTY(N'BuildClrVersion') AS [BuildClrVersionString],
SERVERPROPERTY(N'ComputerNamePhysicalNetBIOS') AS [ComputerNamePhysicalNetBIOS],
CAST(SERVERPROPERTY('IsPolyBaseInstalled') AS bit) AS [IsPolyBaseInstalled]	carbon		sa					1881496663	56	2017-08-04 14:13:04.937			
SQL:BatchCompleted	
        declare @MasterPath nvarchar(512)
        declare @LogPath nvarchar(512)
        declare @ErrorLog nvarchar(512)
        declare @ErrorLogPath nvarchar(512)

        select @MasterPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'master'
        select @LogPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'mastlog'
        select @ErrorLog=cast(SERVERPROPERTY(N'errorlogfilename') as nvarchar(512))
        select @ErrorLogPath=substring(@ErrorLog, 1, len(@ErrorLog) - charindex('\', reverse(@ErrorLog)))
      


        declare @SmoRoot nvarchar(512)
        exec master.dbo.xp_instance_regread N'HKEY_LOCAL_MACHINE', N'SOFTWARE\Microsoft\MSSQLServer\Setup', N'SQLPath', @SmoRoot OUTPUT
      


SELECT
CAST(case when 'a' <> 'A' then 1 else 0 end AS bit) AS [IsCaseSensitive],
@@MAX_PRECISION AS [MaxPrecision],
@ErrorLogPath AS [ErrorLogPath],
@SmoRoot AS [RootDirectory],
N'Windows' AS [HostPlatform],
N'\' AS [PathSeparator],
CAST(FULLTEXTSERVICEPROPERTY('IsFullTextInstalled') AS bit) AS [IsFullTextInstalled],
@LogPath AS [MasterDBLogPath],
@MasterPath AS [MasterDBPath],
SERVERPROPERTY(N'ProductVersion') AS [VersionString],
CAST(SERVERPROPERTY(N'Edition') AS sysname) AS [Edition],
CAST(SERVERPROPERTY(N'ProductLevel') AS sysname) AS [ProductLevel],
CAST(SERVERPROPERTY('IsSingleUser') AS bit) AS [IsSingleUser],
CAST(SERVERPROPERTY('EngineEdition') AS int) AS [EngineEdition],
convert(sysname, serverproperty(N'collation')) AS [Collation],
CAST(SERVERPROPERTY(N'MachineName') AS sysname) AS [NetName],
CAST(SERVERPROPERTY('IsClustered') AS bit) AS [IsClustered],
SERVERPROPERTY(N'ResourceVersion') AS [ResourceVersionString],
SERVERPROPERTY(N'ResourceLastUpdateDateTime') AS [ResourceLastUpdateDateTime],
SERVERPROPERTY(N'CollationID') AS [CollationID],
SERVERPROPERTY(N'ComparisonStyle') AS [ComparisonStyle],
SERVERPROPERTY(N'SqlCharSet') AS [SqlCharSet],
SERVERPROPERTY(N'SqlCharSetName') AS [SqlCharSetName],
SERVERPROPERTY(N'SqlSortOrder') AS [SqlSortOrder],
SERVERPROPERTY(N'SqlSortOrderName') AS [SqlSortOrderName],
SERVERPROPERTY(N'BuildClrVersion') AS [BuildClrVersionString],
SERVERPROPERTY(N'ComputerNamePhysicalNetBIOS') AS [ComputerNamePhysicalNetBIOS],
CAST(SERVERPROPERTY('IsPolyBaseInstalled') AS bit) AS [IsPolyBaseInstalled]	carbon		sa	0	5	0	2	1881496663	56	2017-08-04 14:13:04.937	2017-08-04 14:13:04.940		
RPC:Completed	exec sp_executesql N'SELECT
dtb.collation_name AS [Collation],
dtb.name AS [DatabaseName2]
FROM
master.sys.databases AS dtb
WHERE
(dtb.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'master'	carbon		sa	0	8	0	0	1881496663	56	2017-08-04 14:13:05.107	2017-08-04 14:13:05.107		
SQL:BatchStarting	SELECT
dtb.name AS [Name],
dtb.database_id AS [ID],
CAST(case when dtb.name in ('master','model','msdb','tempdb') then 1 else dtb.is_distributor end AS bit) AS [IsSystemObject],
dtb.collation_name AS [Collation],
CAST(has_dbaccess(dtb.name) AS bit) AS [IsAccessible],
dtb.name AS [DatabaseName2]
FROM
master.sys.databases AS dtb
ORDER BY
[Name] ASC	carbon		sa					1881496663	56	2017-08-04 14:13:05.150			
SQL:BatchCompleted	SELECT
dtb.name AS [Name],
dtb.database_id AS [ID],
CAST(case when dtb.name in ('master','model','msdb','tempdb') then 1 else dtb.is_distributor end AS bit) AS [IsSystemObject],
dtb.collation_name AS [Collation],
CAST(has_dbaccess(dtb.name) AS bit) AS [IsAccessible],
dtb.name AS [DatabaseName2]
FROM
master.sys.databases AS dtb
ORDER BY
[Name] ASC	carbon		sa	16	174	0	13	1881496663	56	2017-08-04 14:13:05.150	2017-08-04 14:13:05.163		
Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	carbon		sa					1881496663	57	2017-08-04 14:13:07.510			
SQL:BatchStarting	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa					1881496663	57	2017-08-04 14:13:07.513			
SQL:BatchCompleted	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa	0	5	0	0	1881496663	57	2017-08-04 14:13:07.513	2017-08-04 14:13:07.513		
SQL:BatchStarting	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa					1881496663	57	2017-08-04 14:13:07.520			
SQL:BatchCompleted	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa	0	0	0	0	1881496663	57	2017-08-04 14:13:07.520	2017-08-04 14:13:07.520		
SQL:BatchStarting	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa					1881496663	57	2017-08-04 14:13:07.523			
SQL:BatchCompleted	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa	0	5	0	0	1881496663	57	2017-08-04 14:13:07.523	2017-08-04 14:13:07.523		
SQL:BatchStarting	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa					1881496663	57	2017-08-04 14:13:07.527			
SQL:BatchCompleted	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa	0	0	0	0	1881496663	57	2017-08-04 14:13:07.527	2017-08-04 14:13:07.527		
SQL:BatchStarting	SELECT CONVERT(NVARCHAR(36), CONTEXT_INFO())	carbon		sa					1881496663	57	2017-08-04 14:13:07.530			
SQL:BatchCompleted	SELECT CONVERT(NVARCHAR(36), CONTEXT_INFO())	carbon		sa	0	0	0	0	1881496663	57	2017-08-04 14:13:07.530	2017-08-04 14:13:07.530		
SQL:BatchStarting	set LOCK_TIMEOUT 5000	carbon		sa					1881496663	57	2017-08-04 14:13:07.530			
SQL:BatchCompleted	set LOCK_TIMEOUT 5000	carbon		sa	0	0	0	0	1881496663	57	2017-08-04 14:13:07.530	2017-08-04 14:13:07.530		
SQL:BatchStarting	SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;
SET NUMERIC_ROUNDABORT OFF;	carbon		sa					1881496663	57	2017-08-04 14:13:07.533			
SQL:BatchCompleted	SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;
SET NUMERIC_ROUNDABORT OFF;	carbon		sa	0	0	0	0	1881496663	57	2017-08-04 14:13:07.533	2017-08-04 14:13:07.533		
SQL:BatchStarting	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa					1881496663	57	2017-08-04 14:13:07.537			
SQL:BatchCompleted	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa	0	5	0	0	1881496663	57	2017-08-04 14:13:07.537	2017-08-04 14:13:07.537		
SQL:BatchStarting	SELECT OSVersion = RIGHT(@@version, LEN(@@version)- 3 -charindex (' ON ', @@version))	carbon		sa					1881496663	57	2017-08-04 14:13:07.543			
SQL:BatchCompleted	SELECT OSVersion = RIGHT(@@version, LEN(@@version)- 3 -charindex (' ON ', @@version))	carbon		sa	0	0	0	0	1881496663	57	2017-08-04 14:13:07.543	2017-08-04 14:13:07.543		
SQL:BatchStarting	DECLARE @edition sysname; SET @edition = cast(SERVERPROPERTY(N'EDITION') as sysname); select case when @edition = N'SQL Azure' then 2 else 1 end as 'DatabaseEngineType';
SELECT SERVERPROPERTY('EngineEdition') AS DatabaseEngineEdition
select N'Windows' as host_platform
	carbon		sa					1881496663	57	2017-08-04 14:13:09.263			
SQL:BatchCompleted	DECLARE @edition sysname; SET @edition = cast(SERVERPROPERTY(N'EDITION') as sysname); select case when @edition = N'SQL Azure' then 2 else 1 end as 'DatabaseEngineType';
SELECT SERVERPROPERTY('EngineEdition') AS DatabaseEngineEdition
select N'Windows' as host_platform
	carbon		sa	0	0	0	0	1881496663	57	2017-08-04 14:13:09.263	2017-08-04 14:13:09.263		
SQL:BatchStarting	use [master];
if (db_id() = 1)
begin
-- contained auth is 0 when connected to master
select 0
end
else
begin
-- need dynamic sql so that we compile this query only when we know resource db is available
exec('select case when authenticating_database_id = 1 then 0 else 1 end from
sys.dm_exec_sessions where session_id = @@SPID')
end;use [master]; --resetting the context	carbon		sa					1881496663	57	2017-08-04 14:13:09.270			
SQL:BatchCompleted	use [master];
if (db_id() = 1)
begin
-- contained auth is 0 when connected to master
select 0
end
else
begin
-- need dynamic sql so that we compile this query only when we know resource db is available
exec('select case when authenticating_database_id = 1 then 0 else 1 end from
sys.dm_exec_sessions where session_id = @@SPID')
end;use [master]; --resetting the context	carbon		sa	0	0	0	0	1881496663	57	2017-08-04 14:13:09.270	2017-08-04 14:13:09.270		
RPC:Completed	exec sp_executesql N'SELECT
dtb.collation_name AS [Collation],
dtb.name AS [DatabaseName2]
FROM
master.sys.databases AS dtb
WHERE
(dtb.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'master'	carbon		sa	0	8	0	0	1881496663	57	2017-08-04 14:13:09.273	2017-08-04 14:13:09.273		
SQL:BatchStarting	select SERVERPROPERTY(N'servername')	carbon		sa					1881496663	57	2017-08-04 14:13:09.277			
SQL:BatchCompleted	select SERVERPROPERTY(N'servername')	carbon		sa	0	0	0	0	1881496663	57	2017-08-04 14:13:09.277	2017-08-04 14:13:09.277		
RPC:Completed	exec sp_executesql N'SELECT
dtb.name AS [Name]
FROM
master.sys.databases AS dtb
WHERE
((CAST(case when dtb.name in (''master'',''model'',''msdb'',''tempdb'') then 1 else dtb.is_distributor end AS bit)=@_msparam_0))
ORDER BY
[Name] ASC',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'0'	carbon		sa	16	486	0	8	1881496663	57	2017-08-04 14:13:09.283	2017-08-04 14:13:09.290		
Audit Logout		carbon		sa	16	509	0	892300	1881496663	57	2017-08-04 14:13:07.510	2017-08-04 14:27:59.810		
Audit Logout		carbon		sa	0	15	0	896027	1881496663	51	2017-08-04 14:13:03.783	2017-08-04 14:27:59.810		
Audit Logout		carbon		sa	16	187	0	895677	1881496663	56	2017-08-04 14:13:04.133	2017-08-04 14:27:59.810		
Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	carbon		sa					1239302740	56	2017-08-04 14:30:06.520			
SQL:BatchStarting	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa					1239302740	56	2017-08-04 14:30:06.617			
SQL:BatchCompleted	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa	0	5	0	0	1239302740	56	2017-08-04 14:30:06.617	2017-08-04 14:30:06.617		
SQL:BatchStarting	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa					1239302740	56	2017-08-04 14:30:06.670			
SQL:BatchCompleted	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa	0	0	0	0	1239302740	56	2017-08-04 14:30:06.670	2017-08-04 14:30:06.670		
SQL:BatchStarting	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa					1239302740	56	2017-08-04 14:30:06.673			
SQL:BatchCompleted	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa	0	5	0	0	1239302740	56	2017-08-04 14:30:06.673	2017-08-04 14:30:06.673		
SQL:BatchStarting	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa					1239302740	56	2017-08-04 14:30:06.677			
SQL:BatchCompleted	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa	0	0	0	0	1239302740	56	2017-08-04 14:30:06.677	2017-08-04 14:30:06.677		
SQL:BatchStarting	SELECT CONVERT(NVARCHAR(36), CONTEXT_INFO())	carbon		sa					1239302740	56	2017-08-04 14:30:06.680			
SQL:BatchCompleted	SELECT CONVERT(NVARCHAR(36), CONTEXT_INFO())	carbon		sa	0	0	0	0	1239302740	56	2017-08-04 14:30:06.680	2017-08-04 14:30:06.680		
SQL:BatchStarting	set LOCK_TIMEOUT 5000	carbon		sa					1239302740	56	2017-08-04 14:30:06.693			
SQL:BatchCompleted	set LOCK_TIMEOUT 5000	carbon		sa	0	0	0	0	1239302740	56	2017-08-04 14:30:06.693	2017-08-04 14:30:06.693		
SQL:BatchStarting	SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;
SET NUMERIC_ROUNDABORT OFF;	carbon		sa					1239302740	56	2017-08-04 14:30:06.700			
SQL:BatchCompleted	SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;
SET NUMERIC_ROUNDABORT OFF;	carbon		sa	0	0	0	0	1239302740	56	2017-08-04 14:30:06.700	2017-08-04 14:30:06.700		
SQL:BatchStarting	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa					1239302740	56	2017-08-04 14:30:06.710			
SQL:BatchCompleted	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa	0	5	0	0	1239302740	56	2017-08-04 14:30:06.710	2017-08-04 14:30:06.710		
SQL:BatchStarting	SELECT OSVersion = RIGHT(@@version, LEN(@@version)- 3 -charindex (' ON ', @@version))	carbon		sa					1239302740	56	2017-08-04 14:30:06.713			
SQL:BatchCompleted	SELECT OSVersion = RIGHT(@@version, LEN(@@version)- 3 -charindex (' ON ', @@version))	carbon		sa	16	0	0	0	1239302740	56	2017-08-04 14:30:06.713	2017-08-04 14:30:06.713		
Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	carbon		sa					1239302740	57	2017-08-04 14:30:06.780			
Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	carbon		sa					1239302740	58	2017-08-04 14:30:06.823			
SQL:BatchStarting	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa					1239302740	58	2017-08-04 14:30:06.823			
SQL:BatchCompleted	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa	0	5	0	0	1239302740	58	2017-08-04 14:30:06.823	2017-08-04 14:30:06.823		
SQL:BatchStarting	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa					1239302740	58	2017-08-04 14:30:06.827			
SQL:BatchCompleted	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa	0	0	0	0	1239302740	58	2017-08-04 14:30:06.827	2017-08-04 14:30:06.827		
SQL:BatchStarting	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa					1239302740	58	2017-08-04 14:30:06.830			
SQL:BatchCompleted	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa	0	5	0	0	1239302740	58	2017-08-04 14:30:06.830	2017-08-04 14:30:06.830		
SQL:BatchStarting	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa					1239302740	58	2017-08-04 14:30:06.833			
SQL:BatchCompleted	SELECT ISNULL(SESSIONPROPERTY ('ANSI_NULLS'), 0), ISNULL(SESSIONPROPERTY ('QUOTED_IDENTIFIER'), 1)	carbon		sa	0	0	0	0	1239302740	58	2017-08-04 14:30:06.833	2017-08-04 14:30:06.833		
SQL:BatchStarting	SELECT CONVERT(NVARCHAR(36), CONTEXT_INFO())	carbon		sa					1239302740	58	2017-08-04 14:30:06.837			
SQL:BatchCompleted	SELECT CONVERT(NVARCHAR(36), CONTEXT_INFO())	carbon		sa	0	0	0	0	1239302740	58	2017-08-04 14:30:06.837	2017-08-04 14:30:06.837		
SQL:BatchStarting	set LOCK_TIMEOUT 5000	carbon		sa					1239302740	58	2017-08-04 14:30:06.840			
SQL:BatchCompleted	set LOCK_TIMEOUT 5000	carbon		sa	0	0	0	0	1239302740	58	2017-08-04 14:30:06.840	2017-08-04 14:30:06.840		
SQL:BatchStarting	SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;
SET NUMERIC_ROUNDABORT OFF;	carbon		sa					1239302740	58	2017-08-04 14:30:06.843			
SQL:BatchCompleted	SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;
SET NUMERIC_ROUNDABORT OFF;	carbon		sa	0	0	0	0	1239302740	58	2017-08-04 14:30:06.843	2017-08-04 14:30:06.843		
SQL:BatchStarting	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa					1239302740	58	2017-08-04 14:30:06.847			
SQL:BatchCompleted	SELECT SERVERPROPERTY('EngineEdition'), SERVERPROPERTY('productversion'), SERVERPROPERTY ('productlevel'), SERVERPROPERTY ('edition'), SERVERPROPERTY ('MachineName'), (SELECT CASE WHEN EXISTS (SELECT TOP 1 1 from [sys].[all_columns] WITH (NOLOCK) WHERE name = N'xml_index_type' AND OBJECT_ID(N'sys.xml_indexes') = object_id) THEN 1 ELSE 0 END AS SXI_PRESENT)	carbon		sa	0	5	0	0	1239302740	58	2017-08-04 14:30:06.847	2017-08-04 14:30:06.847		
SQL:BatchStarting	SELECT OSVersion = RIGHT(@@version, LEN(@@version)- 3 -charindex (' ON ', @@version))	carbon		sa					1239302740	58	2017-08-04 14:30:06.847			
SQL:BatchCompleted	SELECT OSVersion = RIGHT(@@version, LEN(@@version)- 3 -charindex (' ON ', @@version))	carbon		sa	0	0	0	0	1239302740	58	2017-08-04 14:30:06.847	2017-08-04 14:30:06.847		
SQL:BatchStarting	DECLARE @edition sysname; SET @edition = cast(SERVERPROPERTY(N'EDITION') as sysname); select case when @edition = N'SQL Azure' then 2 else 1 end as 'DatabaseEngineType';
SELECT SERVERPROPERTY('EngineEdition') AS DatabaseEngineEdition
select N'Windows' as host_platform
	carbon		sa					1239302740	57	2017-08-04 14:30:07.210			
SQL:BatchCompleted	DECLARE @edition sysname; SET @edition = cast(SERVERPROPERTY(N'EDITION') as sysname); select case when @edition = N'SQL Azure' then 2 else 1 end as 'DatabaseEngineType';
SELECT SERVERPROPERTY('EngineEdition') AS DatabaseEngineEdition
select N'Windows' as host_platform
	carbon		sa	0	0	0	0	1239302740	57	2017-08-04 14:30:07.210	2017-08-04 14:30:07.210		
SQL:BatchStarting	select SERVERPROPERTY(N'servername')	carbon		sa					1239302740	57	2017-08-04 14:30:07.357			
SQL:BatchCompleted	select SERVERPROPERTY(N'servername')	carbon		sa	0	0	0	0	1239302740	57	2017-08-04 14:30:07.357	2017-08-04 14:30:07.357		
SQL:BatchStarting	use [master];
if (db_id() = 1)
begin
-- contained auth is 0 when connected to master
select 0
end
else
begin
-- need dynamic sql so that we compile this query only when we know resource db is available
exec('select case when authenticating_database_id = 1 then 0 else 1 end from
sys.dm_exec_sessions where session_id = @@SPID')
end;use [master]; --resetting the context	carbon		sa					1239302740	57	2017-08-04 14:30:07.380			
SQL:BatchCompleted	use [master];
if (db_id() = 1)
begin
-- contained auth is 0 when connected to master
select 0
end
else
begin
-- need dynamic sql so that we compile this query only when we know resource db is available
exec('select case when authenticating_database_id = 1 then 0 else 1 end from
sys.dm_exec_sessions where session_id = @@SPID')
end;use [master]; --resetting the context	carbon		sa	0	0	0	0	1239302740	57	2017-08-04 14:30:07.380	2017-08-04 14:30:07.380		
SQL:BatchStarting	SELECT
CAST(
        serverproperty(N'Servername')
       AS sysname) AS [Name]	carbon		sa					1239302740	57	2017-08-04 14:30:07.560			
SQL:BatchCompleted	SELECT
CAST(
        serverproperty(N'Servername')
       AS sysname) AS [Name]	carbon		sa	0	0	0	0	1239302740	57	2017-08-04 14:30:07.560	2017-08-04 14:30:07.560		
SQL:BatchStarting	
        declare @MasterPath nvarchar(512)
        declare @LogPath nvarchar(512)
        declare @ErrorLog nvarchar(512)
        declare @ErrorLogPath nvarchar(512)

        select @MasterPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'master'
        select @LogPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'mastlog'
        select @ErrorLog=cast(SERVERPROPERTY(N'errorlogfilename') as nvarchar(512))
        select @ErrorLogPath=substring(@ErrorLog, 1, len(@ErrorLog) - charindex('\', reverse(@ErrorLog)))
      


        declare @SmoRoot nvarchar(512)
        exec master.dbo.xp_instance_regread N'HKEY_LOCAL_MACHINE', N'SOFTWARE\Microsoft\MSSQLServer\Setup', N'SQLPath', @SmoRoot OUTPUT
      


SELECT
CAST(case when 'a' <> 'A' then 1 else 0 end AS bit) AS [IsCaseSensitive],
@@MAX_PRECISION AS [MaxPrecision],
@ErrorLogPath AS [ErrorLogPath],
@SmoRoot AS [RootDirectory],
N'Windows' AS [HostPlatform],
N'\' AS [PathSeparator],
CAST(FULLTEXTSERVICEPROPERTY('IsFullTextInstalled') AS bit) AS [IsFullTextInstalled],
@LogPath AS [MasterDBLogPath],
@MasterPath AS [MasterDBPath],
SERVERPROPERTY(N'ProductVersion') AS [VersionString],
CAST(SERVERPROPERTY(N'Edition') AS sysname) AS [Edition],
CAST(SERVERPROPERTY(N'ProductLevel') AS sysname) AS [ProductLevel],
CAST(SERVERPROPERTY('IsSingleUser') AS bit) AS [IsSingleUser],
CAST(SERVERPROPERTY('EngineEdition') AS int) AS [EngineEdition],
convert(sysname, serverproperty(N'collation')) AS [Collation],
CAST(SERVERPROPERTY(N'MachineName') AS sysname) AS [NetName],
CAST(SERVERPROPERTY('IsClustered') AS bit) AS [IsClustered],
SERVERPROPERTY(N'ResourceVersion') AS [ResourceVersionString],
SERVERPROPERTY(N'ResourceLastUpdateDateTime') AS [ResourceLastUpdateDateTime],
SERVERPROPERTY(N'CollationID') AS [CollationID],
SERVERPROPERTY(N'ComparisonStyle') AS [ComparisonStyle],
SERVERPROPERTY(N'SqlCharSet') AS [SqlCharSet],
SERVERPROPERTY(N'SqlCharSetName') AS [SqlCharSetName],
SERVERPROPERTY(N'SqlSortOrder') AS [SqlSortOrder],
SERVERPROPERTY(N'SqlSortOrderName') AS [SqlSortOrderName],
SERVERPROPERTY(N'BuildClrVersion') AS [BuildClrVersionString],
SERVERPROPERTY(N'ComputerNamePhysicalNetBIOS') AS [ComputerNamePhysicalNetBIOS],
CAST(SERVERPROPERTY('IsPolyBaseInstalled') AS bit) AS [IsPolyBaseInstalled]	carbon		sa					1239302740	57	2017-08-04 14:30:07.630			
SQL:BatchCompleted	
        declare @MasterPath nvarchar(512)
        declare @LogPath nvarchar(512)
        declare @ErrorLog nvarchar(512)
        declare @ErrorLogPath nvarchar(512)

        select @MasterPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'master'
        select @LogPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'mastlog'
        select @ErrorLog=cast(SERVERPROPERTY(N'errorlogfilename') as nvarchar(512))
        select @ErrorLogPath=substring(@ErrorLog, 1, len(@ErrorLog) - charindex('\', reverse(@ErrorLog)))
      


        declare @SmoRoot nvarchar(512)
        exec master.dbo.xp_instance_regread N'HKEY_LOCAL_MACHINE', N'SOFTWARE\Microsoft\MSSQLServer\Setup', N'SQLPath', @SmoRoot OUTPUT
      


SELECT
CAST(case when 'a' <> 'A' then 1 else 0 end AS bit) AS [IsCaseSensitive],
@@MAX_PRECISION AS [MaxPrecision],
@ErrorLogPath AS [ErrorLogPath],
@SmoRoot AS [RootDirectory],
N'Windows' AS [HostPlatform],
N'\' AS [PathSeparator],
CAST(FULLTEXTSERVICEPROPERTY('IsFullTextInstalled') AS bit) AS [IsFullTextInstalled],
@LogPath AS [MasterDBLogPath],
@MasterPath AS [MasterDBPath],
SERVERPROPERTY(N'ProductVersion') AS [VersionString],
CAST(SERVERPROPERTY(N'Edition') AS sysname) AS [Edition],
CAST(SERVERPROPERTY(N'ProductLevel') AS sysname) AS [ProductLevel],
CAST(SERVERPROPERTY('IsSingleUser') AS bit) AS [IsSingleUser],
CAST(SERVERPROPERTY('EngineEdition') AS int) AS [EngineEdition],
convert(sysname, serverproperty(N'collation')) AS [Collation],
CAST(SERVERPROPERTY(N'MachineName') AS sysname) AS [NetName],
CAST(SERVERPROPERTY('IsClustered') AS bit) AS [IsClustered],
SERVERPROPERTY(N'ResourceVersion') AS [ResourceVersionString],
SERVERPROPERTY(N'ResourceLastUpdateDateTime') AS [ResourceLastUpdateDateTime],
SERVERPROPERTY(N'CollationID') AS [CollationID],
SERVERPROPERTY(N'ComparisonStyle') AS [ComparisonStyle],
SERVERPROPERTY(N'SqlCharSet') AS [SqlCharSet],
SERVERPROPERTY(N'SqlCharSetName') AS [SqlCharSetName],
SERVERPROPERTY(N'SqlSortOrder') AS [SqlSortOrder],
SERVERPROPERTY(N'SqlSortOrderName') AS [SqlSortOrderName],
SERVERPROPERTY(N'BuildClrVersion') AS [BuildClrVersionString],
SERVERPROPERTY(N'ComputerNamePhysicalNetBIOS') AS [ComputerNamePhysicalNetBIOS],
CAST(SERVERPROPERTY('IsPolyBaseInstalled') AS bit) AS [IsPolyBaseInstalled]	carbon		sa	0	5	0	2	1239302740	57	2017-08-04 14:30:07.630	2017-08-04 14:30:07.633		
RPC:Completed	exec sp_executesql N'SELECT
dtb.collation_name AS [Collation],
dtb.name AS [DatabaseName2]
FROM
master.sys.databases AS dtb
WHERE
(dtb.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'master'	carbon		sa	0	8	0	0	1239302740	57	2017-08-04 14:30:07.797	2017-08-04 14:30:07.797		
SQL:BatchStarting	SELECT
dtb.name AS [Name],
dtb.database_id AS [ID],
CAST(case when dtb.name in ('master','model','msdb','tempdb') then 1 else dtb.is_distributor end AS bit) AS [IsSystemObject],
dtb.collation_name AS [Collation],
CAST(has_dbaccess(dtb.name) AS bit) AS [IsAccessible],
dtb.name AS [DatabaseName2]
FROM
master.sys.databases AS dtb
ORDER BY
[Name] ASC	carbon		sa					1239302740	57	2017-08-04 14:30:07.830			
SQL:BatchCompleted	SELECT
dtb.name AS [Name],
dtb.database_id AS [ID],
CAST(case when dtb.name in ('master','model','msdb','tempdb') then 1 else dtb.is_distributor end AS bit) AS [IsSystemObject],
dtb.collation_name AS [Collation],
CAST(has_dbaccess(dtb.name) AS bit) AS [IsAccessible],
dtb.name AS [DatabaseName2]
FROM
master.sys.databases AS dtb
ORDER BY
[Name] ASC	carbon		sa	15	174	0	13	1239302740	57	2017-08-04 14:30:07.830	2017-08-04 14:30:07.843		
Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.543			
SQL:BatchStarting	DECLARE @edition sysname; SET @edition = cast(SERVERPROPERTY(N'EDITION') as sysname); select case when @edition = N'SQL Azure' then 2 else 1 end as 'DatabaseEngineType';
SELECT SERVERPROPERTY('EngineEdition') AS DatabaseEngineEdition
select N'Windows' as host_platform
	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.547			
SQL:BatchCompleted	DECLARE @edition sysname; SET @edition = cast(SERVERPROPERTY(N'EDITION') as sysname); select case when @edition = N'SQL Azure' then 2 else 1 end as 'DatabaseEngineType';
SELECT SERVERPROPERTY('EngineEdition') AS DatabaseEngineEdition
select N'Windows' as host_platform
	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:11.547	2017-08-04 14:30:11.547		
SQL:BatchStarting	select SERVERPROPERTY(N'servername')	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.560			
SQL:BatchCompleted	select SERVERPROPERTY(N'servername')	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:11.560	2017-08-04 14:30:11.560		
SQL:BatchStarting	
        declare @HkeyLocal nvarchar(18)
        declare @ServicesRegPath nvarchar(34)
        declare @SqlServiceRegPath sysname
        declare @BrowserServiceRegPath sysname
        declare @MSSqlServerRegPath nvarchar(31)
        declare @InstanceNamesRegPath nvarchar(59)
        declare @InstanceRegPath sysname
        declare @SetupRegPath sysname
        declare @NpRegPath sysname
        declare @TcpRegPath sysname
        declare @RegPathParams sysname
        declare @FilestreamRegPath sysname

        select @HkeyLocal=N'HKEY_LOCAL_MACHINE'

        -- Instance-based paths
        select @MSSqlServerRegPath=N'SOFTWARE\Microsoft\MSSQLServer'
        select @InstanceRegPath=@MSSqlServerRegPath + N'\MSSQLServer'
        select @FilestreamRegPath=@InstanceRegPath + N'\Filestream'
        select @SetupRegPath=@MSSqlServerRegPath + N'\Setup'
        select @RegPathParams=@InstanceRegPath+'\Parameters'

        -- Services
        select @ServicesRegPath=N'SYSTEM\CurrentControlSet\Services'
        select @SqlServiceRegPath=@ServicesRegPath + N'\MSSQLSERVER'
        select @BrowserServiceRegPath=@ServicesRegPath + N'\SQLBrowser'

        -- InstanceId setting
        select @InstanceNamesRegPath=N'SOFTWARE\Microsoft\Microsoft SQL Server\Instance Names\SQL'

        -- Network settings
        select @NpRegPath=@InstanceRegPath + N'\SuperSocketNetLib\Np'
        select @TcpRegPath=@InstanceRegPath + N'\SuperSocketNetLib\Tcp'
      


        declare @SmoAuditLevel int
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'AuditLevel', @SmoAuditLevel OUTPUT
      


        declare @NumErrorLogs int
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'NumErrorLogs', @NumErrorLogs OUTPUT
      


        declare @SmoLoginMode int
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'LoginMode', @SmoLoginMode OUTPUT
      


        declare @SmoMailProfile nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'MailAccountName', @SmoMailProfile OUTPUT
      


        declare @BackupDirectory nvarchar(512)
        if 1=isnull(cast(SERVERPROPERTY('IsLocalDB') as bit), 0)
        select @BackupDirectory=cast(SERVERPROPERTY('instancedefaultdatapath') as nvarchar(512))
        else
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'BackupDirectory', @BackupDirectory OUTPUT
      


        declare @SmoPerfMonMode int
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'Performance', @SmoPerfMonMode OUTPUT

        if @SmoPerfMonMode is null
        begin
        set @SmoPerfMonMode = 1000
        end
      


        declare @InstallSqlDataDir nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @SetupRegPath, N'SQLDataRoot', @InstallSqlDataDir OUTPUT
      


        declare @MasterPath nvarchar(512)
        declare @LogPath nvarchar(512)
        declare @ErrorLog nvarchar(512)
        declare @ErrorLogPath nvarchar(512)

        select @MasterPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'master'
        select @LogPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'mastlog'
        select @ErrorLog=cast(SERVERPROPERTY(N'errorlogfilename') as nvarchar(512))
        select @ErrorLogPath=substring(@ErrorLog, 1, len(@ErrorLog) - charindex('\', reverse(@ErrorLog)))
      


        declare @SmoRoot nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @SetupRegPath, N'SQLPath', @SmoRoot OUTPUT
      


        declare @ServiceStartMode int
        EXEC master.sys.xp_instance_regread @HkeyLocal, @SqlServiceRegPath, N'Start', @ServiceStartMode OUTPUT
      


        declare @ServiceAccount nvarchar(512)
        EXEC master.sys.xp_instance_regread @HkeyLocal, @SqlServiceRegPath, N'ObjectName', @ServiceAccount OUTPUT
      


        declare @NamedPipesEnabled int
        exec master.dbo.xp_instance_regread @HkeyLocal, @NpRegPath, N'Enabled', @NamedPipesEnabled OUTPUT
      


        declare @TcpEnabled int
        EXEC master.sys.xp_instance_regread @HkeyLocal, @TcpRegPath, N'Enabled', @TcpEnabled OUTPUT
      


        declare @InstallSharedDirectory nvarchar(512)
        EXEC master.sys.xp_instance_regread @HkeyLocal, @SetupRegPath, N'SQLPath', @InstallSharedDirectory OUTPUT
      


        declare @SqlGroup nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @SetupRegPath, N'SQLGroup', @SqlGroup OUTPUT
      


        declare @FilestreamLevel int
        exec master.dbo.xp_instance_regread @HkeyLocal, @FilestreamRegPath, N'EnableLevel', @FilestreamLevel OUTPUT
      


        declare @FilestreamShareName nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @FilestreamRegPath, N'ShareName', @FilestreamShareName OUTPUT
      


        declare @cluster_name nvarchar(128)
        declare @quorum_type tinyint
        declare @quorum_state tinyint
        BEGIN TRY
        SELECT @cluster_name = cluster_name,
        @quorum_type = quorum_type,
        @quorum_state = quorum_state
        FROM sys.dm_hadr_cluster
        END TRY
        BEGIN CATCH
        --Querying this DMV using a contained auth connection throws error 15562 (Module is untrusted)
        --because of lack of trustworthiness by the server. This is expected so we just leave the
        --values as default
        IF(ERROR_NUMBER() NOT IN (297,300, 15562))
        BEGIN
        THROW
        END
        END CATCH
      

SELECT
@SmoAuditLevel AS [AuditLevel],
ISNULL(@NumErrorLogs, -1) AS [NumberOfLogFiles],
(case when @SmoLoginMode < 3 then @SmoLoginMode else 9 end) AS [LoginMode],
ISNULL(@SmoMailProfile,N'') AS [MailProfile],
@BackupDirectory AS [BackupDirectory],
@SmoPerfMonMode AS [PerfMonMode],
ISNULL(@InstallSqlDataDir,N'') AS [InstallDataDirectory],
CAST(@@SERVICENAME AS sysname) AS [ServiceName],
@ErrorLogPath AS [ErrorLogPath],
@SmoRoot AS [RootDirectory],
CAST(case when 'a' <> 'A' then 1 else 0 end AS bit) AS [IsCaseSensitive],
@@MAX_PRECISION AS [MaxPrecision],
CAST(FULLTEXTSERVICEPROPERTY('IsFullTextInstalled') AS bit) AS [IsFullTextInstalled],
SERVERPROPERTY(N'ProductVersion') AS [VersionString],
CAST(SERVERPROPERTY(N'Edition') AS sysname) AS [Edition],
CAST(SERVERPROPERTY(N'ProductLevel') AS sysname) AS [ProductLevel],
CAST(SERVERPROPERTY('IsSingleUser') AS bit) AS [IsSingleUser],
CAST(SERVERPROPERTY('EngineEdition') AS int) AS [EngineEdition],
convert(sysname, serverproperty(N'collation')) AS [Collation],
CAST(SERVERPROPERTY('IsClustered') AS bit) AS [IsClustered],
CAST(SERVERPROPERTY(N'MachineName') AS sysname) AS [NetName],
@LogPath AS [MasterDBLogPath],
@MasterPath AS [MasterDBPath],
SERVERPROPERTY('instancedefaultdatapath') AS [DefaultFile],
SERVERPROPERTY('instancedefaultlogpath') AS [DefaultLog],
SERVERPROPERTY(N'ResourceVersion') AS [ResourceVersionString],
SERVERPROPERTY(N'ResourceLastUpdateDateTime') AS [ResourceLastUpdateDateTime],
SERVERPROPERTY(N'CollationID') AS [CollationID],
SERVERPROPERTY(N'ComparisonStyle') AS [ComparisonStyle],
SERVERPROPERTY(N'SqlCharSet') AS [SqlCharSet],
SERVERPROPERTY(N'SqlCharSetName') AS [SqlCharSetName],
SERVERPROPERTY(N'SqlSortOrder') AS [SqlSortOrder],
SERVERPROPERTY(N'SqlSortOrderName') AS [SqlSortOrderName],
SERVERPROPERTY(N'ComputerNamePhysicalNetBIOS') AS [ComputerNamePhysicalNetBIOS],
SERVERPROPERTY(N'BuildClrVersion') AS [BuildClrVersionString],
@ServiceStartMode AS [ServiceStartMode],
ISNULL(@ServiceAccount,N'') AS [ServiceAccount],
CAST(@NamedPipesEnabled AS bit) AS [NamedPipesEnabled],
CAST(@TcpEnabled AS bit) AS [TcpEnabled],
ISNULL(@InstallSharedDirectory,N'') AS [InstallSharedDirectory],
ISNULL(suser_sname(sid_binary(ISNULL(@SqlGroup,N''))),N'') AS [SqlDomainGroup],
case when 1=msdb.dbo.fn_syspolicy_is_automation_enabled() and exists (select * from msdb.dbo.syspolicy_system_health_state  where target_query_expression_with_id like 'Server%' ) then 1 else 0 end AS [PolicyHealthState],
@FilestreamLevel AS [FilestreamLevel],
ISNULL(@FilestreamShareName,N'') AS [FilestreamShareName],
-1 AS [TapeLoadWaitTime],
CAST(SERVERPROPERTY(N'IsHadrEnabled') AS bit) AS [IsHadrEnabled],
SERVERPROPERTY(N'HADRManagerStatus') AS [HadrManagerStatus],
ISNULL(@cluster_name, '') AS [ClusterName],
ISNULL(@quorum_type, 4) AS [ClusterQuorumType],
ISNULL(@quorum_state, 3) AS [ClusterQuorumState],
SUSER_SID(@ServiceAccount, 0) AS [ServiceAccountSid],
CAST(SERVERPROPERTY('IsPolyBaseInstalled') AS bit) AS [IsPolyBaseInstalled],
N'Windows' AS [HostPlatform],
CAST(
        serverproperty(N'Servername')
       AS sysname) AS [Name],
CAST(
        ISNULL(serverproperty(N'instancename'),N'')
       AS sysname) AS [InstanceName],
CAST(0x0001 AS int) AS [Status],
N'\' AS [PathSeparator],
0 AS [IsContainedAuthentication],
CAST(null AS int) AS [ServerType]

        drop table #SVer
      
	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.577			
SQL:BatchCompleted	
        declare @HkeyLocal nvarchar(18)
        declare @ServicesRegPath nvarchar(34)
        declare @SqlServiceRegPath sysname
        declare @BrowserServiceRegPath sysname
        declare @MSSqlServerRegPath nvarchar(31)
        declare @InstanceNamesRegPath nvarchar(59)
        declare @InstanceRegPath sysname
        declare @SetupRegPath sysname
        declare @NpRegPath sysname
        declare @TcpRegPath sysname
        declare @RegPathParams sysname
        declare @FilestreamRegPath sysname

        select @HkeyLocal=N'HKEY_LOCAL_MACHINE'

        -- Instance-based paths
        select @MSSqlServerRegPath=N'SOFTWARE\Microsoft\MSSQLServer'
        select @InstanceRegPath=@MSSqlServerRegPath + N'\MSSQLServer'
        select @FilestreamRegPath=@InstanceRegPath + N'\Filestream'
        select @SetupRegPath=@MSSqlServerRegPath + N'\Setup'
        select @RegPathParams=@InstanceRegPath+'\Parameters'

        -- Services
        select @ServicesRegPath=N'SYSTEM\CurrentControlSet\Services'
        select @SqlServiceRegPath=@ServicesRegPath + N'\MSSQLSERVER'
        select @BrowserServiceRegPath=@ServicesRegPath + N'\SQLBrowser'

        -- InstanceId setting
        select @InstanceNamesRegPath=N'SOFTWARE\Microsoft\Microsoft SQL Server\Instance Names\SQL'

        -- Network settings
        select @NpRegPath=@InstanceRegPath + N'\SuperSocketNetLib\Np'
        select @TcpRegPath=@InstanceRegPath + N'\SuperSocketNetLib\Tcp'
      


        declare @SmoAuditLevel int
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'AuditLevel', @SmoAuditLevel OUTPUT
      


        declare @NumErrorLogs int
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'NumErrorLogs', @NumErrorLogs OUTPUT
      


        declare @SmoLoginMode int
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'LoginMode', @SmoLoginMode OUTPUT
      


        declare @SmoMailProfile nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'MailAccountName', @SmoMailProfile OUTPUT
      


        declare @BackupDirectory nvarchar(512)
        if 1=isnull(cast(SERVERPROPERTY('IsLocalDB') as bit), 0)
        select @BackupDirectory=cast(SERVERPROPERTY('instancedefaultdatapath') as nvarchar(512))
        else
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'BackupDirectory', @BackupDirectory OUTPUT
      


        declare @SmoPerfMonMode int
        exec master.dbo.xp_instance_regread @HkeyLocal, @InstanceRegPath, N'Performance', @SmoPerfMonMode OUTPUT

        if @SmoPerfMonMode is null
        begin
        set @SmoPerfMonMode = 1000
        end
      


        declare @InstallSqlDataDir nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @SetupRegPath, N'SQLDataRoot', @InstallSqlDataDir OUTPUT
      


        declare @MasterPath nvarchar(512)
        declare @LogPath nvarchar(512)
        declare @ErrorLog nvarchar(512)
        declare @ErrorLogPath nvarchar(512)

        select @MasterPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'master'
        select @LogPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'mastlog'
        select @ErrorLog=cast(SERVERPROPERTY(N'errorlogfilename') as nvarchar(512))
        select @ErrorLogPath=substring(@ErrorLog, 1, len(@ErrorLog) - charindex('\', reverse(@ErrorLog)))
      


        declare @SmoRoot nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @SetupRegPath, N'SQLPath', @SmoRoot OUTPUT
      


        declare @ServiceStartMode int
        EXEC master.sys.xp_instance_regread @HkeyLocal, @SqlServiceRegPath, N'Start', @ServiceStartMode OUTPUT
      


        declare @ServiceAccount nvarchar(512)
        EXEC master.sys.xp_instance_regread @HkeyLocal, @SqlServiceRegPath, N'ObjectName', @ServiceAccount OUTPUT
      


        declare @NamedPipesEnabled int
        exec master.dbo.xp_instance_regread @HkeyLocal, @NpRegPath, N'Enabled', @NamedPipesEnabled OUTPUT
      


        declare @TcpEnabled int
        EXEC master.sys.xp_instance_regread @HkeyLocal, @TcpRegPath, N'Enabled', @TcpEnabled OUTPUT
      


        declare @InstallSharedDirectory nvarchar(512)
        EXEC master.sys.xp_instance_regread @HkeyLocal, @SetupRegPath, N'SQLPath', @InstallSharedDirectory OUTPUT
      


        declare @SqlGroup nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @SetupRegPath, N'SQLGroup', @SqlGroup OUTPUT
      


        declare @FilestreamLevel int
        exec master.dbo.xp_instance_regread @HkeyLocal, @FilestreamRegPath, N'EnableLevel', @FilestreamLevel OUTPUT
      


        declare @FilestreamShareName nvarchar(512)
        exec master.dbo.xp_instance_regread @HkeyLocal, @FilestreamRegPath, N'ShareName', @FilestreamShareName OUTPUT
      


        declare @cluster_name nvarchar(128)
        declare @quorum_type tinyint
        declare @quorum_state tinyint
        BEGIN TRY
        SELECT @cluster_name = cluster_name,
        @quorum_type = quorum_type,
        @quorum_state = quorum_state
        FROM sys.dm_hadr_cluster
        END TRY
        BEGIN CATCH
        --Querying this DMV using a contained auth connection throws error 15562 (Module is untrusted)
        --because of lack of trustworthiness by the server. This is expected so we just leave the
        --values as default
        IF(ERROR_NUMBER() NOT IN (297,300, 15562))
        BEGIN
        THROW
        END
        END CATCH
      

SELECT
@SmoAuditLevel AS [AuditLevel],
ISNULL(@NumErrorLogs, -1) AS [NumberOfLogFiles],
(case when @SmoLoginMode < 3 then @SmoLoginMode else 9 end) AS [LoginMode],
ISNULL(@SmoMailProfile,N'') AS [MailProfile],
@BackupDirectory AS [BackupDirectory],
@SmoPerfMonMode AS [PerfMonMode],
ISNULL(@InstallSqlDataDir,N'') AS [InstallDataDirectory],
CAST(@@SERVICENAME AS sysname) AS [ServiceName],
@ErrorLogPath AS [ErrorLogPath],
@SmoRoot AS [RootDirectory],
CAST(case when 'a' <> 'A' then 1 else 0 end AS bit) AS [IsCaseSensitive],
@@MAX_PRECISION AS [MaxPrecision],
CAST(FULLTEXTSERVICEPROPERTY('IsFullTextInstalled') AS bit) AS [IsFullTextInstalled],
SERVERPROPERTY(N'ProductVersion') AS [VersionString],
CAST(SERVERPROPERTY(N'Edition') AS sysname) AS [Edition],
CAST(SERVERPROPERTY(N'ProductLevel') AS sysname) AS [ProductLevel],
CAST(SERVERPROPERTY('IsSingleUser') AS bit) AS [IsSingleUser],
CAST(SERVERPROPERTY('EngineEdition') AS int) AS [EngineEdition],
convert(sysname, serverproperty(N'collation')) AS [Collation],
CAST(SERVERPROPERTY('IsClustered') AS bit) AS [IsClustered],
CAST(SERVERPROPERTY(N'MachineName') AS sysname) AS [NetName],
@LogPath AS [MasterDBLogPath],
@MasterPath AS [MasterDBPath],
SERVERPROPERTY('instancedefaultdatapath') AS [DefaultFile],
SERVERPROPERTY('instancedefaultlogpath') AS [DefaultLog],
SERVERPROPERTY(N'ResourceVersion') AS [ResourceVersionString],
SERVERPROPERTY(N'ResourceLastUpdateDateTime') AS [ResourceLastUpdateDateTime],
SERVERPROPERTY(N'CollationID') AS [CollationID],
SERVERPROPERTY(N'ComparisonStyle') AS [ComparisonStyle],
SERVERPROPERTY(N'SqlCharSet') AS [SqlCharSet],
SERVERPROPERTY(N'SqlCharSetName') AS [SqlCharSetName],
SERVERPROPERTY(N'SqlSortOrder') AS [SqlSortOrder],
SERVERPROPERTY(N'SqlSortOrderName') AS [SqlSortOrderName],
SERVERPROPERTY(N'ComputerNamePhysicalNetBIOS') AS [ComputerNamePhysicalNetBIOS],
SERVERPROPERTY(N'BuildClrVersion') AS [BuildClrVersionString],
@ServiceStartMode AS [ServiceStartMode],
ISNULL(@ServiceAccount,N'') AS [ServiceAccount],
CAST(@NamedPipesEnabled AS bit) AS [NamedPipesEnabled],
CAST(@TcpEnabled AS bit) AS [TcpEnabled],
ISNULL(@InstallSharedDirectory,N'') AS [InstallSharedDirectory],
ISNULL(suser_sname(sid_binary(ISNULL(@SqlGroup,N''))),N'') AS [SqlDomainGroup],
case when 1=msdb.dbo.fn_syspolicy_is_automation_enabled() and exists (select * from msdb.dbo.syspolicy_system_health_state  where target_query_expression_with_id like 'Server%' ) then 1 else 0 end AS [PolicyHealthState],
@FilestreamLevel AS [FilestreamLevel],
ISNULL(@FilestreamShareName,N'') AS [FilestreamShareName],
-1 AS [TapeLoadWaitTime],
CAST(SERVERPROPERTY(N'IsHadrEnabled') AS bit) AS [IsHadrEnabled],
SERVERPROPERTY(N'HADRManagerStatus') AS [HadrManagerStatus],
ISNULL(@cluster_name, '') AS [ClusterName],
ISNULL(@quorum_type, 4) AS [ClusterQuorumType],
ISNULL(@quorum_state, 3) AS [ClusterQuorumState],
SUSER_SID(@ServiceAccount, 0) AS [ServiceAccountSid],
CAST(SERVERPROPERTY('IsPolyBaseInstalled') AS bit) AS [IsPolyBaseInstalled],
N'Windows' AS [HostPlatform],
CAST(
        serverproperty(N'Servername')
       AS sysname) AS [Name],
CAST(
        ISNULL(serverproperty(N'instancename'),N'')
       AS sysname) AS [InstanceName],
CAST(0x0001 AS int) AS [Status],
N'\' AS [PathSeparator],
0 AS [IsContainedAuthentication],
CAST(null AS int) AS [ServerType]

        drop table #SVer
      
	Core .Net SqlClient Data Provider		sa	16	9	0	15	1239302740	59	2017-08-04 14:30:11.577	2017-08-04 14:30:11.593		
SQL:BatchStarting	SELECT
cfg.name AS [Name],
cfg.configuration_id AS [Number],
cfg.minimum AS [Minimum],
cfg.maximum AS [Maximum],
cfg.is_dynamic AS [Dynamic],
cfg.is_advanced AS [Advanced],
cfg.value AS [ConfigValue],
cfg.value_in_use AS [RunValue],
cfg.description AS [Description]
FROM
sys.configurations AS cfg	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.610			
SQL:BatchCompleted	SELECT
cfg.name AS [Name],
cfg.configuration_id AS [Number],
cfg.minimum AS [Minimum],
cfg.maximum AS [Maximum],
cfg.is_dynamic AS [Dynamic],
cfg.is_advanced AS [Advanced],
cfg.value AS [ConfigValue],
cfg.value_in_use AS [RunValue],
cfg.description AS [Description]
FROM
sys.configurations AS cfg	Core .Net SqlClient Data Provider		sa	0	4	0	0	1239302740	59	2017-08-04 14:30:11.610	2017-08-04 14:30:11.610		
RPC:Completed	exec sp_executesql N'SELECT
dtb.name AS [Name]
FROM
master.sys.databases AS dtb
WHERE
(dtb.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'master'	Core .Net SqlClient Data Provider		sa	0	8	0	0	1239302740	59	2017-08-04 14:30:11.620	2017-08-04 14:30:11.620	0X00000000040000001A00730070005F006500780065006300750074006500730071006C00D400000082001800E7206E0076006100720063006800610072002800380037002900AE000000530045004C004500430054000A006400740062002E006E0061006D00650020004100530020005B004E0061006D0065005D000A00460052004F004D000A006D00610073007400650072002E007300790073002E0064006100740061006200610073006500730020004100530020006400740062000A00570048004500520045000A0028006400740062002E006E0061006D0065003D0040005F006D00730070006100720061006D005F00300029005A00000082001800	
RPC:Completed	exec sp_executesql N'SELECT
dtb.compatibility_level AS [CompatibilityLevel],
dtb.name AS [DatabaseName2]
FROM
master.sys.databases AS dtb
WHERE
(dtb.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'master'	Core .Net SqlClient Data Provider		sa	0	10	0	0	1239302740	59	2017-08-04 14:30:11.643	2017-08-04 14:30:11.643		
RPC:Completed	exec sp_executesql N'SELECT
ISNULL((case dmi.mirroring_redo_queue_type when N''UNLIMITED'' then 0 else dmi.mirroring_redo_queue end),0) AS [MirroringRedoQueueMaxSize],
ISNULL(dmi.mirroring_connection_timeout,0) AS [MirroringTimeout],
ISNULL(dmi.mirroring_partner_name,'''') AS [MirroringPartner],
ISNULL(dmi.mirroring_partner_instance,'''') AS [MirroringPartnerInstance],
ISNULL(dmi.mirroring_role,0) AS [MirroringRole],
ISNULL(dmi.mirroring_safety_level + 1, 0) AS [MirroringSafetyLevel],
ISNULL(dmi.mirroring_state + 1, 0) AS [MirroringStatus],
ISNULL(dmi.mirroring_witness_name,'''') AS [MirroringWitness],
ISNULL(dmi.mirroring_witness_state + 1, 0) AS [MirroringWitnessStatus],
CAST(case when dmi.mirroring_partner_name is null then 0 else 1 end AS bit) AS [IsMirroringEnabled],
ISNULL(dmi.mirroring_guid,''00000000-0000-0000-0000-0000000000000000'') AS [MirroringID],
ISNULL(dmi.mirroring_role_sequence,0) AS [MirroringRoleSequence],
ISNULL(dmi.mirroring_safety_sequence,0) AS [MirroringSafetySequence],
ISNULL(dmi.mirroring_failover_lsn,0) AS [MirroringFailoverLogSequenceNumber],
dtb.is_ansi_null_default_on AS [AnsiNullDefault],
dtb.is_ansi_nulls_on AS [AnsiNullsEnabled],
dtb.is_ansi_padding_on AS [AnsiPaddingEnabled],
dtb.is_ansi_warnings_on AS [AnsiWarningsEnabled],
dtb.is_arithabort_on AS [ArithmeticAbortEnabled],
dtb.is_auto_shrink_on AS [AutoShrink],
dtb.is_cursor_close_on_commit_on AS [CloseCursorsOnCommitEnabled],
dtb.is_concat_null_yields_null_on AS [ConcatenateNullYieldsNull],
dtb.is_numeric_roundabort_on AS [NumericRoundAbortEnabled],
dtb.is_quoted_identifier_on AS [QuotedIdentifiersEnabled],
dtb.is_read_only AS [ReadOnly],
dtb.is_recursive_triggers_on AS [RecursiveTriggersEnabled],
dtb.user_access AS [UserAccess],
dtb.is_db_chaining_on AS [DatabaseOwnershipChaining],
dtb.is_auto_update_stats_async_on AS [AutoUpdateStatisticsAsync],
dtb.is_date_correlation_on AS [DateCorrelationOptimization],
dtb.is_trustworthy_on AS [Trustworthy],
dtb.name AS [Name],
dtb.database_id AS [ID],
dtb.create_date AS [CreateDate],
dtb.is_auto_create_stats_on AS [AutoCreateStatisticsEnabled],
dtb.is_auto_update_stats_on AS [AutoUpdateStatisticsEnabled],
dtb.is_parameterization_forced AS [IsParameterizationForced],
dtb.is_read_committed_snapshot_on AS [IsReadCommittedSnapshotOn],
CAST(isnull(dtb.source_database_id, 0) AS bit) AS [IsDatabaseSnapshot],
ISNULL(DB_NAME(dtb.source_database_id), N'''') AS [DatabaseSnapshotBaseName],
dtb.is_fulltext_enabled AS [IsFullTextEnabled],
dtb.service_broker_guid AS [ServiceBrokerGuid],
dtb.snapshot_isolation_state AS [SnapshotIsolationState],
(dtb.is_published*1+dtb.is_subscribed*2+dtb.is_merge_published*4) AS [ReplicationOptions],
dtb.is_local_cursor_default AS [LocalCursorsDefault],
dtb.page_verify_option AS [PageVerify],
dtb.recovery_model AS [RecoveryModel],
dtb.is_auto_close_on AS [AutoClose],
dtb.is_broker_enabled AS [BrokerEnabled],
ISNULL(suser_sname(dtb.owner_sid),'''') AS [Owner],
ISNULL(dtb.log_reuse_wait,0) AS [LogReuseWaitStatus],
drs.recovery_fork_guid AS [RecoveryForkGuid],
drs.database_guid AS [DatabaseGuid],
CAST((case when drs.last_log_backup_lsn is not null then 1 else 0 end) AS bit) AS [HasFullBackup],
CAST(case when dtb.name in (''master'',''model'',''msdb'',''tempdb'') then 1 else dtb.is_distributor end AS bit) AS [IsSystemObject],
CAST(case when ctb.database_id is null then 0 else 1  end AS bit) AS [ChangeTrackingEnabled],
CAST(ISNULL(ctb.is_auto_cleanup_on,0) AS bit) AS [ChangeTrackingAutoCleanUp],
ISNULL(ctb.retention_period,0) AS [ChangeTrackingRetentionPeriod],
CAST(ISNULL(ctb.retention_period_units,0) AS tinyint) AS [ChangeTrackingRetentionPeriodUnits],
dtb.containment AS [ContainmentType],
dtb.default_language_lcid AS [DefaultLanguageLcid],
dtb.default_language_name AS [DefaultLanguageName],
dtb.default_fulltext_language_lcid AS [DefaultFullTextLanguageLcid],
ISNULL(dtb.default_fulltext_language_name,N'''') AS [DefaultFullTextLanguageName],
CAST(dtb.is_nested_triggers_on AS bit) AS [NestedTriggersEnabled],
CAST(dtb.is_transform_noise_words_on AS bit) AS [TransformNoiseWords],
dtb.two_digit_year_cutoff AS [TwoDigitYearCutoff],
dtb.target_recovery_time_in_seconds AS [TargetRecoveryTime],
dtb.delayed_durability AS [DelayedDurability],
dtb.is_auto_create_stats_incremental_on AS [AutoCreateIncrementalStatisticsEnabled],

        case
        when dtb.collation_name is null then 0x200
        else 0
        end |
        case
        when 1 = dtb.is_in_standby then 0x40
        else 0
        end |
        case dtb.state
        when 1 then 0x2
        when 2 then 0x8
        when 3 then 0x4
        when 4 then 0x10
        when 5 then 0x100
        when 6 then 0x20
        else 1
        end
       AS [Status],
CAST(( case LOWER(convert( nvarchar(128), DATABASEPROPERTYEX(dtb.name, ''Updateability''))) when ''read_write'' then 1 else 0 end) AS bit) AS [IsUpdateable],
CAST(dtb.is_encrypted AS bit) AS [EncryptionEnabled],
CAST(dtb.is_honor_broker_priority_on AS bit) AS [HonorBrokerPriority],
CAST(
        case
        when SERVERPROPERTY(''EngineEdition'') = 6 then cast(1 as bit)
        else cast(0 as bit)
        end
       AS bit) AS [IsSqlDw],
CAST(has_dbaccess(dtb.name) AS bit) AS [IsAccessible],
ISNULL(fsopt.directory_name , N'''') AS [FilestreamDirectoryName],
ISNULL(fsopt.non_transacted_access , 0) AS [FilestreamNonTransactedAccess],
CAST(dtb.is_remote_data_archive_enabled AS bit) AS [RemoteDataArchiveEnabled],
NULL AS [RemoteDataArchiveEndpoint],
NULL AS [RemoteDataArchiveLinkedServer],
NULL AS [RemoteDatabaseName],
0 AS [RemoteDataArchiveUseFederatedServiceAccount],
NULL AS [RemoteDataArchiveCredential],
0 AS [MaxDop],
NULL AS [MaxDopForSecondary],
0 AS [LegacyCardinalityEstimation],
2 AS [LegacyCardinalityEstimationForSecondary],
0 AS [ParameterSniffing],
2 AS [ParameterSniffingForSecondary],
0 AS [QueryOptimizerHotfixes],
2 AS [QueryOptimizerHotfixesForSecondary],
dtb.name AS [DatabaseName2],
dtb.containment AS [ContainmentType2],
dtb.name AS [DatabaseName5],
dtb.name AS [DatabaseName6]
FROM
master.sys.databases AS dtb
LEFT OUTER JOIN sys.database_mirroring AS dmi ON dmi.database_id = dtb.database_id
LEFT OUTER JOIN sys.database_recovery_status AS drs ON drs.database_id = dtb.database_id
LEFT OUTER JOIN sys.change_tracking_databases AS ctb ON ctb.database_id = dtb.database_id 
LEFT OUTER JOIN sys.database_filestream_options AS fsopt ON fsopt.database_id = dtb.database_id
WHERE
(dtb.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'master'	Core .Net SqlClient Data Provider		sa	0	47	0	0	1239302740	59	2017-08-04 14:30:11.657	2017-08-04 14:30:11.657		
SQL:BatchStarting	select 
case 
    when cfg.configuration_id = 124 -- configuration id for default language
    then (select lcid from sys.syslanguages as sl where sl.langid = cfg.value_in_use) -- getting default language LCID from default language langid
    else cfg.value_in_use
end as value,
case 
    when cfg.configuration_id = 124 -- configuration id for default language
    then (select name collate catalog_default from sys.syslanguages as sl where sl.langid = cfg.value_in_use) -- getting default language name from default language langid
    when cfg.configuration_id = 1126 -- configuration id for default fulltext language
    then ISNULL((select name collate catalog_default from sys.fulltext_languages as fl where fl.lcid = cfg.value_in_use), N'') -- getting default fulltext language name from default fulltext language lcid
    else null
end as name,
cfg.configuration_id as configuration_id
from sys.configurations as cfg
where cfg.configuration_id in (115, 124, 1126, 1127, 1555) 
order by cfg.configuration_id asc	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.673			
SQL:BatchCompleted	select 
case 
    when cfg.configuration_id = 124 -- configuration id for default language
    then (select lcid from sys.syslanguages as sl where sl.langid = cfg.value_in_use) -- getting default language LCID from default language langid
    else cfg.value_in_use
end as value,
case 
    when cfg.configuration_id = 124 -- configuration id for default language
    then (select name collate catalog_default from sys.syslanguages as sl where sl.langid = cfg.value_in_use) -- getting default language name from default language langid
    when cfg.configuration_id = 1126 -- configuration id for default fulltext language
    then ISNULL((select name collate catalog_default from sys.fulltext_languages as fl where fl.lcid = cfg.value_in_use), N'') -- getting default fulltext language name from default fulltext language lcid
    else null
end as name,
cfg.configuration_id as configuration_id
from sys.configurations as cfg
where cfg.configuration_id in (115, 124, 1126, 1127, 1555) 
order by cfg.configuration_id asc	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:11.673	2017-08-04 14:30:11.673		
SQL:BatchStarting	SELECT CASE WHEN has_dbaccess(N'master') = 1 THEN 'true' ELSE 'false' END	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.683			
SQL:BatchCompleted	SELECT CASE WHEN has_dbaccess(N'master') = 1 THEN 'true' ELSE 'false' END	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:11.683	2017-08-04 14:30:11.683		
RPC:Completed	exec sp_executesql N'SELECT COLLATIONPROPERTY((select collation_name from sys.databases where name = ISNULL(@dbname, db_name())), ''LCID''), COLLATIONPROPERTY((select collation_name from sys.databases where name = ISNULL(@dbname, db_name())), ''ComparisonStyle'')',N'@dbname nvarchar(6)',@dbname=N'master'	Core .Net SqlClient Data Provider		sa	0	16	0	0	1239302740	59	2017-08-04 14:30:11.700	2017-08-04 14:30:11.700		
Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	Core .Net SqlClient Data Provider		sa					1239302740	60	2017-08-04 14:30:11.737			
SQL:BatchStarting	SELECT
eds.location AS [RemoteDataArchiveEndpoint],
eds.name AS [RemoteDataArchiveLinkedServer],
rdad.remote_database_name AS [RemoteDatabaseName],
rdad.federated_service_account AS [RemoteDataArchiveUseFederatedServiceAccount],
case when rdad.federated_service_account = 1 then null else cred.name end AS [RemoteDataArchiveCredential]
FROM
sys.remote_data_archive_databases rdad
INNER JOIN sys.external_data_sources eds ON rdad.data_source_id = eds.data_source_id
LEFT OUTER JOIN sys.database_scoped_credentials cred ON eds.credential_id = cred.credential_id	Core .Net SqlClient Data Provider		sa					1239302740	60	2017-08-04 14:30:11.737			
SQL:BatchCompleted	SELECT
eds.location AS [RemoteDataArchiveEndpoint],
eds.name AS [RemoteDataArchiveLinkedServer],
rdad.remote_database_name AS [RemoteDatabaseName],
rdad.federated_service_account AS [RemoteDataArchiveUseFederatedServiceAccount],
case when rdad.federated_service_account = 1 then null else cred.name end AS [RemoteDataArchiveCredential]
FROM
sys.remote_data_archive_databases rdad
INNER JOIN sys.external_data_sources eds ON rdad.data_source_id = eds.data_source_id
LEFT OUTER JOIN sys.database_scoped_credentials cred ON eds.credential_id = cred.credential_id	Core .Net SqlClient Data Provider		sa	0	2	0	0	1239302740	60	2017-08-04 14:30:11.737	2017-08-04 14:30:11.737		
Audit Logout		Core .Net SqlClient Data Provider		sa	0	2	0	14	1239302740	60	2017-08-04 14:30:11.737	2017-08-04 14:30:11.750		
SQL:BatchStarting	SELECT CASE WHEN has_dbaccess(N'master') = 1 THEN 'true' ELSE 'false' END	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.763			
SQL:BatchCompleted	SELECT CASE WHEN has_dbaccess(N'master') = 1 THEN 'true' ELSE 'false' END	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:11.763	2017-08-04 14:30:11.763		
Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	Core .Net SqlClient Data Provider		sa					1239302740	60	2017-08-04 14:30:11.807			
SQL:BatchStarting	SELECT
(select value from sys.database_scoped_configurations as dsc where dsc.name = 'MAXDOP') AS [MaxDop],
(select value_for_secondary from sys.database_scoped_configurations as dsc where dsc.name = 'MAXDOP') AS [MaxDopForSecondary],
(select value from sys.database_scoped_configurations as dsc where dsc.name = 'LEGACY_CARDINALITY_ESTIMATION') AS [LegacyCardinalityEstimation],
(select ISNULL(value_for_secondary, 2) from sys.database_scoped_configurations as dsc where dsc.name = 'LEGACY_CARDINALITY_ESTIMATION') AS [LegacyCardinalityEstimationForSecondary],
(select value from sys.database_scoped_configurations as dsc where dsc.name = 'PARAMETER_SNIFFING') AS [ParameterSniffing],
(select ISNULL(value_for_secondary, 2) from sys.database_scoped_configurations as dsc where dsc.name = 'PARAMETER_SNIFFING') AS [ParameterSniffingForSecondary],
(select value from sys.database_scoped_configurations as dsc where dsc.name = 'QUERY_OPTIMIZER_HOTFIXES') AS [QueryOptimizerHotfixes],
(select ISNULL(value_for_secondary, 2) from sys.database_scoped_configurations as dsc where dsc.name = 'QUERY_OPTIMIZER_HOTFIXES') AS [QueryOptimizerHotfixesForSecondary]	Core .Net SqlClient Data Provider		sa					1239302740	60	2017-08-04 14:30:11.807			
SQL:BatchCompleted	SELECT
(select value from sys.database_scoped_configurations as dsc where dsc.name = 'MAXDOP') AS [MaxDop],
(select value_for_secondary from sys.database_scoped_configurations as dsc where dsc.name = 'MAXDOP') AS [MaxDopForSecondary],
(select value from sys.database_scoped_configurations as dsc where dsc.name = 'LEGACY_CARDINALITY_ESTIMATION') AS [LegacyCardinalityEstimation],
(select ISNULL(value_for_secondary, 2) from sys.database_scoped_configurations as dsc where dsc.name = 'LEGACY_CARDINALITY_ESTIMATION') AS [LegacyCardinalityEstimationForSecondary],
(select value from sys.database_scoped_configurations as dsc where dsc.name = 'PARAMETER_SNIFFING') AS [ParameterSniffing],
(select ISNULL(value_for_secondary, 2) from sys.database_scoped_configurations as dsc where dsc.name = 'PARAMETER_SNIFFING') AS [ParameterSniffingForSecondary],
(select value from sys.database_scoped_configurations as dsc where dsc.name = 'QUERY_OPTIMIZER_HOTFIXES') AS [QueryOptimizerHotfixes],
(select ISNULL(value_for_secondary, 2) from sys.database_scoped_configurations as dsc where dsc.name = 'QUERY_OPTIMIZER_HOTFIXES') AS [QueryOptimizerHotfixesForSecondary]	Core .Net SqlClient Data Provider		sa	0	44	0	0	1239302740	60	2017-08-04 14:30:11.807	2017-08-04 14:30:11.807		
Audit Logout		Core .Net SqlClient Data Provider		sa	0	44	0	4	1239302740	60	2017-08-04 14:30:11.807	2017-08-04 14:30:11.810		
SQL:BatchStarting	SELECT
(@@microsoftversion / 0x1000000) & 0xff AS [VersionMajor]	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.820			
SQL:BatchCompleted	SELECT
(@@microsoftversion / 0x1000000) & 0xff AS [VersionMajor]	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:11.820	2017-08-04 14:30:11.820		
SQL:BatchStarting	select is_srvrolemember('sysadmin') * 1 +is_srvrolemember('serveradmin') * 2 +is_srvrolemember('setupadmin') * 4 +is_srvrolemember('securityadmin') * 8 +is_srvrolemember('processadmin') * 16 +is_srvrolemember('dbcreator') * 32 +is_srvrolemember('diskadmin') * 64+ is_srvrolemember('bulkadmin') * 128	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.827			
SQL:BatchCompleted	select is_srvrolemember('sysadmin') * 1 +is_srvrolemember('serveradmin') * 2 +is_srvrolemember('setupadmin') * 4 +is_srvrolemember('securityadmin') * 8 +is_srvrolemember('processadmin') * 16 +is_srvrolemember('dbcreator') * 32 +is_srvrolemember('diskadmin') * 64+ is_srvrolemember('bulkadmin') * 128	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:11.827	2017-08-04 14:30:11.827		
SQL:BatchStarting	USE [master]	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.837			
SQL:BatchCompleted	USE [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:11.837	2017-08-04 14:30:11.837		
SQL:BatchStarting	select suser_sname((select sid from sys.database_principals where name = N'dbo'));	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.840			
SQL:BatchCompleted	select suser_sname((select sid from sys.database_principals where name = N'dbo'));	Core .Net SqlClient Data Provider		sa	0	6	0	0	1239302740	59	2017-08-04 14:30:11.840	2017-08-04 14:30:11.840		
RPC:Completed	exec sp_executesql N'
        create table #tempbackup (database_name nvarchar(128), [type] char(1), backup_finish_date datetime)
        insert into #tempbackup select database_name, [type], max(backup_finish_date) from msdb..backupset where [type] = ''D'' or [type] = ''L'' or [type]=''I'' group by database_name, [type]
      


SELECT
(select backup_finish_date from #tempbackup where type = @_msparam_0 and db_id(database_name) = dtb.database_id) AS [LastBackupDate]
FROM
master.sys.databases AS dtb
WHERE
(dtb.name=@_msparam_1)

        drop table #tempbackup
      
',N'@_msparam_0 nvarchar(4000),@_msparam_1 nvarchar(4000)',@_msparam_0=N'D',@_msparam_1=N'master'	Core .Net SqlClient Data Provider		sa	0	221	1	5	1239302740	59	2017-08-04 14:30:11.857	2017-08-04 14:30:11.863		
RPC:Completed	exec sp_executesql N'
        create table #tempbackup (database_name nvarchar(128), [type] char(1), backup_finish_date datetime)
        insert into #tempbackup select database_name, [type], max(backup_finish_date) from msdb..backupset where [type] = ''D'' or [type] = ''L'' or [type]=''I'' group by database_name, [type]
      


SELECT
(select backup_finish_date from #tempbackup where type = @_msparam_0 and db_id(database_name) = dtb.database_id) AS [LastLogBackupDate]
FROM
master.sys.databases AS dtb
WHERE
(dtb.name=@_msparam_1)

        drop table #tempbackup
      
',N'@_msparam_0 nvarchar(4000),@_msparam_1 nvarchar(4000)',@_msparam_0=N'L',@_msparam_1=N'master'	Core .Net SqlClient Data Provider		sa	16	200	0	3	1239302740	59	2017-08-04 14:30:11.870	2017-08-04 14:30:11.873		
RPC:Completed	exec sp_executesql N'SELECT
dtb.collation_name AS [Collation],
dtb.name AS [DatabaseName2]
FROM
master.sys.databases AS dtb
WHERE
(dtb.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'master'	Core .Net SqlClient Data Provider		sa	0	8	0	0	1239302740	59	2017-08-04 14:30:11.883	2017-08-04 14:30:11.883	0X00000000040000001A00730070005F006500780065006300750074006500730071006C002E01000082001A00E7206E0076006100720063006800610072002800310033003100290006010000530045004C004500430054000A006400740062002E0063006F006C006C006100740069006F006E005F006E0061006D00650020004100530020005B0043006F006C006C006100740069006F006E005D002C000A006400740062002E006E0061006D00650020004100530020005B00440061007400610062006100730065004E0061006D00650032005D000A00460052004F004D000A006D00610073007400650072002E007300790073002E006400610074006100	
SQL:BatchStarting	
        declare @MasterPath nvarchar(512)
        declare @LogPath nvarchar(512)
        declare @ErrorLog nvarchar(512)
        declare @ErrorLogPath nvarchar(512)

        select @MasterPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'master'
        select @LogPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'mastlog'
        select @ErrorLog=cast(SERVERPROPERTY(N'errorlogfilename') as nvarchar(512))
        select @ErrorLogPath=substring(@ErrorLog, 1, len(@ErrorLog) - charindex('\', reverse(@ErrorLog)))
      


        declare @SmoRoot nvarchar(512)
        exec master.dbo.xp_instance_regread N'HKEY_LOCAL_MACHINE', N'SOFTWARE\Microsoft\MSSQLServer\Setup', N'SQLPath', @SmoRoot OUTPUT
      


SELECT
CAST(case when 'a' <> 'A' then 1 else 0 end AS bit) AS [IsCaseSensitive],
@@MAX_PRECISION AS [MaxPrecision],
@ErrorLogPath AS [ErrorLogPath],
@SmoRoot AS [RootDirectory],
N'Windows' AS [HostPlatform],
N'\' AS [PathSeparator],
CAST(FULLTEXTSERVICEPROPERTY('IsFullTextInstalled') AS bit) AS [IsFullTextInstalled],
@LogPath AS [MasterDBLogPath],
@MasterPath AS [MasterDBPath],
SERVERPROPERTY(N'ProductVersion') AS [VersionString],
CAST(SERVERPROPERTY(N'Edition') AS sysname) AS [Edition],
CAST(SERVERPROPERTY(N'ProductLevel') AS sysname) AS [ProductLevel],
CAST(SERVERPROPERTY('IsSingleUser') AS bit) AS [IsSingleUser],
CAST(SERVERPROPERTY('EngineEdition') AS int) AS [EngineEdition],
convert(sysname, serverproperty(N'collation')) AS [Collation],
CAST(SERVERPROPERTY(N'MachineName') AS sysname) AS [NetName],
CAST(SERVERPROPERTY('IsClustered') AS bit) AS [IsClustered],
SERVERPROPERTY(N'ResourceVersion') AS [ResourceVersionString],
SERVERPROPERTY(N'ResourceLastUpdateDateTime') AS [ResourceLastUpdateDateTime],
SERVERPROPERTY(N'CollationID') AS [CollationID],
SERVERPROPERTY(N'ComparisonStyle') AS [ComparisonStyle],
SERVERPROPERTY(N'SqlCharSet') AS [SqlCharSet],
SERVERPROPERTY(N'SqlCharSetName') AS [SqlCharSetName],
SERVERPROPERTY(N'SqlSortOrder') AS [SqlSortOrder],
SERVERPROPERTY(N'SqlSortOrderName') AS [SqlSortOrderName],
SERVERPROPERTY(N'BuildClrVersion') AS [BuildClrVersionString],
SERVERPROPERTY(N'ComputerNamePhysicalNetBIOS') AS [ComputerNamePhysicalNetBIOS],
CAST(SERVERPROPERTY('IsPolyBaseInstalled') AS bit) AS [IsPolyBaseInstalled]	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.900			
SQL:BatchCompleted	
        declare @MasterPath nvarchar(512)
        declare @LogPath nvarchar(512)
        declare @ErrorLog nvarchar(512)
        declare @ErrorLogPath nvarchar(512)

        select @MasterPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'master'
        select @LogPath=substring(physical_name, 1, len(physical_name) - charindex('\', reverse(physical_name))) from master.sys.database_files where name=N'mastlog'
        select @ErrorLog=cast(SERVERPROPERTY(N'errorlogfilename') as nvarchar(512))
        select @ErrorLogPath=substring(@ErrorLog, 1, len(@ErrorLog) - charindex('\', reverse(@ErrorLog)))
      


        declare @SmoRoot nvarchar(512)
        exec master.dbo.xp_instance_regread N'HKEY_LOCAL_MACHINE', N'SOFTWARE\Microsoft\MSSQLServer\Setup', N'SQLPath', @SmoRoot OUTPUT
      


SELECT
CAST(case when 'a' <> 'A' then 1 else 0 end AS bit) AS [IsCaseSensitive],
@@MAX_PRECISION AS [MaxPrecision],
@ErrorLogPath AS [ErrorLogPath],
@SmoRoot AS [RootDirectory],
N'Windows' AS [HostPlatform],
N'\' AS [PathSeparator],
CAST(FULLTEXTSERVICEPROPERTY('IsFullTextInstalled') AS bit) AS [IsFullTextInstalled],
@LogPath AS [MasterDBLogPath],
@MasterPath AS [MasterDBPath],
SERVERPROPERTY(N'ProductVersion') AS [VersionString],
CAST(SERVERPROPERTY(N'Edition') AS sysname) AS [Edition],
CAST(SERVERPROPERTY(N'ProductLevel') AS sysname) AS [ProductLevel],
CAST(SERVERPROPERTY('IsSingleUser') AS bit) AS [IsSingleUser],
CAST(SERVERPROPERTY('EngineEdition') AS int) AS [EngineEdition],
convert(sysname, serverproperty(N'collation')) AS [Collation],
CAST(SERVERPROPERTY(N'MachineName') AS sysname) AS [NetName],
CAST(SERVERPROPERTY('IsClustered') AS bit) AS [IsClustered],
SERVERPROPERTY(N'ResourceVersion') AS [ResourceVersionString],
SERVERPROPERTY(N'ResourceLastUpdateDateTime') AS [ResourceLastUpdateDateTime],
SERVERPROPERTY(N'CollationID') AS [CollationID],
SERVERPROPERTY(N'ComparisonStyle') AS [ComparisonStyle],
SERVERPROPERTY(N'SqlCharSet') AS [SqlCharSet],
SERVERPROPERTY(N'SqlCharSetName') AS [SqlCharSetName],
SERVERPROPERTY(N'SqlSortOrder') AS [SqlSortOrder],
SERVERPROPERTY(N'SqlSortOrderName') AS [SqlSortOrderName],
SERVERPROPERTY(N'BuildClrVersion') AS [BuildClrVersionString],
SERVERPROPERTY(N'ComputerNamePhysicalNetBIOS') AS [ComputerNamePhysicalNetBIOS],
CAST(SERVERPROPERTY('IsPolyBaseInstalled') AS bit) AS [IsPolyBaseInstalled]	Core .Net SqlClient Data Provider		sa	0	5	0	2	1239302740	59	2017-08-04 14:30:11.900	2017-08-04 14:30:11.903		
RPC:Completed	exec sp_executesql N'
        create table #tmp_sp_db_vardecimal_storage_format (dbname sysname null, vardecimal_enabled varchar(3) null)
        if exists (select o.object_id from sys.system_objects o where o.name=N''sp_db_vardecimal_storage_format'')
        begin
        insert into #tmp_sp_db_vardecimal_storage_format exec sys.sp_db_vardecimal_storage_format
        end
      


SELECT

        case
        when vardec.vardecimal_enabled = ''ON'' then cast(1 as bit)
        else cast(0 as bit)
        end
       AS [IsVarDecimalStorageFormatEnabled]
FROM
master.sys.databases AS dtb
LEFT OUTER JOIN #tmp_sp_db_vardecimal_storage_format as vardec ON dtb.database_id = db_id(vardec.dbname)
WHERE
(dtb.name=@_msparam_0)

        drop table #tmp_sp_db_vardecimal_storage_format
      
',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'master'	Core .Net SqlClient Data Provider		sa	15	469	2	6	1239302740	59	2017-08-04 14:30:11.913	2017-08-04 14:30:11.920		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.953			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:11.953	2017-08-04 14:30:11.953		
RPC:Completed	exec sp_executesql N'SELECT
sp.name AS [Name]
FROM
sys.database_scoped_configurations AS sp
WHERE
(sp.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'MAXDOP'	Core .Net SqlClient Data Provider		sa	0	8	0	0	1239302740	59	2017-08-04 14:30:11.957	2017-08-04 14:30:11.957		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.967			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:11.967	2017-08-04 14:30:11.967		
RPC:Completed	exec sp_executesql N'SELECT
sp.name AS [Name],
sp.configuration_id AS [Id],
CAST(
      CASE
        WHEN SQL_VARIANT_PROPERTY(value,''BaseType'') = ''bit'' THEN 
          CASE value
            WHEN 1 THEN ''ON''
            WHEN 0 THEN ''OFF''
          END
        ELSE ISNULL(value, ''NULL'')
      END
     AS nvarchar(200)) AS [Value],
CAST(
      CASE
        WHEN SQL_VARIANT_PROPERTY(value_for_secondary,''BaseType'') = ''bit'' THEN
          CASE value_for_secondary
            WHEN 1 THEN ''ON''
            WHEN 0 THEN ''OFF''
          END
        ELSE ISNULL(value_for_secondary, ''PRIMARY'')
      END
     AS nvarchar(200)) AS [ValueForSecondary]
FROM
sys.database_scoped_configurations AS sp
WHERE
(sp.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'MAXDOP'	Core .Net SqlClient Data Provider		sa	0	10	0	0	1239302740	59	2017-08-04 14:30:11.970	2017-08-04 14:30:11.970		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.977			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:11.977	2017-08-04 14:30:11.977		
RPC:Completed	exec sp_executesql N'SELECT
sp.name AS [Name]
FROM
sys.database_scoped_configurations AS sp
WHERE
(sp.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'Legacy_Cardinality_Estimation'	Core .Net SqlClient Data Provider		sa	0	8	0	0	1239302740	59	2017-08-04 14:30:11.980	2017-08-04 14:30:11.980		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:11.990			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:11.990	2017-08-04 14:30:11.990		
RPC:Completed	exec sp_executesql N'SELECT
sp.name AS [Name],
sp.configuration_id AS [Id],
CAST(
      CASE
        WHEN SQL_VARIANT_PROPERTY(value,''BaseType'') = ''bit'' THEN 
          CASE value
            WHEN 1 THEN ''ON''
            WHEN 0 THEN ''OFF''
          END
        ELSE ISNULL(value, ''NULL'')
      END
     AS nvarchar(200)) AS [Value],
CAST(
      CASE
        WHEN SQL_VARIANT_PROPERTY(value_for_secondary,''BaseType'') = ''bit'' THEN
          CASE value_for_secondary
            WHEN 1 THEN ''ON''
            WHEN 0 THEN ''OFF''
          END
        ELSE ISNULL(value_for_secondary, ''PRIMARY'')
      END
     AS nvarchar(200)) AS [ValueForSecondary]
FROM
sys.database_scoped_configurations AS sp
WHERE
(sp.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'Legacy_Cardinality_Estimation'	Core .Net SqlClient Data Provider		sa	0	10	0	0	1239302740	59	2017-08-04 14:30:11.997	2017-08-04 14:30:11.997		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:12.007			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:12.007	2017-08-04 14:30:12.007		
RPC:Completed	exec sp_executesql N'SELECT
sp.name AS [Name]
FROM
sys.database_scoped_configurations AS sp
WHERE
(sp.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'Parameter_Sniffing'	Core .Net SqlClient Data Provider		sa	0	8	0	0	1239302740	59	2017-08-04 14:30:12.010	2017-08-04 14:30:12.010		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:12.017			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:12.017	2017-08-04 14:30:12.017		
RPC:Completed	exec sp_executesql N'SELECT
sp.name AS [Name],
sp.configuration_id AS [Id],
CAST(
      CASE
        WHEN SQL_VARIANT_PROPERTY(value,''BaseType'') = ''bit'' THEN 
          CASE value
            WHEN 1 THEN ''ON''
            WHEN 0 THEN ''OFF''
          END
        ELSE ISNULL(value, ''NULL'')
      END
     AS nvarchar(200)) AS [Value],
CAST(
      CASE
        WHEN SQL_VARIANT_PROPERTY(value_for_secondary,''BaseType'') = ''bit'' THEN
          CASE value_for_secondary
            WHEN 1 THEN ''ON''
            WHEN 0 THEN ''OFF''
          END
        ELSE ISNULL(value_for_secondary, ''PRIMARY'')
      END
     AS nvarchar(200)) AS [ValueForSecondary]
FROM
sys.database_scoped_configurations AS sp
WHERE
(sp.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'Parameter_Sniffing'	Core .Net SqlClient Data Provider		sa	0	10	0	0	1239302740	59	2017-08-04 14:30:12.020	2017-08-04 14:30:12.020		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:12.027			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:12.027	2017-08-04 14:30:12.027		
RPC:Completed	exec sp_executesql N'SELECT
sp.name AS [Name]
FROM
sys.database_scoped_configurations AS sp
WHERE
(sp.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'Query_Optimizer_Hotfixes'	Core .Net SqlClient Data Provider		sa	0	8	0	0	1239302740	59	2017-08-04 14:30:12.030	2017-08-04 14:30:12.030		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:12.047			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:12.047	2017-08-04 14:30:12.047		
RPC:Completed	exec sp_executesql N'SELECT
sp.name AS [Name],
sp.configuration_id AS [Id],
CAST(
      CASE
        WHEN SQL_VARIANT_PROPERTY(value,''BaseType'') = ''bit'' THEN 
          CASE value
            WHEN 1 THEN ''ON''
            WHEN 0 THEN ''OFF''
          END
        ELSE ISNULL(value, ''NULL'')
      END
     AS nvarchar(200)) AS [Value],
CAST(
      CASE
        WHEN SQL_VARIANT_PROPERTY(value_for_secondary,''BaseType'') = ''bit'' THEN
          CASE value_for_secondary
            WHEN 1 THEN ''ON''
            WHEN 0 THEN ''OFF''
          END
        ELSE ISNULL(value_for_secondary, ''PRIMARY'')
      END
     AS nvarchar(200)) AS [ValueForSecondary]
FROM
sys.database_scoped_configurations AS sp
WHERE
(sp.name=@_msparam_0)',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'Query_Optimizer_Hotfixes'	Core .Net SqlClient Data Provider		sa	0	10	0	0	1239302740	59	2017-08-04 14:30:12.050	2017-08-04 14:30:12.050		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:12.063			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:12.063	2017-08-04 14:30:12.063		
SQL:BatchStarting	
        DECLARE @is_policy_automation_enabled bit
        SET @is_policy_automation_enabled  = (SELECT CONVERT(bit, current_value)
        FROM msdb.dbo.syspolicy_configuration
        WHERE name = 'Enabled')
      


SELECT
CAST(cast(g.name as varbinary(256)) AS sysname) AS [Name],
g.data_space_id AS [ID],
CAST(g.is_default AS bit) AS [IsDefault],
g.is_read_only AS [ReadOnly],
CAST(ISNULL((select sum(cast(gs.size as float))*convert(float,8) from sys.database_files gs where gs.data_space_id = g.data_space_id), 0) AS float) AS [Size],
CASE g.type WHEN 'FG' THEN 0 WHEN 'PS' THEN 1 WHEN 'FD' THEN 2 WHEN 'FX' THEN 3 END AS [FileGroupType],
CAST(CASE WHEN 'FD'=g.type THEN 1 ELSE 0 END AS bit) AS [IsFileStream],
case when 1=@is_policy_automation_enabled and exists (select * from msdb.dbo.syspolicy_system_health_state where target_query_expression_with_id like 'Server' + '/Database\[@ID=' + convert(nvarchar(20),dtb.database_id) + '\]'+ '/FileGroup\[@ID=' + convert(nvarchar(20),g.data_space_id) + '\]%' ESCAPE '\') then 1 else 0 end AS [PolicyHealthState]
FROM
master.sys.databases AS dtb,
sys.filegroups AS g
WHERE
(dtb.name=db_name())
ORDER BY
[Name] ASC	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:12.067			
SQL:BatchCompleted	
        DECLARE @is_policy_automation_enabled bit
        SET @is_policy_automation_enabled  = (SELECT CONVERT(bit, current_value)
        FROM msdb.dbo.syspolicy_configuration
        WHERE name = 'Enabled')
      


SELECT
CAST(cast(g.name as varbinary(256)) AS sysname) AS [Name],
g.data_space_id AS [ID],
CAST(g.is_default AS bit) AS [IsDefault],
g.is_read_only AS [ReadOnly],
CAST(ISNULL((select sum(cast(gs.size as float))*convert(float,8) from sys.database_files gs where gs.data_space_id = g.data_space_id), 0) AS float) AS [Size],
CASE g.type WHEN 'FG' THEN 0 WHEN 'PS' THEN 1 WHEN 'FD' THEN 2 WHEN 'FX' THEN 3 END AS [FileGroupType],
CAST(CASE WHEN 'FD'=g.type THEN 1 ELSE 0 END AS bit) AS [IsFileStream],
case when 1=@is_policy_automation_enabled and exists (select * from msdb.dbo.syspolicy_system_health_state where target_query_expression_with_id like 'Server' + '/Database\[@ID=' + convert(nvarchar(20),dtb.database_id) + '\]'+ '/FileGroup\[@ID=' + convert(nvarchar(20),g.data_space_id) + '\]%' ESCAPE '\') then 1 else 0 end AS [PolicyHealthState]
FROM
master.sys.databases AS dtb,
sys.filegroups AS g
WHERE
(dtb.name=db_name())
ORDER BY
[Name] ASC	Core .Net SqlClient Data Provider		sa	0	14	0	0	1239302740	59	2017-08-04 14:30:12.067	2017-08-04 14:30:12.067		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:12.083			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:12.083	2017-08-04 14:30:12.083		
RPC:Completed	exec sp_executesql N'  with s as (
select df.[type] as [type],
df.name collate database_default as name,
df.drop_lsn as drop_lsn,
dtb.database_id as database_id, 
df.[file_id] as [file_id],
df.max_size as max_size, 
df.growth as growth,
df.is_percent_growth as is_percent_growth,
df.is_media_read_only as is_media_read_only,
df.is_read_only as is_read_only,
df.[state] as [state],
df.is_sparse as is_sparse,
df.data_space_id as data_space_id,
df.physical_name collate database_default as physical_name,
df.size as size
    from sys.database_files as df inner join sys.databases as dtb 
         on (db_id() = dtb.database_id) 
              and (df.type = 2 or df.type = 0) 
              and (df.drop_lsn is null) 
         where
              (dtb.source_database_id is null)
union
select 
mf.[type] as [type],
mf.name collate database_default as name,
mf.drop_lsn as drop_lsn,
mf.database_id as database_id,
mf.[file_id] as [file_id],
mf.max_size as max_size,
mf.growth as growth,
mf.is_percent_growth as is_percent_growth,
mf.is_media_read_only as is_media_read_only,
mf.is_read_only as is_read_only,
mf.[state] as [state],
mf.is_sparse as is_sparse,
mf.data_space_id as data_space_id,
mf.physical_name collate database_default as physical_name,
mf.size as size 
    from sys.master_files as mf inner join sys.databases as db
       on (mf.database_id = db.database_id)
          and (mf.type = 2 or mf.type = 0) 
          and (mf.drop_lsn is null)           
          and (db.source_database_id is not null)
       where mf.database_id = db_id()) 
            


SELECT
s.name AS [Name],
CAST(CASE s.file_id WHEN 1 THEN 1 ELSE 0 END AS bit) AS [IsPrimaryFile],
CAST(CASE when s.growth=0 THEN (CASE WHEN s.type = 2 THEN 0 ELSE 99 END) ELSE s.is_percent_growth END AS int) AS [GrowthType],
s.physical_name AS [FileName],
s.size * CONVERT(float,8) AS [Size],
CASE when s.max_size=-1 then -1 else s.max_size * CONVERT(float,8) END AS [MaxSize],
s.file_id AS [ID],
''Server[@Name='' + quotename(CAST(
        serverproperty(N''Servername'')
       AS sysname),'''''''') + '']'' + ''/Database[@Name='' + quotename(db_name(),'''''''') + '']'' + ''/FileGroup[@Name='' + quotename(CAST(cast(g.name as varbinary(256)) AS sysname),'''''''') + '']'' + ''/File[@Name='' + quotename(s.name,'''''''') + '']'' AS [Urn],
CAST(CASE s.is_percent_growth WHEN 1 THEN s.growth ELSE s.growth*8 END AS float) AS [Growth],
s.is_media_read_only AS [IsReadOnlyMedia],
s.is_read_only AS [IsReadOnly],
CAST(case s.state when 6 then 1 else 0 end AS bit) AS [IsOffline],
s.is_sparse AS [IsSparse]
FROM
sys.filegroups AS g
INNER JOIN s ON s.data_space_id=g.data_space_id
WHERE
(CAST(cast(g.name as varbinary(256)) AS sysname)=@_msparam_0)
ORDER BY
[Name] ASC',N'@_msparam_0 nvarchar(4000)',@_msparam_0=N'PRIMARY'	Core .Net SqlClient Data Provider		sa	0	12	0	0	1239302740	59	2017-08-04 14:30:12.087	2017-08-04 14:30:12.087		
SQL:BatchStarting	use [master]	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:12.117			
SQL:BatchCompleted	use [master]	Core .Net SqlClient Data Provider		sa	0	0	0	0	1239302740	59	2017-08-04 14:30:12.117	2017-08-04 14:30:12.117		
SQL:BatchStarting	SELECT
s.name AS [Name],
CAST(FILEPROPERTY(s.name, 'SpaceUsed') AS float)* CONVERT(float,8) AS [UsedSpace],
CAST(CASE when s.growth=0 THEN (CASE WHEN s.type = 2 THEN 0 ELSE 99 END) ELSE s.is_percent_growth END AS int) AS [GrowthType],
s.physical_name AS [FileName],
s.size * CONVERT(float,8) AS [Size],
CASE when s.max_size=-1 then -1 else s.max_size * CONVERT(float,8) END AS [MaxSize],
s.file_id AS [ID],
'Server[@Name=' + quotename(CAST(
        serverproperty(N'Servername')
       AS sysname),'''') + ']' + '/Database[@Name=' + quotename(db_name(),'''') + ']' + '/LogFile[@Name=' + quotename(s.name,'''') + ']' AS [Urn],
CAST(CASE s.is_percent_growth WHEN 1 THEN s.growth ELSE s.growth*8 END AS float) AS [Growth],
s.is_media_read_only AS [IsReadOnlyMedia],
s.is_read_only AS [IsReadOnly],
CAST(case s.state when 6 then 1 else 0 end AS bit) AS [IsOffline],
s.is_sparse AS [IsSparse]
FROM
sys.database_files AS s
WHERE
(s.type = 1)
ORDER BY
[Name] ASC	Core .Net SqlClient Data Provider		sa					1239302740	59	2017-08-04 14:30:12.120			
SQL:BatchCompleted	SELECT
s.name AS [Name],
CAST(FILEPROPERTY(s.name, 'SpaceUsed') AS float)* CONVERT(float,8) AS [UsedSpace],
CAST(CASE when s.growth=0 THEN (CASE WHEN s.type = 2 THEN 0 ELSE 99 END) ELSE s.is_percent_growth END AS int) AS [GrowthType],
s.physical_name AS [FileName],
s.size * CONVERT(float,8) AS [Size],
CASE when s.max_size=-1 then -1 else s.max_size * CONVERT(float,8) END AS [MaxSize],
s.file_id AS [ID],
'Server[@Name=' + quotename(CAST(
        serverproperty(N'Servername')
       AS sysname),'''') + ']' + '/Database[@Name=' + quotename(db_name(),'''') + ']' + '/LogFile[@Name=' + quotename(s.name,'''') + ']' AS [Urn],
CAST(CASE s.is_percent_growth WHEN 1 THEN s.growth ELSE s.growth*8 END AS float) AS [Growth],
s.is_media_read_only AS [IsReadOnlyMedia],
s.is_read_only AS [IsReadOnly],
CAST(case s.state when 6 then 1 else 0 end AS bit) AS [IsOffline],
s.is_sparse AS [IsSparse]
FROM
sys.database_files AS s
WHERE
(s.type = 1)
ORDER BY
[Name] ASC	Core .Net SqlClient Data Provider		sa	0	6	0	0	1239302740	59	2017-08-04 14:30:12.120	2017-08-04 14:30:12.120		
Audit Login	-- network protocol: TCP/IP
set quoted_identifier on
set arithabort off
set numeric_roundabort off
set ansi_warnings on
set ansi_padding on
set ansi_nulls on
set concat_null_yields_null on
set cursor_close_on_commit off
set implicit_transactions off
set language us_english
set dateformat mdy
set datefirst 7
set transaction isolation level read committed
	carbon		sa					1239302740	60	2017-08-04 14:30:12.173			
SQL:BatchStarting	SELECT s.name AS schema_name, o.[name] AS object_name, o.[type] AS object_type
                  FROM sys.all_objects o
                    INNER JOIN sys.schemas s ON o.schema_id = s.schema_id
                  WHERE (o.[type] = 'P' OR o.[type] = 'V' OR o.[type] = 'U') ORDER BY object_type, schema_name, object_name	carbon		sa					1239302740	60	2017-08-04 14:30:12.177			
SQL:BatchCompleted	SELECT s.name AS schema_name, o.[name] AS object_name, o.[type] AS object_type
                  FROM sys.all_objects o
                    INNER JOIN sys.schemas s ON o.schema_id = s.schema_id
                  WHERE (o.[type] = 'P' OR o.[type] = 'V' OR o.[type] = 'U') ORDER BY object_type, schema_name, object_name	carbon		sa	31	100	1	42	1239302740	60	2017-08-04 14:30:12.177	2017-08-04 14:30:12.220		
Audit Logout		carbon		sa	31	100	1	434583	1239302740	60	2017-08-04 14:30:12.173	2017-08-04 14:37:26.757		
Audit Logout		carbon		sa	16	15	0	1815690	1239302740	56	2017-08-04 14:30:06.520	2017-08-04 15:00:22.210		
Audit Logout		carbon		sa	0	15	0	1815387	1239302740	58	2017-08-04 14:30:06.823	2017-08-04 15:00:22.210		
Audit Logout		carbon		sa	15	187	0	1815433	1239302740	57	2017-08-04 14:30:06.780	2017-08-04 15:00:22.213		
Audit Logout		Core .Net SqlClient Data Provider		sa	47	1107	3	1813947	1239302740	59	2017-08-04 14:30:11.543	2017-08-04 15:00:25.490		
