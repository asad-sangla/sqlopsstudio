<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="9.564999999999987" tests="2717" failures="0">
  <testsuite name="Root Suite" timestamp="2017-02-22T23:10:11" tests="0" failures="0" time="0">
  </testsuite>
  <testsuite name="CharCode" timestamp="2017-02-22T23:10:11" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="CharCode has good values" time="0" classname="has good values">
    </testcase>
  </testsuite>
  <testsuite name="RangeMap" timestamp="2017-02-22T23:10:11" tests="14" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.004">
    <testcase name="RangeMap intersection" time="0.001" classname="intersection">
    </testcase>
    <testcase name="RangeMap multiIntersect" time="0.001" classname="multiIntersect">
    </testcase>
    <testcase name="RangeMap consolidate" time="0" classname="consolidate">
    </testcase>
    <testcase name="RangeMap empty" time="0" classname="empty">
    </testcase>
    <testcase name="RangeMap length &amp; count" time="0.001" classname="length &amp; count">
    </testcase>
    <testcase name="RangeMap length &amp; count #2" time="0" classname="length &amp; count #2">
    </testcase>
    <testcase name="RangeMap length &amp; count #3" time="0" classname="length &amp; count #3">
    </testcase>
    <testcase name="RangeMap length &amp; count #4" time="0" classname="length &amp; count #4">
    </testcase>
    <testcase name="RangeMap insert" time="0" classname="insert">
    </testcase>
    <testcase name="RangeMap delete" time="0" classname="delete">
    </testcase>
    <testcase name="RangeMap insert &amp; delete" time="0" classname="insert &amp; delete">
    </testcase>
    <testcase name="RangeMap insert &amp; delete #2" time="0" classname="insert &amp; delete #2">
    </testcase>
    <testcase name="RangeMap insert &amp; delete #3" time="0" classname="insert &amp; delete #3">
    </testcase>
    <testcase name="RangeMap insert &amp; delete #3" time="0.001" classname="insert &amp; delete #3">
    </testcase>
  </testsuite>
  <testsuite name="indexAt, positionAt" timestamp="2017-02-22T23:10:11" tests="6" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="RangeMap indexAt, positionAt empty" time="0" classname="empty">
    </testcase>
    <testcase name="RangeMap indexAt, positionAt simple" time="0" classname="simple">
    </testcase>
    <testcase name="RangeMap indexAt, positionAt simple #2" time="0" classname="simple #2">
    </testcase>
    <testcase name="RangeMap indexAt, positionAt insert" time="0" classname="insert">
    </testcase>
    <testcase name="RangeMap indexAt, positionAt delete" time="0" classname="delete">
    </testcase>
    <testcase name="RangeMap indexAt, positionAt delete #2" time="0" classname="delete #2">
    </testcase>
  </testsuite>
  <testsuite name="Browsers" timestamp="2017-02-22T23:10:11" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Browsers all" time="0" classname="all">
    </testcase>
  </testsuite>
  <testsuite name="Network" timestamp="2017-02-22T23:10:11" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Network urls" time="0.001" classname="urls">
    </testcase>
  </testsuite>
  <testsuite name="Lifecycle" timestamp="2017-02-22T23:10:11" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Lifecycle dispose single disposable" time="0" classname="dispose single disposable">
    </testcase>
    <testcase name="Lifecycle dispose disposable array" time="0" classname="dispose disposable array">
    </testcase>
    <testcase name="Lifecycle dispose disposables" time="0" classname="dispose disposables">
    </testcase>
  </testsuite>
  <testsuite name="Reference Collection" timestamp="2017-02-22T23:10:11" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Reference Collection simple" time="0" classname="simple">
    </testcase>
  </testsuite>
  <testsuite name="Types" timestamp="2017-02-22T23:10:11" tests="11" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Types isFunction" time="0" classname="isFunction">
    </testcase>
    <testcase name="Types areFunctions" time="0.001" classname="areFunctions">
    </testcase>
    <testcase name="Types isObject" time="0" classname="isObject">
    </testcase>
    <testcase name="Types isEmptyObject" time="0" classname="isEmptyObject">
    </testcase>
    <testcase name="Types isArray" time="0" classname="isArray">
    </testcase>
    <testcase name="Types isString" time="0" classname="isString">
    </testcase>
    <testcase name="Types isNumber" time="0" classname="isNumber">
    </testcase>
    <testcase name="Types isUndefined" time="0" classname="isUndefined">
    </testcase>
    <testcase name="Types isUndefinedOrNull" time="0" classname="isUndefinedOrNull">
    </testcase>
    <testcase name="Types validateConstraints" time="0.001" classname="validateConstraints">
    </testcase>
    <testcase name="Types create" time="0" classname="create">
    </testcase>
  </testsuite>
  <testsuite name="EventEmitter" timestamp="2017-02-22T23:10:11" tests="17" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="EventEmitter add listener, emit other event type" time="0" classname="add listener, emit other event type">
    </testcase>
    <testcase name="EventEmitter add listener, emit event" time="0" classname="add listener, emit event">
    </testcase>
    <testcase name="EventEmitter add 2 listeners, emit event" time="0" classname="add 2 listeners, emit event">
    </testcase>
    <testcase name="EventEmitter add 1 listener, remove it, emit event" time="0" classname="add 1 listener, remove it, emit event">
    </testcase>
    <testcase name="EventEmitter add 2 listeners, emit event, remove one while processing" time="0" classname="add 2 listeners, emit event, remove one while processing">
    </testcase>
    <testcase name="EventEmitter event object is assert" time="0" classname="event object is assert">
    </testcase>
    <testcase name="EventEmitter deferred emit" time="0" classname="deferred emit">
    </testcase>
    <testcase name="EventEmitter deferred emit maintains events order" time="0" classname="deferred emit maintains events order">
    </testcase>
    <testcase name="EventEmitter deferred emit maintains events order for bulk listeners" time="0" classname="deferred emit maintains events order for bulk listeners">
    </testcase>
    <testcase name="EventEmitter emit notifies bulk listeners" time="0" classname="emit notifies bulk listeners">
    </testcase>
    <testcase name="EventEmitter one event emitter, one listener" time="0" classname="one event emitter, one listener">
    </testcase>
    <testcase name="EventEmitter two event emitters, two listeners, deferred emit" time="0" classname="two event emitters, two listeners, deferred emit">
    </testcase>
    <testcase name="EventEmitter cascading emitters" time="0" classname="cascading emitters">
    </testcase>
    <testcase name="EventEmitter EventEmitter makes no order guarantees 1" time="0" classname="EventEmitter makes no order guarantees 1">
    </testcase>
    <testcase name="EventEmitter EventEmitter makes no order guarantees 2" time="0" classname="EventEmitter makes no order guarantees 2">
    </testcase>
    <testcase name="EventEmitter OrderGuaranteeEventEmitter makes order guarantees 1" time="0.001" classname="OrderGuaranteeEventEmitter makes order guarantees 1">
    </testcase>
    <testcase name="EventEmitter OrderGuaranteeEventEmitter makes order guarantees 2" time="0" classname="OrderGuaranteeEventEmitter makes order guarantees 2">
    </testcase>
  </testsuite>
  <testsuite name="TreeView - HeightMap" timestamp="2017-02-22T23:10:11" tests="11" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="TreeView - HeightMap simple" time="0" classname="simple">
    </testcase>
    <testcase name="TreeView - HeightMap onInsertItems at beginning" time="0" classname="onInsertItems at beginning">
    </testcase>
    <testcase name="TreeView - HeightMap onInsertItems in middle" time="0" classname="onInsertItems in middle">
    </testcase>
    <testcase name="TreeView - HeightMap onInsertItems at end" time="0" classname="onInsertItems at end">
    </testcase>
    <testcase name="TreeView - HeightMap onRemoveItems at beginning" time="0" classname="onRemoveItems at beginning">
    </testcase>
    <testcase name="TreeView - HeightMap onRemoveItems in middle" time="0" classname="onRemoveItems in middle">
    </testcase>
    <testcase name="TreeView - HeightMap onRemoveItems at end" time="0" classname="onRemoveItems at end">
    </testcase>
    <testcase name="TreeView - HeightMap onRefreshItems at beginning" time="0" classname="onRefreshItems at beginning">
    </testcase>
    <testcase name="TreeView - HeightMap onRefreshItems in middle" time="0" classname="onRefreshItems in middle">
    </testcase>
    <testcase name="TreeView - HeightMap onRefreshItems at end" time="0" classname="onRefreshItems at end">
    </testcase>
    <testcase name="TreeView - HeightMap withItemsInRange" time="0" classname="withItemsInRange">
    </testcase>
  </testsuite>
  <testsuite name="Assert" timestamp="2017-02-22T23:10:11" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Assert ok" time="0" classname="ok">
    </testcase>
  </testsuite>
  <testsuite name="Arrays" timestamp="2017-02-22T23:10:11" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Arrays findFirst" time="0" classname="findFirst">
    </testcase>
    <testcase name="Arrays binarySearch" time="0" classname="binarySearch">
    </testcase>
    <testcase name="Arrays distinct" time="0" classname="distinct">
    </testcase>
    <testcase name="Arrays top" time="0.001" classname="top">
    </testcase>
  </testsuite>
  <testsuite name="Collections" timestamp="2017-02-22T23:10:11" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Collections forEach" time="0" classname="forEach">
    </testcase>
    <testcase name="Collections groupBy" time="0" classname="groupBy">
    </testcase>
    <testcase name="Collections remove" time="0" classname="remove">
    </testcase>
  </testsuite>
  <testsuite name="Decorators" timestamp="2017-02-22T23:10:11" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Decorators memoize should memoize methods" time="0.001" classname="memoize should memoize methods">
    </testcase>
    <testcase name="Decorators memoize should memoize getters" time="0" classname="memoize should memoize getters">
    </testcase>
    <testcase name="Decorators memoized property should not be enumerable" time="0" classname="memoized property should not be enumerable">
    </testcase>
    <testcase name="Decorators memoized property should not be writable" time="0" classname="memoized property should not be writable">
    </testcase>
  </testsuite>
  <testsuite name="Graph" timestamp="2017-02-22T23:10:11" tests="9" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Graph cannot be traversed when empty" time="0" classname="cannot be traversed when empty">
    </testcase>
    <testcase name="Graph is possible to lookup nodes that don&apos;t exist" time="0" classname="is possible to lookup nodes that don&apos;t exist">
    </testcase>
    <testcase name="Graph inserts nodes when not there yet" time="0" classname="inserts nodes when not there yet">
    </testcase>
    <testcase name="Graph can remove nodes and get length" time="0" classname="can remove nodes and get length">
    </testcase>
    <testcase name="Graph traverse from leaf" time="0" classname="traverse from leaf">
    </testcase>
    <testcase name="Graph traverse from center" time="0" classname="traverse from center">
    </testcase>
    <testcase name="Graph traverse a chain" time="0" classname="traverse a chain">
    </testcase>
    <testcase name="Graph root" time="0" classname="root">
    </testcase>
    <testcase name="Graph root complex" time="0" classname="root complex">
    </testcase>
  </testsuite>
  <testsuite name="Hash" timestamp="2017-02-22T23:10:12" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Hash string" time="0.001" classname="string">
    </testcase>
    <testcase name="Hash number" time="0" classname="number">
    </testcase>
    <testcase name="Hash boolean" time="0" classname="boolean">
    </testcase>
    <testcase name="Hash array" time="0" classname="array">
    </testcase>
    <testcase name="Hash object" time="0" classname="object">
    </testcase>
  </testsuite>
  <testsuite name="keyCodes" timestamp="2017-02-22T23:10:12" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="keyCodes binary encoding" time="0" classname="binary encoding">
    </testcase>
  </testsuite>
  <testsuite name="Map" timestamp="2017-02-22T23:10:12" tests="8" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Map LinkedMap - basics" time="0" classname="LinkedMap - basics">
    </testcase>
    <testcase name="Map BoundedLinkedMap - basics" time="0.001" classname="BoundedLinkedMap - basics">
    </testcase>
    <testcase name="Map BoundedLinkedMap - bounded" time="0" classname="BoundedLinkedMap - bounded">
    </testcase>
    <testcase name="Map BoundedLinkedMap - bounded with ratio" time="0" classname="BoundedLinkedMap - bounded with ratio">
    </testcase>
    <testcase name="Map LRUCache" time="0" classname="LRUCache">
    </testcase>
    <testcase name="Map TrieMap - basics" time="0.001" classname="TrieMap - basics">
    </testcase>
    <testcase name="Map TrieMap - lookup" time="0" classname="TrieMap - lookup">
    </testcase>
    <testcase name="Map TrieMap - superstr" time="0" classname="TrieMap - superstr">
    </testcase>
  </testsuite>
  <testsuite name="Marshalling" timestamp="2017-02-22T23:10:12" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Marshalling RegExp" time="0" classname="RegExp">
    </testcase>
    <testcase name="Marshalling URI" time="0.001" classname="URI">
    </testcase>
    <testcase name="Marshalling Bug 16793:# in folder name =&gt; mirror models get out of sync" time="0" classname="Bug 16793:# in folder name =&gt; mirror models get out of sync">
    </testcase>
  </testsuite>
  <testsuite name="Objects" timestamp="2017-02-22T23:10:12" tests="6" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Objects equals" time="0" classname="equals">
    </testcase>
    <testcase name="Objects mixin - array" time="0" classname="mixin - array">
    </testcase>
    <testcase name="Objects mixin - no overwrite" time="0" classname="mixin - no overwrite">
    </testcase>
    <testcase name="Objects cloneAndChange" time="0.001" classname="cloneAndChange">
    </testcase>
    <testcase name="Objects safeStringify" time="0" classname="safeStringify">
    </testcase>
    <testcase name="Objects derive" time="0" classname="derive">
    </testcase>
  </testsuite>
  <testsuite name="Color" timestamp="2017-02-22T23:10:12" tests="9" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="Color rgba2hsla" time="0.001" classname="rgba2hsla">
    </testcase>
    <testcase name="Color hsla2rgba" time="0" classname="hsla2rgba">
    </testcase>
    <testcase name="Color hex2rgba" time="0.001" classname="hex2rgba">
    </testcase>
    <testcase name="Color isLighterColor" time="0" classname="isLighterColor">
    </testcase>
    <testcase name="Color getLighterColor" time="0" classname="getLighterColor">
    </testcase>
    <testcase name="Color isDarkerColor" time="0" classname="isDarkerColor">
    </testcase>
    <testcase name="Color getDarkerColor" time="0.001" classname="getDarkerColor">
    </testcase>
    <testcase name="Color luminosity" time="0" classname="luminosity">
    </testcase>
    <testcase name="Color contrast" time="0" classname="contrast">
    </testcase>
  </testsuite>
  <testsuite name="Regex" timestamp="2017-02-22T23:10:12" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Regex findAll" time="0" classname="findAll">
    </testcase>
  </testsuite>
  <testsuite name="Strings" timestamp="2017-02-22T23:10:12" tests="17" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Strings equalsIgnoreCase" time="0" classname="equalsIgnoreCase">
    </testcase>
    <testcase name="Strings compareIgnoreCase" time="0" classname="compareIgnoreCase">
    </testcase>
    <testcase name="Strings format" time="0.001" classname="format">
    </testcase>
    <testcase name="Strings computeLineStarts" time="0" classname="computeLineStarts">
    </testcase>
    <testcase name="Strings pad" time="0" classname="pad">
    </testcase>
    <testcase name="Strings escape" time="0" classname="escape">
    </testcase>
    <testcase name="Strings startsWith" time="0" classname="startsWith">
    </testcase>
    <testcase name="Strings endsWith" time="0" classname="endsWith">
    </testcase>
    <testcase name="Strings ltrim" time="0" classname="ltrim">
    </testcase>
    <testcase name="Strings rtrim" time="0" classname="rtrim">
    </testcase>
    <testcase name="Strings trim" time="0" classname="trim">
    </testcase>
    <testcase name="Strings trimWhitespace" time="0" classname="trimWhitespace">
    </testcase>
    <testcase name="Strings appendWithLimit" time="0" classname="appendWithLimit">
    </testcase>
    <testcase name="Strings repeat" time="0" classname="repeat">
    </testcase>
    <testcase name="Strings lastNonWhitespaceIndex" time="0.001" classname="lastNonWhitespaceIndex">
    </testcase>
    <testcase name="Strings containsRTL" time="0" classname="containsRTL">
    </testcase>
    <testcase name="Strings isBasicASCII" time="0" classname="isBasicASCII">
    </testcase>
  </testsuite>
  <testsuite name="Filters" timestamp="2017-02-22T23:10:12" tests="8" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="Filters or" time="0" classname="or">
    </testcase>
    <testcase name="Filters PrefixFilter - case sensitive" time="0" classname="PrefixFilter - case sensitive">
    </testcase>
    <testcase name="Filters PrefixFilter - ignore case" time="0.001" classname="PrefixFilter - ignore case">
    </testcase>
    <testcase name="Filters CamelCaseFilter" time="0.001" classname="CamelCaseFilter">
    </testcase>
    <testcase name="Filters CamelCaseFilter - #19256" time="0" classname="CamelCaseFilter - #19256">
    </testcase>
    <testcase name="Filters matchesContiguousSubString" time="0" classname="matchesContiguousSubString">
    </testcase>
    <testcase name="Filters matchesSubString" time="0" classname="matchesSubString">
    </testcase>
    <testcase name="Filters WordFilter" time="0.001" classname="WordFilter">
    </testcase>
  </testsuite>
  <testsuite name="Paths" timestamp="2017-02-22T23:10:12" tests="12" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="Paths relative" time="0.001" classname="relative">
    </testcase>
    <testcase name="Paths dirname" time="0" classname="dirname">
    </testcase>
    <testcase name="Paths normalize" time="0.001" classname="normalize">
    </testcase>
    <testcase name="Paths getRootLength" time="0" classname="getRootLength">
    </testcase>
    <testcase name="Paths makeAbsolute" time="0" classname="makeAbsolute">
    </testcase>
    <testcase name="Paths basename" time="0" classname="basename">
    </testcase>
    <testcase name="Paths join" time="0" classname="join">
    </testcase>
    <testcase name="Paths isEqualOrParent" time="0" classname="isEqualOrParent">
    </testcase>
    <testcase name="Paths extname" time="0" classname="extname">
    </testcase>
    <testcase name="Paths isUNC" time="0" classname="isUNC">
    </testcase>
    <testcase name="Paths isValidBasename" time="0.001" classname="isValidBasename">
    </testcase>
    <testcase name="Paths isAbsolute" time="0" classname="isAbsolute">
    </testcase>
  </testsuite>
  <testsuite name="URI" timestamp="2017-02-22T23:10:12" tests="22" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="URI file#toString" time="0" classname="file#toString">
    </testcase>
    <testcase name="URI file#path" time="0" classname="file#path">
    </testcase>
    <testcase name="URI URI#fsPath - no `fsPath` when no `path`" time="0" classname="URI#fsPath - no `fsPath` when no `path`">
    </testcase>
    <testcase name="URI http#toString" time="0" classname="http#toString">
    </testcase>
    <testcase name="URI http#toString, encode=FALSE" time="0.001" classname="http#toString, encode=FALSE">
    </testcase>
    <testcase name="URI with, identity" time="0" classname="with, identity">
    </testcase>
    <testcase name="URI with, changes" time="0" classname="with, changes">
    </testcase>
    <testcase name="URI with, remove components #8465" time="0" classname="with, remove components #8465">
    </testcase>
    <testcase name="URI with, validation" time="0" classname="with, validation">
    </testcase>
    <testcase name="URI parse" time="0" classname="parse">
    </testcase>
    <testcase name="URI parse, disallow //path when no authority" time="0" classname="parse, disallow //path when no authority">
    </testcase>
    <testcase name="URI URI#file" time="0.001" classname="URI#file">
    </testcase>
    <testcase name="URI URI#file, auto-slash windows drive letter" time="0" classname="URI#file, auto-slash windows drive letter">
    </testcase>
    <testcase name="URI URI#file, always slash" time="0" classname="URI#file, always slash">
    </testcase>
    <testcase name="URI URI.toString, only scheme and query" time="0" classname="URI.toString, only scheme and query">
    </testcase>
    <testcase name="URI URI#toString, upper-case percent espaces" time="0" classname="URI#toString, upper-case percent espaces">
    </testcase>
    <testcase name="URI URI#toString, lower-case windows drive letter" time="0" classname="URI#toString, lower-case windows drive letter">
    </testcase>
    <testcase name="URI URI#toString, escape all the bits" time="0" classname="URI#toString, escape all the bits">
    </testcase>
    <testcase name="URI URI#toString, don&apos;t encode port" time="0" classname="URI#toString, don&apos;t encode port">
    </testcase>
    <testcase name="URI correctFileUriToFilePath2" time="0" classname="correctFileUriToFilePath2">
    </testcase>
    <testcase name="URI URI - http, query &amp; toString" time="0" classname="URI - http, query &amp; toString">
    </testcase>
    <testcase name="URI URI - (de)serialize" time="0.001" classname="URI - (de)serialize">
    </testcase>
  </testsuite>
  <testsuite name="Labels" timestamp="2017-02-22T23:10:12" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Labels shorten - windows" time="0" classname="shorten - windows">
    </testcase>
    <testcase name="Labels shorten - not windows" time="0" classname="shorten - not windows">
    </testcase>
  </testsuite>
  <testsuite name="Scorer" timestamp="2017-02-22T23:10:12" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Scorer score" time="0.001" classname="score">
    </testcase>
    <testcase name="Scorer cache" time="0" classname="cache">
    </testcase>
    <testcase name="Scorer matches" time="0" classname="matches">
    </testcase>
  </testsuite>
  <testsuite name="Comparers" timestamp="2017-02-22T23:10:12" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Comparers compareFileNames" time="0.001" classname="compareFileNames">
    </testcase>
  </testsuite>
  <testsuite name="UUID" timestamp="2017-02-22T23:10:12" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="UUID generation" time="0" classname="generation">
    </testcase>
    <testcase name="UUID parse" time="0" classname="parse">
    </testcase>
  </testsuite>
  <testsuite name="Flow" timestamp="2017-02-22T23:10:12" tests="19" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.066">
    <testcase name="Flow loopSync" time="0.001" classname="loopSync">
    </testcase>
    <testcase name="Flow loopByFunctionSync" time="0" classname="loopByFunctionSync">
    </testcase>
    <testcase name="Flow loopByFunctionAsync" time="0" classname="loopByFunctionAsync">
    </testcase>
    <testcase name="Flow loopSyncErrorByThrow" time="0" classname="loopSyncErrorByThrow">
    </testcase>
    <testcase name="Flow loopSyncErrorByCallback" time="0" classname="loopSyncErrorByCallback">
    </testcase>
    <testcase name="Flow loopAsync" time="0.001" classname="loopAsync">
    </testcase>
    <testcase name="Flow loopAsyncErrorByCallback" time="0" classname="loopAsyncErrorByCallback">
    </testcase>
    <testcase name="Flow sequenceSync" time="0.002" classname="sequenceSync">
    </testcase>
    <testcase name="Flow sequenceAsync" time="0" classname="sequenceAsync">
    </testcase>
    <testcase name="Flow sequenceSyncErrorByThrow" time="0" classname="sequenceSyncErrorByThrow">
    </testcase>
    <testcase name="Flow sequenceSyncErrorByCallback" time="0" classname="sequenceSyncErrorByCallback">
    </testcase>
    <testcase name="Flow sequenceAsyncErrorByThrow" time="0" classname="sequenceAsyncErrorByThrow">
    </testcase>
    <testcase name="Flow sequenceAsyncErrorByCallback" time="0" classname="sequenceAsyncErrorByCallback">
    </testcase>
    <testcase name="Flow syncChainedSequenceError" time="0.001" classname="syncChainedSequenceError">
    </testcase>
    <testcase name="Flow tolerateBooleanResults" time="0" classname="tolerateBooleanResults">
    </testcase>
    <testcase name="Flow loopTolerateBooleanResults" time="0" classname="loopTolerateBooleanResults">
    </testcase>
    <testcase name="Flow parallel" time="0" classname="parallel">
    </testcase>
    <testcase name="Flow parallel - setTimeout" time="0.031" classname="parallel - setTimeout">
    </testcase>
    <testcase name="Flow parallel - with error" time="0.03" classname="parallel - with error">
    </testcase>
  </testsuite>
  <testsuite name="Glob" timestamp="2017-02-22T23:10:12" tests="31" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.009000000000000001">
    <testcase name="Glob simple" time="0.002" classname="simple">
    </testcase>
    <testcase name="Glob dot hidden" time="0" classname="dot hidden">
    </testcase>
    <testcase name="Glob file pattern" time="0" classname="file pattern">
    </testcase>
    <testcase name="Glob star" time="0" classname="star">
    </testcase>
    <testcase name="Glob questionmark" time="0" classname="questionmark">
    </testcase>
    <testcase name="Glob globstar" time="0.002" classname="globstar">
    </testcase>
    <testcase name="Glob brace expansion" time="0.001" classname="brace expansion">
    </testcase>
    <testcase name="Glob expression support (single)" time="0" classname="expression support (single)">
    </testcase>
    <testcase name="Glob expression support (multiple)" time="0" classname="expression support (multiple)">
    </testcase>
    <testcase name="Glob brackets" time="0.001" classname="brackets">
    </testcase>
    <testcase name="Glob full path" time="0" classname="full path">
    </testcase>
    <testcase name="Glob prefix agnostic" time="0" classname="prefix agnostic">
    </testcase>
    <testcase name="Glob cached properly" time="0" classname="cached properly">
    </testcase>
    <testcase name="Glob invalid glob" time="0" classname="invalid glob">
    </testcase>
    <testcase name="Glob split glob aware" time="0" classname="split glob aware">
    </testcase>
    <testcase name="Glob expression with disabled glob" time="0" classname="expression with disabled glob">
    </testcase>
    <testcase name="Glob expression with two non-trivia globs" time="0" classname="expression with two non-trivia globs">
    </testcase>
    <testcase name="Glob expression with empty glob" time="0" classname="expression with empty glob">
    </testcase>
    <testcase name="Glob expression with other falsy value" time="0" classname="expression with other falsy value">
    </testcase>
    <testcase name="Glob expression with two basename globs" time="0.001" classname="expression with two basename globs">
    </testcase>
    <testcase name="Glob expression with two basename globs and a siblings expression" time="0" classname="expression with two basename globs and a siblings expression">
    </testcase>
    <testcase name="Glob expression with multipe basename globs" time="0" classname="expression with multipe basename globs">
    </testcase>
    <testcase name="Glob falsy expression/pattern" time="0" classname="falsy expression/pattern">
    </testcase>
    <testcase name="Glob falsy path" time="0" classname="falsy path">
    </testcase>
    <testcase name="Glob expression/pattern basename" time="0" classname="expression/pattern basename">
    </testcase>
    <testcase name="Glob expression/pattern basename terms" time="0" classname="expression/pattern basename terms">
    </testcase>
    <testcase name="Glob expression/pattern optimization for basenames" time="0" classname="expression/pattern optimization for basenames">
    </testcase>
    <testcase name="Glob trailing slash" time="0" classname="trailing slash">
    </testcase>
    <testcase name="Glob expression/pattern path" time="0" classname="expression/pattern path">
    </testcase>
    <testcase name="Glob expression/pattern paths" time="0.001" classname="expression/pattern paths">
    </testcase>
    <testcase name="Glob expression/pattern optimization for paths" time="0.001" classname="expression/pattern optimization for paths">
    </testcase>
  </testsuite>
  <testsuite name="Mime" timestamp="2017-02-22T23:10:12" tests="7" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.004">
    <testcase name="Mime Dynamically Register Text Mime" time="0.002" classname="Dynamically Register Text Mime">
    </testcase>
    <testcase name="Mime Mimes Priority" time="0.001" classname="Mimes Priority">
    </testcase>
    <testcase name="Mime Specificity priority 1" time="0" classname="Specificity priority 1">
    </testcase>
    <testcase name="Mime Specificity priority 2" time="0" classname="Specificity priority 2">
    </testcase>
    <testcase name="Mime Mimes Priority - Longest Extension wins" time="0.001" classname="Mimes Priority - Longest Extension wins">
    </testcase>
    <testcase name="Mime Mimes Priority - User configured wins" time="0" classname="Mimes Priority - User configured wins">
    </testcase>
    <testcase name="Mime Mimes Priority - Pattern matches on path if specified" time="0" classname="Mimes Priority - Pattern matches on path if specified">
    </testcase>
  </testsuite>
  <testsuite name="Ports" timestamp="2017-02-22T23:10:12" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="2.049">
    <testcase name="Ports Finds a free port (no timeout)" time="2.049" classname="Finds a free port (no timeout)">
    </testcase>
  </testsuite>
  <testsuite name="Stream" timestamp="2017-02-22T23:10:14" tests="6" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.011">
    <testcase name="Stream readExactlyByFile - ANSI" time="0.002" classname="readExactlyByFile - ANSI">
    </testcase>
    <testcase name="Stream readExactlyByFile - empty" time="0.002" classname="readExactlyByFile - empty">
    </testcase>
    <testcase name="Stream readExactlyByStream - ANSI" time="0.003" classname="readExactlyByStream - ANSI">
    </testcase>
    <testcase name="Stream readExactlyByStream - empty" time="0.001" classname="readExactlyByStream - empty">
    </testcase>
    <testcase name="Stream readToMatchingString - ANSI" time="0.002" classname="readToMatchingString - ANSI">
    </testcase>
    <testcase name="Stream readToMatchingString - empty" time="0.001" classname="readToMatchingString - empty">
    </testcase>
  </testsuite>
  <testsuite name="Editor Core - Range" timestamp="2017-02-22T23:10:14" tests="8" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Editor Core - Range empty range" time="0" classname="empty range">
    </testcase>
    <testcase name="Editor Core - Range swap start and stop same line" time="0" classname="swap start and stop same line">
    </testcase>
    <testcase name="Editor Core - Range swap start and stop" time="0" classname="swap start and stop">
    </testcase>
    <testcase name="Editor Core - Range no swap same line" time="0" classname="no swap same line">
    </testcase>
    <testcase name="Editor Core - Range no swap" time="0" classname="no swap">
    </testcase>
    <testcase name="Editor Core - Range compareRangesUsingEnds" time="0" classname="compareRangesUsingEnds">
    </testcase>
    <testcase name="Editor Core - Range containsPosition" time="0" classname="containsPosition">
    </testcase>
    <testcase name="Editor Core - Range containsRange" time="0" classname="containsRange">
    </testcase>
  </testsuite>
  <testsuite name="Replace Pattern test" timestamp="2017-02-22T23:10:14" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.005">
    <testcase name="Replace Pattern test parse replace string" time="0.003" classname="parse replace string">
    </testcase>
    <testcase name="Replace Pattern test replace has JavaScript semantics" time="0.001" classname="replace has JavaScript semantics">
    </testcase>
    <testcase name="Replace Pattern test get replace string if given text is a complete match" time="0" classname="get replace string if given text is a complete match">
    </testcase>
    <testcase name="Replace Pattern test get replace string if match is sub-string of the text" time="0.001" classname="get replace string if match is sub-string of the text">
    </testcase>
    <testcase name="Replace Pattern test issue #19740 Find and replace capture group/backreference inserts `undefined` instead of empty string" time="0" classname="issue #19740 Find and replace capture group/backreference inserts `undefined` instead of empty string">
    </testcase>
  </testsuite>
  <testsuite name="Indentation Folding" timestamp="2017-02-22T23:10:14" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Indentation Folding Limit By indent" time="0.002" classname="Limit By indent">
    </testcase>
  </testsuite>
  <testsuite name="StandardAutoClosingPairConditional" timestamp="2017-02-22T23:10:14" tests="10" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="StandardAutoClosingPairConditional Missing notIn" time="0" classname="Missing notIn">
    </testcase>
    <testcase name="StandardAutoClosingPairConditional Empty notIn" time="0" classname="Empty notIn">
    </testcase>
    <testcase name="StandardAutoClosingPairConditional Invalid notIn" time="0" classname="Invalid notIn">
    </testcase>
    <testcase name="StandardAutoClosingPairConditional notIn in strings" time="0" classname="notIn in strings">
    </testcase>
    <testcase name="StandardAutoClosingPairConditional notIn in comments" time="0" classname="notIn in comments">
    </testcase>
    <testcase name="StandardAutoClosingPairConditional notIn in regex" time="0" classname="notIn in regex">
    </testcase>
    <testcase name="StandardAutoClosingPairConditional notIn in strings nor comments" time="0" classname="notIn in strings nor comments">
    </testcase>
    <testcase name="StandardAutoClosingPairConditional notIn in strings nor regex" time="0" classname="notIn in strings nor regex">
    </testcase>
    <testcase name="StandardAutoClosingPairConditional notIn in comments nor regex" time="0" classname="notIn in comments nor regex">
    </testcase>
    <testcase name="StandardAutoClosingPairConditional notIn in strings, comments nor regex" time="0" classname="notIn in strings, comments nor regex">
    </testcase>
  </testsuite>
  <testsuite name="SnippetParser" timestamp="2017-02-22T23:10:14" tests="15" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.009000000000000001">
    <testcase name="SnippetParser Scanner" time="0.002" classname="Scanner">
    </testcase>
    <testcase name="SnippetParser Parser, escaping" time="0.002" classname="Parser, escaping">
    </testcase>
    <testcase name="SnippetParser Parser, TM escaping" time="0.002" classname="Parser, TM escaping">
    </testcase>
    <testcase name="SnippetParser Parser, placeholder" time="0" classname="Parser, placeholder">
    </testcase>
    <testcase name="SnippetParser Parser, literal code" time="0" classname="Parser, literal code">
    </testcase>
    <testcase name="SnippetParser Parser, variables/tabstop" time="0.001" classname="Parser, variables/tabstop">
    </testcase>
    <testcase name="SnippetParser Parser, variables/placeholder with defaults" time="0" classname="Parser, variables/placeholder with defaults">
    </testcase>
    <testcase name="SnippetParser Parser, only textmate" time="0.001" classname="Parser, only textmate">
    </testcase>
    <testcase name="SnippetParser Parser, only internal" time="0" classname="Parser, only internal">
    </testcase>
    <testcase name="SnippetParser Parser, real world" time="0" classname="Parser, real world">
    </testcase>
    <testcase name="SnippetParser Parser, real world, mixed" time="0.001" classname="Parser, real world, mixed">
    </testcase>
    <testcase name="SnippetParser Parser, default name/value" time="0" classname="Parser, default name/value">
    </testcase>
    <testcase name="SnippetParser Parser, default placeholder values" time="0" classname="Parser, default placeholder values">
    </testcase>
    <testcase name="SnippetParser backspace esapce in TM only, #16212" time="0" classname="backspace esapce in TM only, #16212">
    </testcase>
    <testcase name="SnippetParser colon as variable/placeholder value, #16717" time="0" classname="colon as variable/placeholder value, #16717">
    </testcase>
  </testsuite>
  <testsuite name="Editor Contrib - Snippets" timestamp="2017-02-22T23:10:14" tests="16" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.007">
    <testcase name="Editor Contrib - Snippets Support tab stop order" time="0.002" classname="Support tab stop order">
    </testcase>
    <testcase name="Editor Contrib - Snippets Support tab stop order with implicit finish" time="0" classname="Support tab stop order with implicit finish">
    </testcase>
    <testcase name="Editor Contrib - Snippets Support tab stop order with no finish" time="0.001" classname="Support tab stop order with no finish">
    </testcase>
    <testcase name="Editor Contrib - Snippets Support tab stop order which does not affect named variable id&apos;s" time="0" classname="Support tab stop order which does not affect named variable id&apos;s">
    </testcase>
    <testcase name="Editor Contrib - Snippets nested placeholder" time="0.001" classname="nested placeholder">
    </testcase>
    <testcase name="Editor Contrib - Snippets bug #17541:[snippets] Support default text in mirrors" time="0" classname="bug #17541:[snippets] Support default text in mirrors">
    </testcase>
    <testcase name="Editor Contrib - Snippets bug #7093: Snippet default value is only populated for first variable reference" time="0.001" classname="bug #7093: Snippet default value is only populated for first variable reference">
    </testcase>
    <testcase name="Editor Contrib - Snippets bug #17487:[snippets] four backslashes are required to get one backslash in the inserted text" time="0" classname="bug #17487:[snippets] four backslashes are required to get one backslash in the inserted text">
    </testcase>
    <testcase name="Editor Contrib - Snippets issue #3552: Snippet Converted Not Working for literal Dollar Sign" time="0" classname="issue #3552: Snippet Converted Not Working for literal Dollar Sign">
    </testcase>
    <testcase name="Editor Contrib - Snippets bind, adjust indentation" time="0.001" classname="bind, adjust indentation">
    </testcase>
    <testcase name="Editor Contrib - Snippets issue #11890: Bad cursor position 1/2" time="0" classname="issue #11890: Bad cursor position 1/2">
    </testcase>
    <testcase name="Editor Contrib - Snippets issue #11890: Bad cursor position 2/2" time="0" classname="issue #11890: Bad cursor position 2/2">
    </testcase>
    <testcase name="Editor Contrib - Snippets issue #17989: Bad selection" time="0" classname="issue #17989: Bad selection">
    </testcase>
    <testcase name="Editor Contrib - Snippets variables, simple" time="0.001" classname="variables, simple">
    </testcase>
    <testcase name="Editor Contrib - Snippets variables, evil resolver" time="0" classname="variables, evil resolver">
    </testcase>
    <testcase name="Editor Contrib - Snippets variables, default" time="0" classname="variables, default">
    </testcase>
  </testsuite>
  <testsuite name="CompletionModel" timestamp="2017-02-22T23:10:14" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.006">
    <testcase name="CompletionModel filtering - cached" time="0.001" classname="filtering - cached">
    </testcase>
    <testcase name="CompletionModel complete/incomplete" time="0.001" classname="complete/incomplete">
    </testcase>
    <testcase name="CompletionModel replaceIncomplete" time="0" classname="replaceIncomplete">
    </testcase>
    <testcase name="CompletionModel top score" time="0.003" classname="top score">
    </testcase>
    <testcase name="CompletionModel proper current word when length=0, #16380" time="0.001" classname="proper current word when length=0, #16380">
    </testcase>
  </testsuite>
  <testsuite name="LanguageSelector" timestamp="2017-02-22T23:10:14" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="LanguageSelector score, invalid selector" time="0" classname="score, invalid selector">
    </testcase>
    <testcase name="LanguageSelector score, any language" time="0" classname="score, any language">
    </testcase>
    <testcase name="LanguageSelector score, filter" time="0" classname="score, filter">
    </testcase>
    <testcase name="LanguageSelector score, max(filters)" time="0" classname="score, max(filters)">
    </testcase>
  </testsuite>
  <testsuite name="OnEnter" timestamp="2017-02-22T23:10:14" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="OnEnter uses indentationRules" time="0.001" classname="uses indentationRules">
    </testcase>
    <testcase name="OnEnter uses brackets" time="0" classname="uses brackets">
    </testcase>
    <testcase name="OnEnter uses regExpRules" time="0" classname="uses regExpRules">
    </testcase>
  </testsuite>
  <testsuite name="richEditBrackets" timestamp="2017-02-22T23:10:14" tests="9" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="richEditBrackets findPrevBracketInToken one char 1" time="0.001" classname="findPrevBracketInToken one char 1">
    </testcase>
    <testcase name="richEditBrackets findPrevBracketInToken one char 2" time="0" classname="findPrevBracketInToken one char 2">
    </testcase>
    <testcase name="richEditBrackets findPrevBracketInToken one char 3" time="0" classname="findPrevBracketInToken one char 3">
    </testcase>
    <testcase name="richEditBrackets findPrevBracketInToken more chars 1" time="0" classname="findPrevBracketInToken more chars 1">
    </testcase>
    <testcase name="richEditBrackets findPrevBracketInToken more chars 2" time="0" classname="findPrevBracketInToken more chars 2">
    </testcase>
    <testcase name="richEditBrackets findPrevBracketInToken more chars 3" time="0" classname="findPrevBracketInToken more chars 3">
    </testcase>
    <testcase name="richEditBrackets findNextBracketInToken one char" time="0" classname="findNextBracketInToken one char">
    </testcase>
    <testcase name="richEditBrackets findNextBracketInToken more chars" time="0" classname="findNextBracketInToken more chars">
    </testcase>
    <testcase name="richEditBrackets issue #3894: [Handlebars] Curly braces edit issues" time="0" classname="issue #3894: [Handlebars] Curly braces edit issues">
    </testcase>
  </testsuite>
  <testsuite name="Editor ViewLayout - ViewLineParts" timestamp="2017-02-22T23:10:14" tests="22" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.011">
    <testcase name="Editor ViewLayout - ViewLineParts Bug 9827:Overlapping inline decorations can cause wrong inline class to be applied" time="0.001" classname="Bug 9827:Overlapping inline decorations can cause wrong inline class to be applied">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts issue #3462: no whitespace shown at the end of a decorated line" time="0" classname="issue #3462: no whitespace shown at the end of a decorated line">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts issue #3661: Link decoration bleeds to next line when wrapping" time="0" classname="issue #3661: Link decoration bleeds to next line when wrapping">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts issue #18616: Inline decorations ending at the text length are no longer rendered" time="0.001" classname="issue #18616: Inline decorations ending at the text length are no longer rendered">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts issue #19207: Link in Monokai is not rendered correctly" time="0.001" classname="issue #19207: Link in Monokai is not rendered correctly">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts createLineParts simple" time="0" classname="createLineParts simple">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts createLineParts simple two tokens" time="0.007" classname="createLineParts simple two tokens">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts createLineParts render whitespace - 4 leading spaces" time="0.001" classname="createLineParts render whitespace - 4 leading spaces">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts createLineParts render whitespace - 8 leading spaces" time="0" classname="createLineParts render whitespace - 8 leading spaces">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts createLineParts render whitespace - 2 leading tabs" time="0" classname="createLineParts render whitespace - 2 leading tabs">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts createLineParts render whitespace - mixed leading spaces and tabs" time="0" classname="createLineParts render whitespace - mixed leading spaces and tabs">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts createLineParts render whitespace skips faux indent" time="0" classname="createLineParts render whitespace skips faux indent">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts createLineParts does not emit width for monospace fonts" time="0" classname="createLineParts does not emit width for monospace fonts">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts createLineParts render whitespace in middle but not for one space" time="0" classname="createLineParts render whitespace in middle but not for one space">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts createLineParts render whitespace for all in middle" time="0" classname="createLineParts render whitespace for all in middle">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts createLineParts can handle unsorted inline decorations" time="0" classname="createLineParts can handle unsorted inline decorations">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts ViewLineParts" time="0" classname="ViewLineParts">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts getColumnOfLinePartOffset 1 - simple text" time="0" classname="getColumnOfLinePartOffset 1 - simple text">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts getColumnOfLinePartOffset 2 - regular JS" time="0" classname="getColumnOfLinePartOffset 2 - regular JS">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts getColumnOfLinePartOffset 3 - tab with tab size 6" time="0" classname="getColumnOfLinePartOffset 3 - tab with tab size 6">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts getColumnOfLinePartOffset 4 - once indented line, tab size 4" time="0" classname="getColumnOfLinePartOffset 4 - once indented line, tab size 4">
    </testcase>
    <testcase name="Editor ViewLayout - ViewLineParts getColumnOfLinePartOffset 5 - twice indented line, tab size 4" time="0" classname="getColumnOfLinePartOffset 5 - twice indented line, tab size 4">
    </testcase>
  </testsuite>
  <testsuite name="viewLineRenderer.renderLine" timestamp="2017-02-22T23:10:14" tests="14" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="viewLineRenderer.renderLine replaces spaces" time="0" classname="replaces spaces">
    </testcase>
    <testcase name="viewLineRenderer.renderLine escapes HTML markup" time="0" classname="escapes HTML markup">
    </testcase>
    <testcase name="viewLineRenderer.renderLine replaces some bad characters" time="0" classname="replaces some bad characters">
    </testcase>
    <testcase name="viewLineRenderer.renderLine handles tabs" time="0" classname="handles tabs">
    </testcase>
    <testcase name="viewLineRenderer.renderLine empty line" time="0" classname="empty line">
    </testcase>
    <testcase name="viewLineRenderer.renderLine uses part type" time="0" classname="uses part type">
    </testcase>
    <testcase name="viewLineRenderer.renderLine two parts" time="0" classname="two parts">
    </testcase>
    <testcase name="viewLineRenderer.renderLine overflow" time="0" classname="overflow">
    </testcase>
    <testcase name="viewLineRenderer.renderLine typical line" time="0" classname="typical line">
    </testcase>
    <testcase name="viewLineRenderer.renderLine issue #2255: Weird line rendering part 1" time="0" classname="issue #2255: Weird line rendering part 1">
    </testcase>
    <testcase name="viewLineRenderer.renderLine issue #2255: Weird line rendering part 2" time="0.001" classname="issue #2255: Weird line rendering part 2">
    </testcase>
    <testcase name="viewLineRenderer.renderLine issue Microsoft/monaco-editor#280: Improved source code rendering for RTL languages" time="0" classname="issue Microsoft/monaco-editor#280: Improved source code rendering for RTL languages">
    </testcase>
    <testcase name="viewLineRenderer.renderLine issue #6885: Splits large tokens" time="0" classname="issue #6885: Splits large tokens">
    </testcase>
    <testcase name="viewLineRenderer.renderLine issue #6885: Does not split large tokens in RTL text" time="0" classname="issue #6885: Does not split large tokens in RTL text">
    </testcase>
  </testsuite>
  <testsuite name="CharacterClassifier" timestamp="2017-02-22T23:10:14" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="CharacterClassifier works" time="0.001" classname="works">
    </testcase>
  </testsuite>
  <testsuite name="Editor Modes - Link Computer" timestamp="2017-02-22T23:10:14" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Editor Modes - Link Computer Null model" time="0" classname="Null model">
    </testcase>
    <testcase name="Editor Modes - Link Computer Parsing" time="0.001" classname="Parsing">
    </testcase>
  </testsuite>
  <testsuite name="Editor ViewModel - PrefixSumComputer" timestamp="2017-02-22T23:10:14" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Editor ViewModel - PrefixSumComputer PrefixSumComputer" time="0.001" classname="PrefixSumComputer">
    </testcase>
  </testsuite>
  <testsuite name="Editor ViewLayout - WhitespaceComputer" timestamp="2017-02-22T23:10:14" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Editor ViewLayout - WhitespaceComputer WhitespaceComputer" time="0.001" classname="WhitespaceComputer">
    </testcase>
    <testcase name="Editor ViewLayout - WhitespaceComputer WhitespaceComputer findInsertionIndex" time="0" classname="WhitespaceComputer findInsertionIndex">
    </testcase>
    <testcase name="Editor ViewLayout - WhitespaceComputer WhitespaceComputer changeWhitespaceAfterLineNumber &amp; getFirstWhitespaceIndexAfterLineNumber" time="0" classname="WhitespaceComputer changeWhitespaceAfterLineNumber &amp; getFirstWhitespaceIndexAfterLineNumber">
    </testcase>
    <testcase name="Editor ViewLayout - WhitespaceComputer WhitespaceComputer Bug" time="0" classname="WhitespaceComputer Bug">
    </testcase>
  </testsuite>
  <testsuite name="Editor ViewLayout - VerticalObjects" timestamp="2017-02-22T23:10:14" tests="7" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Editor ViewLayout - VerticalObjects VerticalObjects 1" time="0.001" classname="VerticalObjects 1">
    </testcase>
    <testcase name="Editor ViewLayout - VerticalObjects VerticalObjects 2" time="0" classname="VerticalObjects 2">
    </testcase>
    <testcase name="Editor ViewLayout - VerticalObjects VerticalObjects getLineNumberAtOrAfterVerticalOffset" time="0" classname="VerticalObjects getLineNumberAtOrAfterVerticalOffset">
    </testcase>
    <testcase name="Editor ViewLayout - VerticalObjects VerticalObjects getCenteredLineInViewport" time="0.001" classname="VerticalObjects getCenteredLineInViewport">
    </testcase>
    <testcase name="Editor ViewLayout - VerticalObjects VerticalObjects getLinesViewportData 1" time="0" classname="VerticalObjects getLinesViewportData 1">
    </testcase>
    <testcase name="Editor ViewLayout - VerticalObjects VerticalObjects getLinesViewportData 2 &amp; getWhitespaceViewportData" time="0" classname="VerticalObjects getLinesViewportData 2 &amp; getWhitespaceViewportData">
    </testcase>
    <testcase name="Editor ViewLayout - VerticalObjects VerticalObjects getWhitespaceAtVerticalOffset" time="0" classname="VerticalObjects getWhitespaceAtVerticalOffset">
    </testcase>
  </testsuite>
  <testsuite name="Platform / Registry" timestamp="2017-02-22T23:10:14" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Platform / Registry registry - api" time="0" classname="registry - api">
    </testcase>
    <testcase name="Platform / Registry registry - mixin" time="0" classname="registry - mixin">
    </testcase>
    <testcase name="Platform / Registry registry - knows, as" time="0" classname="registry - knows, as">
    </testcase>
    <testcase name="Platform / Registry registry - mixin, fails on duplicate ids" time="0" classname="registry - mixin, fails on duplicate ids">
    </testcase>
  </testsuite>
  <testsuite name="Editor Core - Editor State" timestamp="2017-02-22T23:10:14" tests="6" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Editor Core - Editor State empty editor state should be valid" time="0" classname="empty editor state should be valid">
    </testcase>
    <testcase name="Editor Core - Editor State different model URIs should be invalid" time="0" classname="different model URIs should be invalid">
    </testcase>
    <testcase name="Editor Core - Editor State different model versions should be invalid" time="0" classname="different model versions should be invalid">
    </testcase>
    <testcase name="Editor Core - Editor State different positions should be invalid" time="0" classname="different positions should be invalid">
    </testcase>
    <testcase name="Editor Core - Editor State different selections should be invalid" time="0" classname="different selections should be invalid">
    </testcase>
    <testcase name="Editor Core - Editor State different scroll positions should be invalid" time="0" classname="different scroll positions should be invalid">
    </testcase>
  </testsuite>
  <testsuite name="Editor View - OverviewZoneManager" timestamp="2017-02-22T23:10:14" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Editor View - OverviewZoneManager pixel ratio 1, dom height 600" time="0.001" classname="pixel ratio 1, dom height 600">
    </testcase>
    <testcase name="Editor View - OverviewZoneManager pixel ratio 1, dom height 300" time="0" classname="pixel ratio 1, dom height 300">
    </testcase>
    <testcase name="Editor View - OverviewZoneManager pixel ratio 2, dom height 300" time="0" classname="pixel ratio 2, dom height 300">
    </testcase>
  </testsuite>
  <testsuite name="Editor ViewLayout - EditorLayoutProvider" timestamp="2017-02-22T23:10:14" tests="10" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Editor ViewLayout - EditorLayoutProvider EditorLayoutProvider 1" time="0.001" classname="EditorLayoutProvider 1">
    </testcase>
    <testcase name="Editor ViewLayout - EditorLayoutProvider EditorLayoutProvider 1.1" time="0" classname="EditorLayoutProvider 1.1">
    </testcase>
    <testcase name="Editor ViewLayout - EditorLayoutProvider EditorLayoutProvider 2" time="0" classname="EditorLayoutProvider 2">
    </testcase>
    <testcase name="Editor ViewLayout - EditorLayoutProvider EditorLayoutProvider 3" time="0" classname="EditorLayoutProvider 3">
    </testcase>
    <testcase name="Editor ViewLayout - EditorLayoutProvider EditorLayoutProvider 4" time="0" classname="EditorLayoutProvider 4">
    </testcase>
    <testcase name="Editor ViewLayout - EditorLayoutProvider EditorLayoutProvider 5" time="0" classname="EditorLayoutProvider 5">
    </testcase>
    <testcase name="Editor ViewLayout - EditorLayoutProvider EditorLayoutProvider 6" time="0" classname="EditorLayoutProvider 6">
    </testcase>
    <testcase name="Editor ViewLayout - EditorLayoutProvider EditorLayoutProvider 7" time="0" classname="EditorLayoutProvider 7">
    </testcase>
    <testcase name="Editor ViewLayout - EditorLayoutProvider EditorLayoutProvider 8" time="0" classname="EditorLayoutProvider 8">
    </testcase>
    <testcase name="Editor ViewLayout - EditorLayoutProvider EditorLayoutProvider 8 - rounds floats" time="0" classname="EditorLayoutProvider 8 - rounds floats">
    </testcase>
  </testsuite>
  <testsuite name="Editor ViewModel - CharacterHardWrappingLineMapper" timestamp="2017-02-22T23:10:14" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Editor ViewModel - CharacterHardWrappingLineMapper CharacterHardWrappingLineMapper" time="0.002" classname="CharacterHardWrappingLineMapper">
    </testcase>
    <testcase name="Editor ViewModel - CharacterHardWrappingLineMapper CharacterHardWrappingLineMapper - CJK and Kinsoku Shori" time="0" classname="CharacterHardWrappingLineMapper - CJK and Kinsoku Shori">
    </testcase>
    <testcase name="Editor ViewModel - CharacterHardWrappingLineMapper CharacterHardWrappingLineMapper - WrappingIndent.Same" time="0" classname="CharacterHardWrappingLineMapper - WrappingIndent.Same">
    </testcase>
  </testsuite>
  <testsuite name="Workbench Events" timestamp="2017-02-22T23:10:14" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Workbench Events Base Event" time="0" classname="Base Event">
    </testcase>
    <testcase name="Workbench Events Property Change Event" time="0" classname="Property Change Event">
    </testcase>
    <testcase name="Workbench Events File Changes Event" time="0.001" classname="File Changes Event">
    </testcase>
  </testsuite>
  <testsuite name="Replace Pattern test" timestamp="2017-02-22T23:10:14" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Replace Pattern test parse replace string" time="0" classname="parse replace string">
    </testcase>
    <testcase name="Replace Pattern test create pattern by passing regExp" time="0.001" classname="create pattern by passing regExp">
    </testcase>
    <testcase name="Replace Pattern test get replace string if given text is a complete match" time="0" classname="get replace string if given text is a complete match">
    </testcase>
    <testcase name="Replace Pattern test get replace string for no matches" time="0" classname="get replace string for no matches">
    </testcase>
    <testcase name="Replace Pattern test get replace string if match is sub-string of the text" time="0" classname="get replace string if match is sub-string of the text">
    </testcase>
  </testsuite>
  <testsuite name="Debug - Utils" timestamp="2017-02-22T23:10:14" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Debug - Utils formatPII" time="0" classname="formatPII">
    </testcase>
  </testsuite>
  <testsuite name="Debug - Source" timestamp="2017-02-22T23:10:14" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Debug - Source from raw source" time="0.001" classname="from raw source">
    </testcase>
    <testcase name="Debug - Source from raw internal source" time="0" classname="from raw internal source">
    </testcase>
  </testsuite>
  <testsuite name="Debug - Repl History" timestamp="2017-02-22T23:10:14" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Debug - Repl History previous and next" time="0" classname="previous and next">
    </testcase>
    <testcase name="Debug - Repl History evaluated and remember" time="0" classname="evaluated and remember">
    </testcase>
  </testsuite>
  <testsuite name="Extension query" timestamp="2017-02-22T23:10:14" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Extension query parse" time="0" classname="parse">
    </testcase>
    <testcase name="Extension query toString" time="0" classname="toString">
    </testcase>
    <testcase name="Extension query isValid" time="0" classname="isValid">
    </testcase>
    <testcase name="Extension query equals" time="0" classname="equals">
    </testcase>
  </testsuite>
  <testsuite name="Git - StatusModel" timestamp="2017-02-22T23:10:14" tests="7" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Git - StatusModel simple update" time="0.001" classname="simple update">
    </testcase>
    <testcase name="Git - StatusModel simple update same file twice" time="0" classname="simple update same file twice">
    </testcase>
    <testcase name="Git - StatusModel simple update same file twice, first untracked, then ignored" time="0" classname="simple update same file twice, first untracked, then ignored">
    </testcase>
    <testcase name="Git - StatusModel same file, both modified in index, deleted in working tree" time="0" classname="same file, both modified in index, deleted in working tree">
    </testcase>
    <testcase name="Git - StatusModel index and working tree matches" time="0" classname="index and working tree matches">
    </testcase>
    <testcase name="Git - StatusModel work tree changed since index" time="0" classname="work tree changed since index">
    </testcase>
    <testcase name="Git - StatusModel deleted in work tree" time="0" classname="deleted in work tree">
    </testcase>
  </testsuite>
  <testsuite name="Workbench Memento" timestamp="2017-02-22T23:10:14" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Workbench Memento Loading and Saving Memento with Scopes" time="0" classname="Loading and Saving Memento with Scopes">
    </testcase>
    <testcase name="Workbench Memento Save and Load" time="0" classname="Save and Load">
    </testcase>
    <testcase name="Workbench Memento Save and Load - 2 Components with same id" time="0" classname="Save and Load - 2 Components with same id">
    </testcase>
  </testsuite>
  <testsuite name="ExtHostTypes" timestamp="2017-02-22T23:10:14" tests="23" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.005">
    <testcase name="ExtHostTypes URI, toJSON" time="0" classname="URI, toJSON">
    </testcase>
    <testcase name="ExtHostTypes Disposable" time="0" classname="Disposable">
    </testcase>
    <testcase name="ExtHostTypes Position" time="0.001" classname="Position">
    </testcase>
    <testcase name="ExtHostTypes Position, toJSON" time="0" classname="Position, toJSON">
    </testcase>
    <testcase name="ExtHostTypes Position, isBefore(OrEqual)?" time="0" classname="Position, isBefore(OrEqual)?">
    </testcase>
    <testcase name="ExtHostTypes Position, isAfter(OrEqual)?" time="0" classname="Position, isAfter(OrEqual)?">
    </testcase>
    <testcase name="ExtHostTypes Position, compareTo" time="0" classname="Position, compareTo">
    </testcase>
    <testcase name="ExtHostTypes Position, translate" time="0" classname="Position, translate">
    </testcase>
    <testcase name="ExtHostTypes Position, with" time="0" classname="Position, with">
    </testcase>
    <testcase name="ExtHostTypes Range" time="0.001" classname="Range">
    </testcase>
    <testcase name="ExtHostTypes Range, toJSON" time="0" classname="Range, toJSON">
    </testcase>
    <testcase name="ExtHostTypes Range, sorting" time="0" classname="Range, sorting">
    </testcase>
    <testcase name="ExtHostTypes Range, isEmpty|isSingleLine" time="0" classname="Range, isEmpty|isSingleLine">
    </testcase>
    <testcase name="ExtHostTypes Range, contains" time="0" classname="Range, contains">
    </testcase>
    <testcase name="ExtHostTypes Range, intersection" time="0.001" classname="Range, intersection">
    </testcase>
    <testcase name="ExtHostTypes Range, union" time="0" classname="Range, union">
    </testcase>
    <testcase name="ExtHostTypes Range, with" time="0" classname="Range, with">
    </testcase>
    <testcase name="ExtHostTypes TextEdit" time="0" classname="TextEdit">
    </testcase>
    <testcase name="ExtHostTypes WorkspaceEdit" time="0.001" classname="WorkspaceEdit">
    </testcase>
    <testcase name="ExtHostTypes DocumentLink" time="0" classname="DocumentLink">
    </testcase>
    <testcase name="ExtHostTypes toJSON &amp; stringify" time="0.001" classname="toJSON &amp; stringify">
    </testcase>
    <testcase name="ExtHostTypes SymbolInformation, old ctor" time="0" classname="SymbolInformation, old ctor">
    </testcase>
    <testcase name="ExtHostTypes SnippetString, builder-methods" time="0" classname="SnippetString, builder-methods">
    </testcase>
  </testsuite>
  <testsuite name="Decoder" timestamp="2017-02-22T23:10:14" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Decoder decoding" time="0.001" classname="decoding">
    </testcase>
  </testsuite>
  <testsuite name="Encoding" timestamp="2017-02-22T23:10:14" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.004">
    <testcase name="Encoding detectBOM UTF-8" time="0.001" classname="detectBOM UTF-8">
    </testcase>
    <testcase name="Encoding detectBOM UTF-16 LE" time="0.001" classname="detectBOM UTF-16 LE">
    </testcase>
    <testcase name="Encoding detectBOM UTF-16 BE" time="0" classname="detectBOM UTF-16 BE">
    </testcase>
    <testcase name="Encoding detectBOM ANSI" time="0.001" classname="detectBOM ANSI">
    </testcase>
    <testcase name="Encoding detectBOM ANSI" time="0.001" classname="detectBOM ANSI">
    </testcase>
  </testsuite>
  <testsuite name="Mime" timestamp="2017-02-22T23:10:14" tests="6" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.005">
    <testcase name="Mime detectMimesFromFile (JSON saved as PNG)" time="0.002" classname="detectMimesFromFile (JSON saved as PNG)">
    </testcase>
    <testcase name="Mime detectMimesFromFile (PNG saved as TXT)" time="0.001" classname="detectMimesFromFile (PNG saved as TXT)">
    </testcase>
    <testcase name="Mime detectMimesFromFile (XML saved as PNG)" time="0.001" classname="detectMimesFromFile (XML saved as PNG)">
    </testcase>
    <testcase name="Mime detectMimesFromFile (QWOFF saved as TXT)" time="0.001" classname="detectMimesFromFile (QWOFF saved as TXT)">
    </testcase>
    <testcase name="Mime detectMimesFromFile (CSS saved as QWOFF)" time="0" classname="detectMimesFromFile (CSS saved as QWOFF)">
    </testcase>
    <testcase name="Mime detectMimesFromFile (PDF)" time="0" classname="detectMimesFromFile (PDF)">
    </testcase>
  </testsuite>
  <testsuite name="Errors" timestamp="2017-02-22T23:10:14" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Errors Get Error Message" time="0.002" classname="Get Error Message">
    </testcase>
  </testsuite>
  <testsuite name="JSON" timestamp="2017-02-22T23:10:14" tests="18" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.011000000000000003">
    <testcase name="JSON tokens" time="0.001" classname="tokens">
    </testcase>
    <testcase name="JSON comments" time="0" classname="comments">
    </testcase>
    <testcase name="JSON strings" time="0" classname="strings">
    </testcase>
    <testcase name="JSON numbers" time="0.001" classname="numbers">
    </testcase>
    <testcase name="JSON keywords: true, false, null" time="0" classname="keywords: true, false, null">
    </testcase>
    <testcase name="JSON trivia" time="0" classname="trivia">
    </testcase>
    <testcase name="JSON parse: literals" time="0.001" classname="parse: literals">
    </testcase>
    <testcase name="JSON parse: objects" time="0.001" classname="parse: objects">
    </testcase>
    <testcase name="JSON parse: arrays" time="0" classname="parse: arrays">
    </testcase>
    <testcase name="JSON parse: objects with errors" time="0.001" classname="parse: objects with errors">
    </testcase>
    <testcase name="JSON parse: array with errors" time="0" classname="parse: array with errors">
    </testcase>
    <testcase name="JSON parse: disallow commments" time="0" classname="parse: disallow commments">
    </testcase>
    <testcase name="JSON location: properties" time="0.002" classname="location: properties">
    </testcase>
    <testcase name="JSON location: arrays" time="0.001" classname="location: arrays">
    </testcase>
    <testcase name="JSON tree: literals" time="0.001" classname="tree: literals">
    </testcase>
    <testcase name="JSON tree: arrays" time="0" classname="tree: arrays">
    </testcase>
    <testcase name="JSON tree: objects" time="0.001" classname="tree: objects">
    </testcase>
    <testcase name="JSON tree: find location" time="0.001" classname="tree: find location">
    </testcase>
  </testsuite>
  <testsuite name="JSON - formatter" timestamp="2017-02-22T23:10:14" tests="23" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="JSON - formatter object - single property" time="0" classname="object - single property">
    </testcase>
    <testcase name="JSON - formatter object - multiple properties" time="0" classname="object - multiple properties">
    </testcase>
    <testcase name="JSON - formatter object - no properties " time="0" classname="object - no properties ">
    </testcase>
    <testcase name="JSON - formatter object - nesting" time="0" classname="object - nesting">
    </testcase>
    <testcase name="JSON - formatter array - single items" time="0" classname="array - single items">
    </testcase>
    <testcase name="JSON - formatter array - multiple items" time="0" classname="array - multiple items">
    </testcase>
    <testcase name="JSON - formatter array - no items" time="0" classname="array - no items">
    </testcase>
    <testcase name="JSON - formatter array - nesting" time="0" classname="array - nesting">
    </testcase>
    <testcase name="JSON - formatter syntax errors" time="0" classname="syntax errors">
    </testcase>
    <testcase name="JSON - formatter empty lines" time="0" classname="empty lines">
    </testcase>
    <testcase name="JSON - formatter single line comment" time="0" classname="single line comment">
    </testcase>
    <testcase name="JSON - formatter block line comment" time="0" classname="block line comment">
    </testcase>
    <testcase name="JSON - formatter single line comment on same line" time="0" classname="single line comment on same line">
    </testcase>
    <testcase name="JSON - formatter single line comment on same line 2" time="0" classname="single line comment on same line 2">
    </testcase>
    <testcase name="JSON - formatter block comment on same line" time="0" classname="block comment on same line">
    </testcase>
    <testcase name="JSON - formatter block comment on same line advanced" time="0" classname="block comment on same line advanced">
    </testcase>
    <testcase name="JSON - formatter multiple block comments on same line" time="0" classname="multiple block comments on same line">
    </testcase>
    <testcase name="JSON - formatter multiple mixed comments on same line" time="0.001" classname="multiple mixed comments on same line">
    </testcase>
    <testcase name="JSON - formatter range" time="0" classname="range">
    </testcase>
    <testcase name="JSON - formatter range with existing indent" time="0" classname="range with existing indent">
    </testcase>
    <testcase name="JSON - formatter range with existing indent - tabs" time="0" classname="range with existing indent - tabs">
    </testcase>
    <testcase name="JSON - formatter block comment none-line breaking symbols" time="0" classname="block comment none-line breaking symbols">
    </testcase>
    <testcase name="JSON - formatter line comment after none-line breaking symbols" time="0" classname="line comment after none-line breaking symbols">
    </testcase>
  </testsuite>
  <testsuite name="JSON - edits" timestamp="2017-02-22T23:10:14" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="JSON - edits set property" time="0.001" classname="set property">
    </testcase>
    <testcase name="JSON - edits insert property" time="0.001" classname="insert property">
    </testcase>
    <testcase name="JSON - edits remove property" time="0" classname="remove property">
    </testcase>
  </testsuite>
  <testsuite name="formatOptions" timestamp="2017-02-22T23:10:14" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="formatOptions Text should display small columns correctly" time="0" classname="Text should display small columns correctly">
    </testcase>
    <testcase name="formatOptions Text should wrap" time="0" classname="Text should wrap">
    </testcase>
    <testcase name="formatOptions Text should revert to the condensed view when the terminal is too narrow" time="0" classname="Text should revert to the condensed view when the terminal is too narrow">
    </testcase>
  </testsuite>
  <testsuite name="getNonWhitespacePrefix" timestamp="2017-02-22T23:10:14" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="getNonWhitespacePrefix empty line" time="0.001" classname="empty line">
    </testcase>
    <testcase name="getNonWhitespacePrefix singleWordLine" time="0" classname="singleWordLine">
    </testcase>
    <testcase name="getNonWhitespacePrefix two word line" time="0" classname="two word line">
    </testcase>
    <testcase name="getNonWhitespacePrefix many separators" time="0" classname="many separators">
    </testcase>
  </testsuite>
  <testsuite name="Keybinding IO" timestamp="2017-02-22T23:10:14" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Keybinding IO serialize/deserialize" time="0.001" classname="serialize/deserialize">
    </testcase>
    <testcase name="Keybinding IO issue #10452 - invalid command" time="0.001" classname="issue #10452 - invalid command">
    </testcase>
    <testcase name="Keybinding IO issue #10452 - invalid when" time="0" classname="issue #10452 - invalid when">
    </testcase>
    <testcase name="Keybinding IO issue #10452 - invalid key" time="0" classname="issue #10452 - invalid key">
    </testcase>
    <testcase name="Keybinding IO test commands args" time="0" classname="test commands args">
    </testcase>
  </testsuite>
  <testsuite name="Keybinding Service" timestamp="2017-02-22T23:10:14" tests="16" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.005">
    <testcase name="Keybinding Service resolve key" time="0.001" classname="resolve key">
    </testcase>
    <testcase name="Keybinding Service resolve key with arguments" time="0" classname="resolve key with arguments">
    </testcase>
    <testcase name="Keybinding Service KbAndExpression.equals" time="0.001" classname="KbAndExpression.equals">
    </testcase>
    <testcase name="Keybinding Service KeybindingResolver.combine simple 1" time="0" classname="KeybindingResolver.combine simple 1">
    </testcase>
    <testcase name="Keybinding Service KeybindingResolver.combine simple 2" time="0" classname="KeybindingResolver.combine simple 2">
    </testcase>
    <testcase name="Keybinding Service KeybindingResolver.combine removal with not matching when" time="0" classname="KeybindingResolver.combine removal with not matching when">
    </testcase>
    <testcase name="Keybinding Service KeybindingResolver.combine removal with not matching keybinding" time="0" classname="KeybindingResolver.combine removal with not matching keybinding">
    </testcase>
    <testcase name="Keybinding Service KeybindingResolver.combine removal with matching keybinding and when" time="0" classname="KeybindingResolver.combine removal with matching keybinding and when">
    </testcase>
    <testcase name="Keybinding Service KeybindingResolver.combine removal with unspecified keybinding" time="0" classname="KeybindingResolver.combine removal with unspecified keybinding">
    </testcase>
    <testcase name="Keybinding Service KeybindingResolver.combine removal with unspecified when" time="0" classname="KeybindingResolver.combine removal with unspecified when">
    </testcase>
    <testcase name="Keybinding Service KeybindingResolver.combine removal with unspecified when and unspecified keybinding" time="0" classname="KeybindingResolver.combine removal with unspecified when and unspecified keybinding">
    </testcase>
    <testcase name="Keybinding Service issue #612#issuecomment-222109084 cannot remove keybindings for commands with ^" time="0" classname="issue #612#issuecomment-222109084 cannot remove keybindings for commands with ^">
    </testcase>
    <testcase name="Keybinding Service normalizeRule" time="0" classname="normalizeRule">
    </testcase>
    <testcase name="Keybinding Service contextIsEntirelyIncluded" time="0.001" classname="contextIsEntirelyIncluded">
    </testcase>
    <testcase name="Keybinding Service resolve command" time="0.001" classname="resolve command">
    </testcase>
    <testcase name="Keybinding Service contextMatchesRules" time="0.001" classname="contextMatchesRules">
    </testcase>
  </testsuite>
  <testsuite name="Extension Identifier Pattern" timestamp="2017-02-22T23:10:14" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Extension Identifier Pattern extension identifier pattern" time="0" classname="extension identifier pattern">
    </testcase>
  </testsuite>
  <testsuite name="Extension Version Validator" timestamp="2017-02-22T23:10:14" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.004">
    <testcase name="Extension Version Validator isValidVersionStr" time="0" classname="isValidVersionStr">
    </testcase>
    <testcase name="Extension Version Validator parseVersion" time="0" classname="parseVersion">
    </testcase>
    <testcase name="Extension Version Validator normalizeVersion" time="0.001" classname="normalizeVersion">
    </testcase>
    <testcase name="Extension Version Validator isValidVersion" time="0" classname="isValidVersion">
    </testcase>
    <testcase name="Extension Version Validator isValidExtensionVersion" time="0.003" classname="isValidExtensionVersion">
    </testcase>
  </testsuite>
  <testsuite name="ExtHostDiagnostics" timestamp="2017-02-22T23:10:14" tests="8" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.020999999999999998">
    <testcase name="ExtHostDiagnostics disposeCheck" time="0.001" classname="disposeCheck">
    </testcase>
    <testcase name="ExtHostDiagnostics diagnostic collection, forEach, clear, has" time="0" classname="diagnostic collection, forEach, clear, has">
    </testcase>
    <testcase name="ExtHostDiagnostics diagnostic collection, immutable read" time="0.001" classname="diagnostic collection, immutable read">
    </testcase>
    <testcase name="ExtHostDiagnostics diagnostics collection, set with dupliclated tuples" time="0" classname="diagnostics collection, set with dupliclated tuples">
    </testcase>
    <testcase name="ExtHostDiagnostics diagnostics collection, set tuple overrides, #11547" time="0" classname="diagnostics collection, set tuple overrides, #11547">
    </testcase>
    <testcase name="ExtHostDiagnostics diagnostics collection, tuples and undefined (small array), #15585" time="0" classname="diagnostics collection, tuples and undefined (small array), #15585">
    </testcase>
    <testcase name="ExtHostDiagnostics diagnostics collection, tuples and undefined (large array), #15585" time="0.019" classname="diagnostics collection, tuples and undefined (large array), #15585">
    </testcase>
    <testcase name="ExtHostDiagnostics diagnostic capping" time="0" classname="diagnostic capping">
    </testcase>
  </testsuite>
  <testsuite name="Cache" timestamp="2017-02-22T23:10:14" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="Cache simple value" time="0" classname="simple value">
    </testcase>
    <testcase name="Cache simple error" time="0.001" classname="simple error">
    </testcase>
    <testcase name="Cache should retry cancellations" time="0.002" classname="should retry cancellations">
    </testcase>
  </testsuite>
  <testsuite name="Extfs" timestamp="2017-02-22T23:10:14" tests="7" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.098">
    <testcase name="Extfs mkdirp" time="0.009" classname="mkdirp">
    </testcase>
    <testcase name="Extfs delSync - swallows file not found error" time="0" classname="delSync - swallows file not found error">
    </testcase>
    <testcase name="Extfs delSync - simple" time="0.006" classname="delSync - simple">
    </testcase>
    <testcase name="Extfs delSync - recursive folder structure" time="0.007" classname="delSync - recursive folder structure">
    </testcase>
    <testcase name="Extfs copy, move and delete" time="0.027" classname="copy, move and delete">
    </testcase>
    <testcase name="Extfs readdir" time="0" classname="readdir">
    </testcase>
    <testcase name="Extfs writeFileAndFlush" time="0.049" classname="writeFileAndFlush">
    </testcase>
  </testsuite>
  <testsuite name="Instantiation Service" timestamp="2017-02-22T23:10:14" tests="15" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.006">
    <testcase name="Instantiation Service service collection, cannot overwrite" time="0.001" classname="service collection, cannot overwrite">
    </testcase>
    <testcase name="Instantiation Service service collection, add/has" time="0" classname="service collection, add/has">
    </testcase>
    <testcase name="Instantiation Service @Param - simple clase" time="0" classname="@Param - simple clase">
    </testcase>
    <testcase name="Instantiation Service @Param - fixed args" time="0.001" classname="@Param - fixed args">
    </testcase>
    <testcase name="Instantiation Service service collection is live" time="0.001" classname="service collection is live">
    </testcase>
    <testcase name="Instantiation Service @Param - optional" time="0" classname="@Param - optional">
    </testcase>
    <testcase name="Instantiation Service SyncDesc - no dependencies" time="0" classname="SyncDesc - no dependencies">
    </testcase>
    <testcase name="Instantiation Service SyncDesc - service with service dependency" time="0" classname="SyncDesc - service with service dependency">
    </testcase>
    <testcase name="Instantiation Service SyncDesc - target depends on service future" time="0.001" classname="SyncDesc - target depends on service future">
    </testcase>
    <testcase name="Instantiation Service SyncDesc - explode on loop" time="0.001" classname="SyncDesc - explode on loop">
    </testcase>
    <testcase name="Instantiation Service Invoke - get services" time="0" classname="Invoke - get services">
    </testcase>
    <testcase name="Instantiation Service Invoke - get service, optional" time="0" classname="Invoke - get service, optional">
    </testcase>
    <testcase name="Instantiation Service Invoke - keeping accessor NOT allowed" time="0.001" classname="Invoke - keeping accessor NOT allowed">
    </testcase>
    <testcase name="Instantiation Service Invoke - throw error" time="0" classname="Invoke - throw error">
    </testcase>
    <testcase name="Instantiation Service Create child" time="0" classname="Create child">
    </testcase>
  </testsuite>
  <testsuite name="Workbench StorageSevice" timestamp="2017-02-22T23:10:14" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="Workbench StorageSevice Swap Data with undefined default value" time="0.001" classname="Swap Data with undefined default value">
    </testcase>
    <testcase name="Workbench StorageSevice Remove Data" time="0.001" classname="Remove Data">
    </testcase>
    <testcase name="Workbench StorageSevice Get Data, Integer, Boolean" time="0" classname="Get Data, Integer, Boolean">
    </testcase>
    <testcase name="Workbench StorageSevice StorageSevice cleans up when workspace changes" time="0.001" classname="StorageSevice cleans up when workspace changes">
    </testcase>
  </testsuite>
  <testsuite name="Command Tests" timestamp="2017-02-22T23:10:14" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Command Tests register command - no handler" time="0" classname="register command - no handler">
    </testcase>
    <testcase name="Command Tests register/dispose" time="0" classname="register/dispose">
    </testcase>
    <testcase name="Command Tests register/register/dispose" time="0" classname="register/register/dispose">
    </testcase>
    <testcase name="Command Tests command with description" time="0.001" classname="command with description">
    </testcase>
  </testsuite>
  <testsuite name="AIAdapter" timestamp="2017-02-22T23:10:14" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="AIAdapter Simple event" time="0" classname="Simple event">
    </testcase>
    <testcase name="AIAdapter addional data" time="0.001" classname="addional data">
    </testcase>
    <testcase name="AIAdapter property limits" time="0" classname="property limits">
    </testcase>
    <testcase name="AIAdapter Different data types" time="0" classname="Different data types">
    </testcase>
    <testcase name="AIAdapter Nested data" time="0" classname="Nested data">
    </testcase>
  </testsuite>
  <testsuite name="Diff" timestamp="2017-02-22T23:10:14" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.045">
    <testcase name="Diff LcsDiff - different strings tests" time="0.03" classname="LcsDiff - different strings tests">
    </testcase>
    <testcase name="Diff LcsDiff2 - different strings tests" time="0.015" classname="LcsDiff2 - different strings tests">
    </testcase>
  </testsuite>
  <testsuite name="Diff - Ported from VS" timestamp="2017-02-22T23:10:14" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Diff - Ported from VS using continue processing predicate to quit early" time="0" classname="using continue processing predicate to quit early">
    </testcase>
  </testsuite>
  <testsuite name="Editor Diff - DiffComputer" timestamp="2017-02-22T23:10:14" tests="29" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.005">
    <testcase name="Editor Diff - DiffComputer one inserted line below" time="0.001" classname="one inserted line below">
    </testcase>
    <testcase name="Editor Diff - DiffComputer two inserted lines below" time="0" classname="two inserted lines below">
    </testcase>
    <testcase name="Editor Diff - DiffComputer one inserted line above" time="0" classname="one inserted line above">
    </testcase>
    <testcase name="Editor Diff - DiffComputer two inserted lines above" time="0" classname="two inserted lines above">
    </testcase>
    <testcase name="Editor Diff - DiffComputer one inserted line in middle" time="0" classname="one inserted line in middle">
    </testcase>
    <testcase name="Editor Diff - DiffComputer two inserted lines in middle" time="0.001" classname="two inserted lines in middle">
    </testcase>
    <testcase name="Editor Diff - DiffComputer two inserted lines in middle interrupted" time="0" classname="two inserted lines in middle interrupted">
    </testcase>
    <testcase name="Editor Diff - DiffComputer one deleted line below" time="0" classname="one deleted line below">
    </testcase>
    <testcase name="Editor Diff - DiffComputer two deleted lines below" time="0" classname="two deleted lines below">
    </testcase>
    <testcase name="Editor Diff - DiffComputer one deleted lines above" time="0" classname="one deleted lines above">
    </testcase>
    <testcase name="Editor Diff - DiffComputer two deleted lines above" time="0" classname="two deleted lines above">
    </testcase>
    <testcase name="Editor Diff - DiffComputer one deleted line in middle" time="0" classname="one deleted line in middle">
    </testcase>
    <testcase name="Editor Diff - DiffComputer two deleted lines in middle" time="0" classname="two deleted lines in middle">
    </testcase>
    <testcase name="Editor Diff - DiffComputer two deleted lines in middle interrupted" time="0" classname="two deleted lines in middle interrupted">
    </testcase>
    <testcase name="Editor Diff - DiffComputer one line changed: chars inserted at the end" time="0" classname="one line changed: chars inserted at the end">
    </testcase>
    <testcase name="Editor Diff - DiffComputer one line changed: chars inserted at the beginning" time="0" classname="one line changed: chars inserted at the beginning">
    </testcase>
    <testcase name="Editor Diff - DiffComputer one line changed: chars inserted in the middle" time="0.001" classname="one line changed: chars inserted in the middle">
    </testcase>
    <testcase name="Editor Diff - DiffComputer one line changed: chars inserted in the middle (two spots)" time="0" classname="one line changed: chars inserted in the middle (two spots)">
    </testcase>
    <testcase name="Editor Diff - DiffComputer one line changed: chars deleted 1" time="0" classname="one line changed: chars deleted 1">
    </testcase>
    <testcase name="Editor Diff - DiffComputer one line changed: chars deleted 2" time="0" classname="one line changed: chars deleted 2">
    </testcase>
    <testcase name="Editor Diff - DiffComputer two lines changed 1" time="0" classname="two lines changed 1">
    </testcase>
    <testcase name="Editor Diff - DiffComputer two lines changed 2" time="0.001" classname="two lines changed 2">
    </testcase>
    <testcase name="Editor Diff - DiffComputer two lines changed 3" time="0" classname="two lines changed 3">
    </testcase>
    <testcase name="Editor Diff - DiffComputer three lines changed" time="0" classname="three lines changed">
    </testcase>
    <testcase name="Editor Diff - DiffComputer big change part 1" time="0" classname="big change part 1">
    </testcase>
    <testcase name="Editor Diff - DiffComputer big change part 2" time="0" classname="big change part 2">
    </testcase>
    <testcase name="Editor Diff - DiffComputer char change postprocessing merges" time="0.001" classname="char change postprocessing merges">
    </testcase>
    <testcase name="Editor Diff - DiffComputer ignore trim whitespace" time="0" classname="ignore trim whitespace">
    </testcase>
    <testcase name="Editor Diff - DiffComputer issue #12122 r.hasOwnProperty is not a function" time="0" classname="issue #12122 r.hasOwnProperty is not a function">
    </testcase>
  </testsuite>
  <testsuite name="History Navigator" timestamp="2017-02-22T23:10:14" tests="11" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="History Navigator create reduces the input to limit" time="0" classname="create reduces the input to limit">
    </testcase>
    <testcase name="History Navigator create sets the position to last" time="0" classname="create sets the position to last">
    </testcase>
    <testcase name="History Navigator last returns last element" time="0" classname="last returns last element">
    </testcase>
    <testcase name="History Navigator first returns first element" time="0" classname="first returns first element">
    </testcase>
    <testcase name="History Navigator next returns next element" time="0" classname="next returns next element">
    </testcase>
    <testcase name="History Navigator previous returns previous element" time="0" classname="previous returns previous element">
    </testcase>
    <testcase name="History Navigator next on last element returs null and remains on last" time="0" classname="next on last element returs null and remains on last">
    </testcase>
    <testcase name="History Navigator previous on first element returs null and remains on first" time="0.001" classname="previous on first element returs null and remains on first">
    </testcase>
    <testcase name="History Navigator add reduces the input to limit" time="0" classname="add reduces the input to limit">
    </testcase>
    <testcase name="History Navigator adding existing element changes the position" time="0" classname="adding existing element changes the position">
    </testcase>
    <testcase name="History Navigator add resets the navigator to last" time="0" classname="add resets the navigator to last">
    </testcase>
  </testsuite>
  <testsuite name="PagedModel" timestamp="2017-02-22T23:10:14" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="PagedModel isResolved" time="0" classname="isResolved">
    </testcase>
    <testcase name="PagedModel resolve single" time="0.001" classname="resolve single">
    </testcase>
    <testcase name="PagedModel resolve page" time="0" classname="resolve page">
    </testcase>
    <testcase name="PagedModel resolve page 2" time="0" classname="resolve page 2">
    </testcase>
  </testsuite>
  <testsuite name="Telemetry - WorkspaceStats" timestamp="2017-02-22T23:10:14" tests="6" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Telemetry - WorkspaceStats HTTPS remotes" time="0.001" classname="HTTPS remotes">
    </testcase>
    <testcase name="Telemetry - WorkspaceStats SSH remotes" time="0" classname="SSH remotes">
    </testcase>
    <testcase name="Telemetry - WorkspaceStats SCP-like remotes" time="0" classname="SCP-like remotes">
    </testcase>
    <testcase name="Telemetry - WorkspaceStats Local remotes" time="0" classname="Local remotes">
    </testcase>
    <testcase name="Telemetry - WorkspaceStats Multiple remotes" time="0" classname="Multiple remotes">
    </testcase>
    <testcase name="Telemetry - WorkspaceStats Whitelisting" time="0" classname="Whitelisting">
    </testcase>
  </testsuite>
  <testsuite name="Event" timestamp="2017-02-22T23:10:14" tests="7" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.022">
    <testcase name="Event Emitter plain" time="0.001" classname="Emitter plain">
    </testcase>
    <testcase name="Event wrap legacy EventEmitter" time="0" classname="wrap legacy EventEmitter">
    </testcase>
    <testcase name="Event Emitter, bucket" time="0" classname="Emitter, bucket">
    </testcase>
    <testcase name="Event wrapEventEmitter, bucket" time="0" classname="wrapEventEmitter, bucket">
    </testcase>
    <testcase name="Event onFirstAdd|onLastRemove" time="0" classname="onFirstAdd|onLastRemove">
    </testcase>
    <testcase name="Event throwingListener" time="0.001" classname="throwingListener">
    </testcase>
    <testcase name="Event Debounce Event" time="0.02" classname="Debounce Event">
    </testcase>
  </testsuite>
  <testsuite name="Event utils" timestamp="2017-02-22T23:10:14" tests="0" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
  </testsuite>
  <testsuite name="EventBufferer" timestamp="2017-02-22T23:10:14" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Event utils EventBufferer should not buffer when not wrapped" time="0" classname="should not buffer when not wrapped">
    </testcase>
    <testcase name="Event utils EventBufferer should buffer when wrapped" time="0" classname="should buffer when wrapped">
    </testcase>
    <testcase name="Event utils EventBufferer once" time="0" classname="once">
    </testcase>
  </testsuite>
  <testsuite name="fromPromise" timestamp="2017-02-22T23:10:14" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.032">
    <testcase name="Event utils fromPromise should emit when done" time="0.01" classname="should emit when done">
    </testcase>
    <testcase name="Event utils fromPromise should emit when done - setTimeout" time="0.011" classname="should emit when done - setTimeout">
    </testcase>
    <testcase name="Event utils fromPromise should emit when done - setTimeout" time="0.011" classname="should emit when done - setTimeout">
    </testcase>
  </testsuite>
  <testsuite name="stopwatch" timestamp="2017-02-22T23:10:14" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.012">
    <testcase name="Event utils stopwatch should emit" time="0.012" classname="should emit">
    </testcase>
  </testsuite>
  <testsuite name="buffer" timestamp="2017-02-22T23:10:14" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.013000000000000001">
    <testcase name="Event utils buffer should buffer events" time="0.001" classname="should buffer events">
    </testcase>
    <testcase name="Event utils buffer should buffer events on next tick" time="0.012" classname="should buffer events on next tick">
    </testcase>
    <testcase name="Event utils buffer should fire initial buffer events" time="0" classname="should fire initial buffer events">
    </testcase>
  </testsuite>
  <testsuite name="EventMultiplexer" timestamp="2017-02-22T23:10:14" tests="8" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.005">
    <testcase name="Event utils EventMultiplexer works" time="0.001" classname="works">
    </testcase>
    <testcase name="Event utils EventMultiplexer multiplexer dispose works" time="0.001" classname="multiplexer dispose works">
    </testcase>
    <testcase name="Event utils EventMultiplexer event dispose works" time="0" classname="event dispose works">
    </testcase>
    <testcase name="Event utils EventMultiplexer mutliplexer event dispose works" time="0.001" classname="mutliplexer event dispose works">
    </testcase>
    <testcase name="Event utils EventMultiplexer hot start works" time="0.001" classname="hot start works">
    </testcase>
    <testcase name="Event utils EventMultiplexer cold start works" time="0" classname="cold start works">
    </testcase>
    <testcase name="Event utils EventMultiplexer late add works" time="0" classname="late add works">
    </testcase>
    <testcase name="Event utils EventMultiplexer add dispose works" time="0.001" classname="add dispose works">
    </testcase>
  </testsuite>
  <testsuite name="Watcher" timestamp="2017-02-22T23:10:14" tests="7" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.005">
    <testcase name="Watcher watching - simple add/update/delete" time="0.002" classname="watching - simple add/update/delete">
    </testcase>
    <testcase name="Watcher watching - delete only reported for top level folder (1)" time="0.001" classname="watching - delete only reported for top level folder (1)">
    </testcase>
    <testcase name="Watcher watching - delete only reported for top level folder (2)" time="0.001" classname="watching - delete only reported for top level folder (2)">
    </testcase>
    <testcase name="Watcher watching - event normalization: ignore CREATE followed by DELETE" time="0" classname="watching - event normalization: ignore CREATE followed by DELETE">
    </testcase>
    <testcase name="Watcher watching - event normalization: flatten DELETE followed by CREATE into CHANGE" time="0.001" classname="watching - event normalization: flatten DELETE followed by CREATE into CHANGE">
    </testcase>
    <testcase name="Watcher watching - event normalization: ignore UPDATE when CREATE received" time="0" classname="watching - event normalization: ignore UPDATE when CREATE received">
    </testcase>
    <testcase name="Watcher watching - event normalization: apply DELETE" time="0" classname="watching - event normalization: apply DELETE">
    </testcase>
  </testsuite>
  <testsuite name="Actions" timestamp="2017-02-22T23:10:14" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Actions isAction" time="0" classname="isAction">
    </testcase>
  </testsuite>
  <testsuite name="Platform actions" timestamp="2017-02-22T23:10:14" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="Platform actions DeferredAction" time="0.003" classname="DeferredAction">
    </testcase>
  </testsuite>
  <testsuite name="ExtHostMessageService" timestamp="2017-02-22T23:10:14" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="ExtHostMessageService propagte handle on select" time="0.002" classname="propagte handle on select">
    </testcase>
    <testcase name="ExtHostMessageService isCloseAffordance" time="0" classname="isCloseAffordance">
    </testcase>
    <testcase name="ExtHostMessageService hide on select" time="0.001" classname="hide on select">
    </testcase>
  </testsuite>
  <testsuite name="CancellationToken" timestamp="2017-02-22T23:10:14" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="CancellationToken None" time="0" classname="None">
    </testcase>
    <testcase name="CancellationToken cancel before token" time="0.001" classname="cancel before token">
    </testcase>
    <testcase name="CancellationToken cancel happens only once" time="0" classname="cancel happens only once">
    </testcase>
    <testcase name="CancellationToken cancel calls all listeners" time="0" classname="cancel calls all listeners">
    </testcase>
    <testcase name="CancellationToken token stays the same" time="0" classname="token stays the same">
    </testcase>
  </testsuite>
  <testsuite name="Async" timestamp="2017-02-22T23:10:14" tests="23" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.158">
    <testcase name="Async Throttler - non async" time="0.001" classname="Throttler - non async">
    </testcase>
    <testcase name="Async Throttler" time="0.001" classname="Throttler">
    </testcase>
    <testcase name="Async Throttler - cancel should not cancel other promises" time="0.001" classname="Throttler - cancel should not cancel other promises">
    </testcase>
    <testcase name="Async Throttler - cancel the first queued promise should not cancel other promises" time="0" classname="Throttler - cancel the first queued promise should not cancel other promises">
    </testcase>
    <testcase name="Async Throttler - cancel in the middle should not cancel other promises" time="0.001" classname="Throttler - cancel in the middle should not cancel other promises">
    </testcase>
    <testcase name="Async Throttler - last factory should be the one getting called" time="0.001" classname="Throttler - last factory should be the one getting called">
    </testcase>
    <testcase name="Async Throttler - progress should work" time="0.001" classname="Throttler - progress should work">
    </testcase>
    <testcase name="Async Delayer" time="0.001" classname="Delayer">
    </testcase>
    <testcase name="Async Delayer - simple cancel" time="0" classname="Delayer - simple cancel">
    </testcase>
    <testcase name="Async Delayer - cancel should cancel all calls to trigger" time="0.001" classname="Delayer - cancel should cancel all calls to trigger">
    </testcase>
    <testcase name="Async Delayer - trigger, cancel, then trigger again" time="0.003" classname="Delayer - trigger, cancel, then trigger again">
    </testcase>
    <testcase name="Async Delayer - last task should be the one getting called" time="0.002" classname="Delayer - last task should be the one getting called">
    </testcase>
    <testcase name="Async Delayer - progress should work" time="0" classname="Delayer - progress should work">
    </testcase>
    <testcase name="Async ThrottledDelayer - progress should work" time="0.002" classname="ThrottledDelayer - progress should work">
    </testcase>
    <testcase name="Async Sequence" time="0" classname="Sequence">
    </testcase>
    <testcase name="Async Limiter - sync" time="0.001" classname="Limiter - sync">
    </testcase>
    <testcase name="Async Limiter - async" time="0.001" classname="Limiter - async">
    </testcase>
    <testcase name="Async Limiter - assert degree of paralellism" time="0.001" classname="Limiter - assert degree of paralellism">
    </testcase>
    <testcase name="Async Queue - simple" time="0.01" classname="Queue - simple">
    </testcase>
    <testcase name="Async Queue - order is kept" time="0.031" classname="Queue - order is kept">
    </testcase>
    <testcase name="Async Queue - errors bubble individually but not cause stop" time="0.033" classname="Queue - errors bubble individually but not cause stop">
    </testcase>
    <testcase name="Async Queue - order is kept (chained)" time="0.032" classname="Queue - order is kept (chained)">
    </testcase>
    <testcase name="Async Queue - events" time="0.034" classname="Queue - events">
    </testcase>
  </testsuite>
  <testsuite name="Config" timestamp="2017-02-22T23:10:14" tests="7" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.09699999999999999">
    <testcase name="Config defaults" time="0.017" classname="defaults">
    </testcase>
    <testcase name="Config getConfig / getValue" time="0.011" classname="getConfig / getValue">
    </testcase>
    <testcase name="Config getConfig / getValue - broken JSON" time="0.015" classname="getConfig / getValue - broken JSON">
    </testcase>
    <testcase name="Config watching" time="0.014" classname="watching">
    </testcase>
    <testcase name="Config watching also works when file created later" time="0.015" classname="watching also works when file created later">
    </testcase>
    <testcase name="Config watching detects the config file getting deleted" time="0.011" classname="watching detects the config file getting deleted">
    </testcase>
    <testcase name="Config reload" time="0.014" classname="reload">
    </testcase>
  </testsuite>
  <testsuite name="PFS" timestamp="2017-02-22T23:10:14" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.15400000000000003">
    <testcase name="PFS writeFile" time="0.021" classname="writeFile">
    </testcase>
    <testcase name="PFS writeFile - parallel write on different files works" time="0.043" classname="writeFile - parallel write on different files works">
    </testcase>
    <testcase name="PFS writeFile - parallel write on same files works and is sequentalized" time="0.066" classname="writeFile - parallel write on same files works and is sequentalized">
    </testcase>
    <testcase name="PFS rimraf - simple" time="0.011" classname="rimraf - simple">
    </testcase>
    <testcase name="PFS rimraf - recursive folder structure" time="0.013" classname="rimraf - recursive folder structure">
    </testcase>
  </testsuite>
  <testsuite name="Zip" timestamp="2017-02-22T23:10:15" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.012">
    <testcase name="Zip extract should handle directories" time="0.012" classname="extract should handle directories">
    </testcase>
  </testsuite>
  <testsuite name="references" timestamp="2017-02-22T23:10:15" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="references neartestReference" time="0.002" classname="neartestReference">
    </testcase>
  </testsuite>
  <testsuite name="Common Editor Config" timestamp="2017-02-22T23:10:15" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Common Editor Config Zoom Level" time="0" classname="Zoom Level">
    </testcase>
  </testsuite>
  <testsuite name="TextAreaState" timestamp="2017-02-22T23:10:15" tests="23" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.007">
    <testcase name="TextAreaState fromTextArea" time="0.001" classname="fromTextArea">
    </testcase>
    <testcase name="TextAreaState applyToTextArea" time="0" classname="applyToTextArea">
    </testcase>
    <testcase name="TextAreaState deduceInput - Japanese typing sennsei and accepting" time="0.003" classname="deduceInput - Japanese typing sennsei and accepting">
    </testcase>
    <testcase name="TextAreaState deduceInput - Japanese typing sennsei and choosing different suggestion" time="0" classname="deduceInput - Japanese typing sennsei and choosing different suggestion">
    </testcase>
    <testcase name="TextAreaState extractNewText - no previous state with selection" time="0" classname="extractNewText - no previous state with selection">
    </testcase>
    <testcase name="TextAreaState issue #2586: Replacing selected end-of-line with newline locks up the document" time="0" classname="issue #2586: Replacing selected end-of-line with newline locks up the document">
    </testcase>
    <testcase name="TextAreaState extractNewText - no previous state without selection" time="0" classname="extractNewText - no previous state without selection">
    </testcase>
    <testcase name="TextAreaState extractNewText - typing does not cause a selection" time="0" classname="extractNewText - typing does not cause a selection">
    </testcase>
    <testcase name="TextAreaState extractNewText - had the textarea empty" time="0" classname="extractNewText - had the textarea empty">
    </testcase>
    <testcase name="TextAreaState extractNewText - had the entire line selected" time="0" classname="extractNewText - had the entire line selected">
    </testcase>
    <testcase name="TextAreaState extractNewText - had previous text 1" time="0" classname="extractNewText - had previous text 1">
    </testcase>
    <testcase name="TextAreaState extractNewText - had previous text 2" time="0" classname="extractNewText - had previous text 2">
    </testcase>
    <testcase name="TextAreaState extractNewText - had previous text 3" time="0" classname="extractNewText - had previous text 3">
    </testcase>
    <testcase name="TextAreaState extractNewText - IME" time="0" classname="extractNewText - IME">
    </testcase>
    <testcase name="TextAreaState extractNewText - isInOverwriteMode" time="0" classname="extractNewText - isInOverwriteMode">
    </testcase>
    <testcase name="TextAreaState extractMacReplacedText - does nothing if there is selection" time="0" classname="extractMacReplacedText - does nothing if there is selection">
    </testcase>
    <testcase name="TextAreaState extractMacReplacedText - does nothing if there is more than one extra char" time="0" classname="extractMacReplacedText - does nothing if there is more than one extra char">
    </testcase>
    <testcase name="TextAreaState extractMacReplacedText - does nothing if there is more than one changed char" time="0" classname="extractMacReplacedText - does nothing if there is more than one changed char">
    </testcase>
    <testcase name="TextAreaState extractMacReplacedText" time="0.001" classname="extractMacReplacedText">
    </testcase>
    <testcase name="TextAreaState fromEditorSelectionAndPreviousState - no selection on first line" time="0.001" classname="fromEditorSelectionAndPreviousState - no selection on first line">
    </testcase>
    <testcase name="TextAreaState fromEditorSelectionAndPreviousState - no selection on second line" time="0" classname="fromEditorSelectionAndPreviousState - no selection on second line">
    </testcase>
    <testcase name="TextAreaState fromEditorSelectionAndPreviousState - on a long line with selectionToken mismatch" time="0" classname="fromEditorSelectionAndPreviousState - on a long line with selectionToken mismatch">
    </testcase>
    <testcase name="TextAreaState fromEditorSelectionAndPreviousState - on a long line with same selectionToken" time="0.001" classname="fromEditorSelectionAndPreviousState - on a long line with same selectionToken">
    </testcase>
  </testsuite>
  <testsuite name="StandaloneBase" timestamp="2017-02-22T23:10:15" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="StandaloneBase exports enums correctly" time="0" classname="exports enums correctly">
    </testcase>
  </testsuite>
  <testsuite name="KeyCode" timestamp="2017-02-22T23:10:15" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="KeyCode is exported correctly in standalone editor" time="0.001" classname="is exported correctly in standalone editor">
    </testcase>
    <testcase name="KeyCode getUserSettingsKeybindingRegex" time="0.002" classname="getUserSettingsKeybindingRegex">
    </testcase>
  </testsuite>
  <testsuite name="CommandService" timestamp="2017-02-22T23:10:15" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="CommandService activateOnCommand" time="0.002" classname="activateOnCommand">
    </testcase>
    <testcase name="CommandService fwd activation error" time="0" classname="fwd activation error">
    </testcase>
    <testcase name="CommandService !onReady, but executeCommand" time="0.001" classname="!onReady, but executeCommand">
    </testcase>
  </testsuite>
  <testsuite name="ExtensionEnablementService Test" timestamp="2017-02-22T23:10:15" tests="28" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.01800000000000001">
    <testcase name="ExtensionEnablementService Test test when no extensions are disabled globally" time="0" classname="test when no extensions are disabled globally">
    </testcase>
    <testcase name="ExtensionEnablementService Test test when no extensions are disabled for workspace" time="0.001" classname="test when no extensions are disabled for workspace">
    </testcase>
    <testcase name="ExtensionEnablementService Test test when no extensions are disabled for workspace when there is no workspace" time="0.001" classname="test when no extensions are disabled for workspace when there is no workspace">
    </testcase>
    <testcase name="ExtensionEnablementService Test test disable an extension globally" time="0" classname="test disable an extension globally">
    </testcase>
    <testcase name="ExtensionEnablementService Test test disable an extension globally should return truthy promise" time="0" classname="test disable an extension globally should return truthy promise">
    </testcase>
    <testcase name="ExtensionEnablementService Test test disable an extension globally triggers the change event" time="0.001" classname="test disable an extension globally triggers the change event">
    </testcase>
    <testcase name="ExtensionEnablementService Test test disable an extension globally again should return a falsy promise" time="0" classname="test disable an extension globally again should return a falsy promise">
    </testcase>
    <testcase name="ExtensionEnablementService Test test disable an extension for workspace" time="0" classname="test disable an extension for workspace">
    </testcase>
    <testcase name="ExtensionEnablementService Test test disable an extension for workspace returns a truthy promise" time="0" classname="test disable an extension for workspace returns a truthy promise">
    </testcase>
    <testcase name="ExtensionEnablementService Test test disable an extension for workspace again should return a falsy promise" time="0.001" classname="test disable an extension for workspace again should return a falsy promise">
    </testcase>
    <testcase name="ExtensionEnablementService Test test disable an extension for workspace and then globally" time="0.002" classname="test disable an extension for workspace and then globally">
    </testcase>
    <testcase name="ExtensionEnablementService Test test disable an extension for workspace and then globally return a truthy promise" time="0.001" classname="test disable an extension for workspace and then globally return a truthy promise">
    </testcase>
    <testcase name="ExtensionEnablementService Test test disable an extension for workspace and then globally triggers the change event" time="0.001" classname="test disable an extension for workspace and then globally triggers the change event">
    </testcase>
    <testcase name="ExtensionEnablementService Test test disable an extension globally and then for workspace" time="0.001" classname="test disable an extension globally and then for workspace">
    </testcase>
    <testcase name="ExtensionEnablementService Test test disable an extension globally and then for workspace return a truthy promise" time="0" classname="test disable an extension globally and then for workspace return a truthy promise">
    </testcase>
    <testcase name="ExtensionEnablementService Test test disable an extension globally and then for workspace triggers the change event" time="0.001" classname="test disable an extension globally and then for workspace triggers the change event">
    </testcase>
    <testcase name="ExtensionEnablementService Test test disable an extension for workspace when there is no workspace throws error" time="0" classname="test disable an extension for workspace when there is no workspace throws error">
    </testcase>
    <testcase name="ExtensionEnablementService Test test enable an extension globally" time="0" classname="test enable an extension globally">
    </testcase>
    <testcase name="ExtensionEnablementService Test test enable an extension globally return truthy promise" time="0" classname="test enable an extension globally return truthy promise">
    </testcase>
    <testcase name="ExtensionEnablementService Test test enable an extension globally triggers change event" time="0.001" classname="test enable an extension globally triggers change event">
    </testcase>
    <testcase name="ExtensionEnablementService Test test enable an extension globally when already enabled return falsy promise" time="0" classname="test enable an extension globally when already enabled return falsy promise">
    </testcase>
    <testcase name="ExtensionEnablementService Test test enable an extension for workspace" time="0.001" classname="test enable an extension for workspace">
    </testcase>
    <testcase name="ExtensionEnablementService Test test enable an extension for workspace return truthy promise" time="0.001" classname="test enable an extension for workspace return truthy promise">
    </testcase>
    <testcase name="ExtensionEnablementService Test test enable an extension for workspace triggers change event" time="0.001" classname="test enable an extension for workspace triggers change event">
    </testcase>
    <testcase name="ExtensionEnablementService Test test enable an extension for workspace when already enabled return falsy promise" time="0.001" classname="test enable an extension for workspace when already enabled return falsy promise">
    </testcase>
    <testcase name="ExtensionEnablementService Test test enable an extension for workspace when disabled in workspace and gloablly" time="0.001" classname="test enable an extension for workspace when disabled in workspace and gloablly">
    </testcase>
    <testcase name="ExtensionEnablementService Test test enable an extension globally when disabled in workspace and gloablly" time="0.001" classname="test enable an extension globally when disabled in workspace and gloablly">
    </testcase>
    <testcase name="ExtensionEnablementService Test test remove an extension from disablement list when uninstalled" time="0.001" classname="test remove an extension from disablement list when uninstalled">
    </testcase>
  </testsuite>
  <testsuite name="AbstractKeybindingService" timestamp="2017-02-22T23:10:15" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="AbstractKeybindingService issue #16498: chord mode is quit for invalid chords" time="0.002" classname="issue #16498: chord mode is quit for invalid chords">
    </testcase>
    <testcase name="AbstractKeybindingService issue #16833: Keybinding service should not dispatch on modifier keys" time="0" classname="issue #16833: Keybinding service should not dispatch on modifier keys">
    </testcase>
    <testcase name="AbstractKeybindingService can trigger command that is sharing keybinding with chord" time="0" classname="can trigger command that is sharing keybinding with chord">
    </testcase>
    <testcase name="AbstractKeybindingService cannot trigger chord if command is overwriting" time="0" classname="cannot trigger chord if command is overwriting">
    </testcase>
    <testcase name="AbstractKeybindingService can have spying command" time="0" classname="can have spying command">
    </testcase>
  </testsuite>
  <testsuite name="Debug - View Model" timestamp="2017-02-22T23:10:15" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Debug - View Model focused stack frame" time="0" classname="focused stack frame">
    </testcase>
    <testcase name="Debug - View Model selected expression" time="0" classname="selected expression">
    </testcase>
    <testcase name="Debug - View Model multi process view and changed workbench state" time="0" classname="multi process view and changed workbench state">
    </testcase>
    <testcase name="Debug - View Model selected configuration name" time="0" classname="selected configuration name">
    </testcase>
  </testsuite>
  <testsuite name="Debug - Model" timestamp="2017-02-22T23:10:15" tests="10" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.006">
    <testcase name="Debug - Model breakpoints simple" time="0.001" classname="breakpoints simple">
    </testcase>
    <testcase name="Debug - Model breakpoints toggling" time="0" classname="breakpoints toggling">
    </testcase>
    <testcase name="Debug - Model breakpoints two files" time="0" classname="breakpoints two files">
    </testcase>
    <testcase name="Debug - Model breakpoints conditions" time="0.001" classname="breakpoints conditions">
    </testcase>
    <testcase name="Debug - Model threads simple" time="0" classname="threads simple">
    </testcase>
    <testcase name="Debug - Model threads multiple wtih allThreadsStopped" time="0.002" classname="threads multiple wtih allThreadsStopped">
    </testcase>
    <testcase name="Debug - Model threads mutltiple without allThreadsStopped" time="0" classname="threads mutltiple without allThreadsStopped">
    </testcase>
    <testcase name="Debug - Model watch expressions" time="0.001" classname="watch expressions">
    </testcase>
    <testcase name="Debug - Model repl expressions" time="0.001" classname="repl expressions">
    </testcase>
    <testcase name="Debug - Model repl output" time="0" classname="repl output">
    </testcase>
  </testsuite>
  <testsuite name="Workbench - EditorOptions" timestamp="2017-02-22T23:10:15" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Workbench - EditorOptions EditorOptions" time="0" classname="EditorOptions">
    </testcase>
    <testcase name="Workbench - EditorOptions TextEditorOptions" time="0" classname="TextEditorOptions">
    </testcase>
  </testsuite>
  <testsuite name="IPC, Socket Protocol" timestamp="2017-02-22T23:10:15" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="IPC, Socket Protocol read/write" time="0.002" classname="read/write">
    </testcase>
    <testcase name="IPC, Socket Protocol read/write, object data" time="0" classname="read/write, object data">
    </testcase>
  </testsuite>
  <testsuite name="Workbench - TerminalConfigHelper" timestamp="2017-02-22T23:10:15" tests="10" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.006">
    <testcase name="Workbench - TerminalConfigHelper TerminalConfigHelper - getFont fontFamily" time="0.002" classname="TerminalConfigHelper - getFont fontFamily">
    </testcase>
    <testcase name="Workbench - TerminalConfigHelper TerminalConfigHelper - getFont fontSize" time="0" classname="TerminalConfigHelper - getFont fontSize">
    </testcase>
    <testcase name="Workbench - TerminalConfigHelper TerminalConfigHelper - getFont lineHeight" time="0.001" classname="TerminalConfigHelper - getFont lineHeight">
    </testcase>
    <testcase name="Workbench - TerminalConfigHelper TerminalConfigHelper - getShell" time="0" classname="TerminalConfigHelper - getShell">
    </testcase>
    <testcase name="Workbench - TerminalConfigHelper TerminalConfigHelper - getTheme" time="0.003" classname="TerminalConfigHelper - getTheme">
    </testcase>
    <testcase name="Workbench - TerminalConfigHelper TerminalConfigHelper - getFontLigaturesEnabled" time="0" classname="TerminalConfigHelper - getFontLigaturesEnabled">
    </testcase>
    <testcase name="Workbench - TerminalConfigHelper TerminalConfigHelper - getCursorBlink" time="0" classname="TerminalConfigHelper - getCursorBlink">
    </testcase>
    <testcase name="Workbench - TerminalConfigHelper TerminalConfigHelper - isSetLocaleVariables" time="0" classname="TerminalConfigHelper - isSetLocaleVariables">
    </testcase>
    <testcase name="Workbench - TerminalConfigHelper TerminalConfigHelper - getCommandsToSkipShell" time="0" classname="TerminalConfigHelper - getCommandsToSkipShell">
    </testcase>
    <testcase name="Workbench - TerminalConfigHelper TerminalConfigHelper - getScrollback" time="0" classname="TerminalConfigHelper - getScrollback">
    </testcase>
  </testsuite>
  <testsuite name="Marker Service" timestamp="2017-02-22T23:10:15" tests="8" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Marker Service query" time="0.001" classname="query">
    </testcase>
    <testcase name="Marker Service changeOne override" time="0" classname="changeOne override">
    </testcase>
    <testcase name="Marker Service changeOne/All clears" time="0" classname="changeOne/All clears">
    </testcase>
    <testcase name="Marker Service changeAll sends event for cleared" time="0" classname="changeAll sends event for cleared">
    </testcase>
    <testcase name="Marker Service changeAll merges" time="0" classname="changeAll merges">
    </testcase>
    <testcase name="Marker Service changeAll must not break integrety, issue #12635" time="0" classname="changeAll must not break integrety, issue #12635">
    </testcase>
    <testcase name="Marker Service invalid marker data" time="0" classname="invalid marker data">
    </testcase>
    <testcase name="Marker Service MapMap#remove returns bad values, https://github.com/Microsoft/vscode/issues/13548" time="0" classname="MapMap#remove returns bad values, https://github.com/Microsoft/vscode/issues/13548">
    </testcase>
  </testsuite>
  <testsuite name="OpenerService" timestamp="2017-02-22T23:10:15" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="OpenerService delegate to editorService, scheme:///fff" time="0.001" classname="delegate to editorService, scheme:///fff">
    </testcase>
    <testcase name="OpenerService delegate to editorService, scheme:///fff#L123" time="0" classname="delegate to editorService, scheme:///fff#L123">
    </testcase>
    <testcase name="OpenerService delegate to editorService, scheme:///fff#123,123" time="0" classname="delegate to editorService, scheme:///fff#123,123">
    </testcase>
    <testcase name="OpenerService delegate to commandsService, command:someid" time="0" classname="delegate to commandsService, command:someid">
    </testcase>
  </testsuite>
  <testsuite name="MenuService" timestamp="2017-02-22T23:10:15" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="MenuService group sorting" time="0.001" classname="group sorting">
    </testcase>
    <testcase name="MenuService in group sorting, by title" time="0" classname="in group sorting, by title">
    </testcase>
    <testcase name="MenuService in group sorting, by title and order" time="0" classname="in group sorting, by title and order">
    </testcase>
    <testcase name="MenuService in group sorting, special: navigation" time="0" classname="in group sorting, special: navigation">
    </testcase>
  </testsuite>
  <testsuite name="ModelLine - getIndentLevel" timestamp="2017-02-22T23:10:15" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="ModelLine - getIndentLevel getIndentLevel" time="0" classname="getIndentLevel">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - modelLine.applyEdits text" timestamp="2017-02-22T23:10:15" tests="12" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Editor Model - modelLine.applyEdits text single insert 1" time="0.001" classname="single insert 1">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text single insert 2" time="0" classname="single insert 2">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text multiple inserts 1" time="0" classname="multiple inserts 1">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text multiple inserts 2" time="0" classname="multiple inserts 2">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text single delete 1" time="0" classname="single delete 1">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text single delete 2" time="0" classname="single delete 2">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text multiple deletes 1" time="0" classname="multiple deletes 1">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text multiple deletes 2" time="0" classname="multiple deletes 2">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text single replace 1" time="0" classname="single replace 1">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text single replace 2" time="0" classname="single replace 2">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text multiple replace 1" time="0" classname="multiple replace 1">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text multiple replace 2" time="0" classname="multiple replace 2">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - modelLine.split text" timestamp="2017-02-22T23:10:15" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Editor Model - modelLine.split text split at the beginning" time="0.001" classname="split at the beginning">
    </testcase>
    <testcase name="Editor Model - modelLine.split text split at the end" time="0" classname="split at the end">
    </testcase>
    <testcase name="Editor Model - modelLine.split text split in the middle" time="0" classname="split in the middle">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - modelLine.append text" timestamp="2017-02-22T23:10:15" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Editor Model - modelLine.append text append at the beginning" time="0" classname="append at the beginning">
    </testcase>
    <testcase name="Editor Model - modelLine.append text append at the end" time="0" classname="append at the end">
    </testcase>
    <testcase name="Editor Model - modelLine.append text append in the middle" time="0" classname="append in the middle">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - modelLine.applyEdits text &amp; tokens" timestamp="2017-02-22T23:10:15" tests="25" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens insertion on empty line" time="0.001" classname="insertion on empty line">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens updates tokens on insertion 1" time="0" classname="updates tokens on insertion 1">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens updates tokens on insertion 2" time="0" classname="updates tokens on insertion 2">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens updates tokens on insertion 3" time="0" classname="updates tokens on insertion 3">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens updates tokens on insertion 4" time="0" classname="updates tokens on insertion 4">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens updates tokens on insertion 5" time="0" classname="updates tokens on insertion 5">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens updates tokens on insertion 6" time="0" classname="updates tokens on insertion 6">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens updates tokens on insertion 7" time="0" classname="updates tokens on insertion 7">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens updates tokens on insertion 8" time="0" classname="updates tokens on insertion 8">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens updates tokens on insertion 9" time="0" classname="updates tokens on insertion 9">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens updates tokens on insertion 10" time="0" classname="updates tokens on insertion 10">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens delete second token 2" time="0.001" classname="delete second token 2">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens insert right before second token" time="0" classname="insert right before second token">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens delete first char" time="0" classname="delete first char">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens delete 2nd and 3rd chars" time="0" classname="delete 2nd and 3rd chars">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens delete first token" time="0" classname="delete first token">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens delete second token" time="0" classname="delete second token">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens delete second token + a bit of the third one" time="0" classname="delete second token + a bit of the third one">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens delete second and third token" time="0" classname="delete second and third token">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens delete everything" time="0" classname="delete everything">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens noop" time="0" classname="noop">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens equivalent to deleting first two chars" time="0" classname="equivalent to deleting first two chars">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens equivalent to deleting from 5 to the end" time="0" classname="equivalent to deleting from 5 to the end">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens updates tokens on replace 1" time="0" classname="updates tokens on replace 1">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; tokens updates tokens on replace 2" time="0" classname="updates tokens on replace 2">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - modelLine.split text &amp; tokens" timestamp="2017-02-22T23:10:15" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Editor Model - modelLine.split text &amp; tokens split at the beginning" time="0.001" classname="split at the beginning">
    </testcase>
    <testcase name="Editor Model - modelLine.split text &amp; tokens split at the end" time="0" classname="split at the end">
    </testcase>
    <testcase name="Editor Model - modelLine.split text &amp; tokens split inthe middle 1" time="0" classname="split inthe middle 1">
    </testcase>
    <testcase name="Editor Model - modelLine.split text &amp; tokens split inthe middle 2" time="0" classname="split inthe middle 2">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - modelLine.append text &amp; tokens" timestamp="2017-02-22T23:10:15" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Editor Model - modelLine.append text &amp; tokens append empty 1" time="0" classname="append empty 1">
    </testcase>
    <testcase name="Editor Model - modelLine.append text &amp; tokens append empty 2" time="0" classname="append empty 2">
    </testcase>
    <testcase name="Editor Model - modelLine.append text &amp; tokens append 1" time="0.001" classname="append 1">
    </testcase>
    <testcase name="Editor Model - modelLine.append text &amp; tokens append 2" time="0" classname="append 2">
    </testcase>
    <testcase name="Editor Model - modelLine.append text &amp; tokens append 3" time="0" classname="append 3">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - modelLine.applyEdits text &amp; markers" timestamp="2017-02-22T23:10:15" tests="27" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers insertion: updates markers 1" time="0.001" classname="insertion: updates markers 1">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers insertion: updates markers 2" time="0" classname="insertion: updates markers 2">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers insertion: updates markers 3" time="0" classname="insertion: updates markers 3">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers insertion: updates markers 4" time="0" classname="insertion: updates markers 4">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers insertion: updates markers 5" time="0" classname="insertion: updates markers 5">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers insertion bis: updates markers 1" time="0" classname="insertion bis: updates markers 1">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers insertion bis: updates markers 2" time="0" classname="insertion bis: updates markers 2">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers insertion bis: updates markers 3" time="0" classname="insertion bis: updates markers 3">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers insertion bis: updates markers 4" time="0" classname="insertion bis: updates markers 4">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers insertion bis: updates markers 5" time="0" classname="insertion bis: updates markers 5">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers insertion: does not move marker at column 1" time="0" classname="insertion: does not move marker at column 1">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers insertion: does move marker at column 1" time="0" classname="insertion: does move marker at column 1">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers insertion: two markers at column 1" time="0" classname="insertion: two markers at column 1">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers insertion: two markers at column 1 unsorted" time="0" classname="insertion: two markers at column 1 unsorted">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers deletion: updates markers 1" time="0" classname="deletion: updates markers 1">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers deletion: updates markers 2" time="0.001" classname="deletion: updates markers 2">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers deletion: updates markers 3" time="0" classname="deletion: updates markers 3">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers replace: updates markers 1" time="0" classname="replace: updates markers 1">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers delete near markers" time="0" classname="delete near markers">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers replace: updates markers 2" time="0" classname="replace: updates markers 2">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers sorts markers" time="0" classname="sorts markers">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers change text inside markers" time="0" classname="change text inside markers">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers inserting is different than replacing for markers part 1" time="0" classname="inserting is different than replacing for markers part 1">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers inserting is different than replacing for markers part 2" time="0" classname="inserting is different than replacing for markers part 2">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers replacing the entire line with more text" time="0" classname="replacing the entire line with more text">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers replacing the entire line with less text" time="0" classname="replacing the entire line with less text">
    </testcase>
    <testcase name="Editor Model - modelLine.applyEdits text &amp; markers replace selection" time="0" classname="replace selection">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - modelLine.split text &amp; markers" timestamp="2017-02-22T23:10:15" tests="7" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Editor Model - modelLine.split text &amp; markers split at the beginning" time="0.001" classname="split at the beginning">
    </testcase>
    <testcase name="Editor Model - modelLine.split text &amp; markers split at the beginning 2" time="0" classname="split at the beginning 2">
    </testcase>
    <testcase name="Editor Model - modelLine.split text &amp; markers split at the end" time="0" classname="split at the end">
    </testcase>
    <testcase name="Editor Model - modelLine.split text &amp; markers split it the middle 1" time="0" classname="split it the middle 1">
    </testcase>
    <testcase name="Editor Model - modelLine.split text &amp; markers split it the middle 2" time="0" classname="split it the middle 2">
    </testcase>
    <testcase name="Editor Model - modelLine.split text &amp; markers split it the middle 3" time="0" classname="split it the middle 3">
    </testcase>
    <testcase name="Editor Model - modelLine.split text &amp; markers split it the middle 4" time="0" classname="split it the middle 4">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - modelLine.append text &amp; markers" timestamp="2017-02-22T23:10:15" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Editor Model - modelLine.append text &amp; markers append to an empty" time="0" classname="append to an empty">
    </testcase>
    <testcase name="Editor Model - modelLine.append text &amp; markers append an empty" time="0" classname="append an empty">
    </testcase>
    <testcase name="Editor Model - modelLine.append text &amp; markers append 1" time="0" classname="append 1">
    </testcase>
    <testcase name="Editor Model - modelLine.append text &amp; markers append 2" time="0" classname="append 2">
    </testcase>
  </testsuite>
  <testsuite name="SmartSnippetInserter" timestamp="2017-02-22T23:10:15" tests="7" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.005">
    <testcase name="SmartSnippetInserter empty text" time="0.002" classname="empty text">
    </testcase>
    <testcase name="SmartSnippetInserter empty array 1" time="0" classname="empty array 1">
    </testcase>
    <testcase name="SmartSnippetInserter empty array 2" time="0" classname="empty array 2">
    </testcase>
    <testcase name="SmartSnippetInserter empty array 3" time="0.001" classname="empty array 3">
    </testcase>
    <testcase name="SmartSnippetInserter one element array 1" time="0" classname="one element array 1">
    </testcase>
    <testcase name="SmartSnippetInserter two elements array 1" time="0.001" classname="two elements array 1">
    </testcase>
    <testcase name="SmartSnippetInserter two elements array 2" time="0.001" classname="two elements array 2">
    </testcase>
  </testsuite>
  <testsuite name="TextModel.toRawText" timestamp="2017-02-22T23:10:15" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="TextModel.toRawText one line text" time="0" classname="one line text">
    </testcase>
    <testcase name="TextModel.toRawText multiline text" time="0" classname="multiline text">
    </testcase>
    <testcase name="TextModel.toRawText Non Basic ASCII 1" time="0" classname="Non Basic ASCII 1">
    </testcase>
    <testcase name="TextModel.toRawText containsRTL 1" time="0" classname="containsRTL 1">
    </testcase>
    <testcase name="TextModel.toRawText containsRTL 2" time="0" classname="containsRTL 2">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - TextModel" timestamp="2017-02-22T23:10:15" tests="10" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.004">
    <testcase name="Editor Model - TextModel getValueLengthInRange" time="0" classname="getValueLengthInRange">
    </testcase>
    <testcase name="Editor Model - TextModel guess indentation 1" time="0.002" classname="guess indentation 1">
    </testcase>
    <testcase name="Editor Model - TextModel validatePosition" time="0.001" classname="validatePosition">
    </testcase>
    <testcase name="Editor Model - TextModel validatePosition around high-low surrogate pairs 1" time="0" classname="validatePosition around high-low surrogate pairs 1">
    </testcase>
    <testcase name="Editor Model - TextModel validatePosition around high-low surrogate pairs 2" time="0" classname="validatePosition around high-low surrogate pairs 2">
    </testcase>
    <testcase name="Editor Model - TextModel validateRange around high-low surrogate pairs 1" time="0" classname="validateRange around high-low surrogate pairs 1">
    </testcase>
    <testcase name="Editor Model - TextModel validateRange around high-low surrogate pairs 2" time="0.001" classname="validateRange around high-low surrogate pairs 2">
    </testcase>
    <testcase name="Editor Model - TextModel modifyPosition" time="0" classname="modifyPosition">
    </testcase>
    <testcase name="Editor Model - TextModel normalizeIndentation 1" time="0" classname="normalizeIndentation 1">
    </testcase>
    <testcase name="Editor Model - TextModel normalizeIndentation 2" time="0" classname="normalizeIndentation 2">
    </testcase>
  </testsuite>
  <testsuite name="TextModel.mightContainRTL" timestamp="2017-02-22T23:10:15" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="TextModel.mightContainRTL nope" time="0" classname="nope">
    </testcase>
    <testcase name="TextModel.mightContainRTL yes" time="0" classname="yes">
    </testcase>
    <testcase name="TextModel.mightContainRTL setValue resets 1" time="0.001" classname="setValue resets 1">
    </testcase>
    <testcase name="TextModel.mightContainRTL setValue resets 2" time="0" classname="setValue resets 2">
    </testcase>
  </testsuite>
  <testsuite name="TextModel.getLineIndentGuide" timestamp="2017-02-22T23:10:15" tests="13" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="TextModel.getLineIndentGuide getLineIndentGuide one level" time="0.001" classname="getLineIndentGuide one level">
    </testcase>
    <testcase name="TextModel.getLineIndentGuide getLineIndentGuide two levels" time="0" classname="getLineIndentGuide two levels">
    </testcase>
    <testcase name="TextModel.getLineIndentGuide getLineIndentGuide three levels" time="0" classname="getLineIndentGuide three levels">
    </testcase>
    <testcase name="TextModel.getLineIndentGuide getLineIndentGuide decreasing indent" time="0" classname="getLineIndentGuide decreasing indent">
    </testcase>
    <testcase name="TextModel.getLineIndentGuide getLineIndentGuide Java" time="0" classname="getLineIndentGuide Java">
    </testcase>
    <testcase name="TextModel.getLineIndentGuide getLineIndentGuide Javadoc" time="0" classname="getLineIndentGuide Javadoc">
    </testcase>
    <testcase name="TextModel.getLineIndentGuide getLineIndentGuide Whitespace" time="0" classname="getLineIndentGuide Whitespace">
    </testcase>
    <testcase name="TextModel.getLineIndentGuide getLineIndentGuide Tabs" time="0.001" classname="getLineIndentGuide Tabs">
    </testcase>
    <testcase name="TextModel.getLineIndentGuide getLineIndentGuide checker.ts" time="0" classname="getLineIndentGuide checker.ts">
    </testcase>
    <testcase name="TextModel.getLineIndentGuide issue #8425 - Missing indentation lines for first level indentation" time="0" classname="issue #8425 - Missing indentation lines for first level indentation">
    </testcase>
    <testcase name="TextModel.getLineIndentGuide issue #8952 - Indentation guide lines going through text on .yml file" time="0" classname="issue #8952 - Indentation guide lines going through text on .yml file">
    </testcase>
    <testcase name="TextModel.getLineIndentGuide issue #11892 - Indent guides look funny" time="0" classname="issue #11892 - Indent guides look funny">
    </testcase>
    <testcase name="TextModel.getLineIndentGuide issue #12398 - Problem in indent guidelines" time="0" classname="issue #12398 - Problem in indent guidelines">
    </testcase>
  </testsuite>
  <testsuite name="TextModelSearch" timestamp="2017-02-22T23:10:15" tests="33" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.017000000000000005">
    <testcase name="TextModelSearch Simple find" time="0.002" classname="Simple find">
    </testcase>
    <testcase name="TextModelSearch Case sensitive find" time="0.001" classname="Case sensitive find">
    </testcase>
    <testcase name="TextModelSearch Whole words find" time="0" classname="Whole words find">
    </testcase>
    <testcase name="TextModelSearch /^/ find" time="0.002" classname="/^/ find">
    </testcase>
    <testcase name="TextModelSearch /$/ find" time="0" classname="/$/ find">
    </testcase>
    <testcase name="TextModelSearch /.*/ find" time="0.002" classname="/.*/ find">
    </testcase>
    <testcase name="TextModelSearch /^$/ find" time="0" classname="/^$/ find">
    </testcase>
    <testcase name="TextModelSearch multiline find 1" time="0.001" classname="multiline find 1">
    </testcase>
    <testcase name="TextModelSearch multiline find 2" time="0" classname="multiline find 2">
    </testcase>
    <testcase name="TextModelSearch multiline find 3" time="0.001" classname="multiline find 3">
    </testcase>
    <testcase name="TextModelSearch multiline find 4" time="0.001" classname="multiline find 4">
    </testcase>
    <testcase name="TextModelSearch multiline find with line beginning regex" time="0" classname="multiline find with line beginning regex">
    </testcase>
    <testcase name="TextModelSearch matching empty lines using boundary expression" time="0.002" classname="matching empty lines using boundary expression">
    </testcase>
    <testcase name="TextModelSearch matching lines starting with A and ending with B" time="0" classname="matching lines starting with A and ending with B">
    </testcase>
    <testcase name="TextModelSearch multiline find with line ending regex" time="0.001" classname="multiline find with line ending regex">
    </testcase>
    <testcase name="TextModelSearch issue #4836 - ^.*$" time="0.001" classname="issue #4836 - ^.*$">
    </testcase>
    <testcase name="TextModelSearch multiline find for non-regex string" time="0.001" classname="multiline find for non-regex string">
    </testcase>
    <testcase name="TextModelSearch findNextMatch without regex" time="0" classname="findNextMatch without regex">
    </testcase>
    <testcase name="TextModelSearch findNextMatch with beginning boundary regex" time="0" classname="findNextMatch with beginning boundary regex">
    </testcase>
    <testcase name="TextModelSearch findNextMatch with beginning boundary regex and line has repetitive beginnings" time="0" classname="findNextMatch with beginning boundary regex and line has repetitive beginnings">
    </testcase>
    <testcase name="TextModelSearch findNextMatch with beginning boundary multiline regex and line has repetitive beginnings" time="0" classname="findNextMatch with beginning boundary multiline regex and line has repetitive beginnings">
    </testcase>
    <testcase name="TextModelSearch findNextMatch with ending boundary regex" time="0.001" classname="findNextMatch with ending boundary regex">
    </testcase>
    <testcase name="TextModelSearch findMatches with capturing matches" time="0.001" classname="findMatches with capturing matches">
    </testcase>
    <testcase name="TextModelSearch findMatches multiline with capturing matches" time="0" classname="findMatches multiline with capturing matches">
    </testcase>
    <testcase name="TextModelSearch findNextMatch with capturing matches" time="0" classname="findNextMatch with capturing matches">
    </testcase>
    <testcase name="TextModelSearch findNextMatch multiline with capturing matches" time="0" classname="findNextMatch multiline with capturing matches">
    </testcase>
    <testcase name="TextModelSearch findPreviousMatch with capturing matches" time="0" classname="findPreviousMatch with capturing matches">
    </testcase>
    <testcase name="TextModelSearch findPreviousMatch multiline with capturing matches" time="0" classname="findPreviousMatch multiline with capturing matches">
    </testcase>
    <testcase name="TextModelSearch \n matches \r\n" time="0" classname="\n matches \r\n">
    </testcase>
    <testcase name="TextModelSearch \r can never be found" time="0" classname="\r can never be found">
    </testcase>
    <testcase name="TextModelSearch parseSearchRequest invalid" time="0" classname="parseSearchRequest invalid">
    </testcase>
    <testcase name="TextModelSearch parseSearchRequest non regex" time="0" classname="parseSearchRequest non regex">
    </testcase>
    <testcase name="TextModelSearch parseSearchRequest regex" time="0" classname="parseSearchRequest regex">
    </testcase>
  </testsuite>
  <testsuite name="ModelBuilder" timestamp="2017-02-22T23:10:15" tests="24" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="ModelBuilder uses sha1" time="0" classname="uses sha1">
    </testcase>
    <testcase name="ModelBuilder no chunks" time="0.001" classname="no chunks">
    </testcase>
    <testcase name="ModelBuilder single empty chunk" time="0" classname="single empty chunk">
    </testcase>
    <testcase name="ModelBuilder single line in one chunk" time="0" classname="single line in one chunk">
    </testcase>
    <testcase name="ModelBuilder single line in multiple chunks" time="0" classname="single line in multiple chunks">
    </testcase>
    <testcase name="ModelBuilder two lines in single chunk" time="0" classname="two lines in single chunk">
    </testcase>
    <testcase name="ModelBuilder two lines in multiple chunks 1" time="0" classname="two lines in multiple chunks 1">
    </testcase>
    <testcase name="ModelBuilder two lines in multiple chunks 2" time="0" classname="two lines in multiple chunks 2">
    </testcase>
    <testcase name="ModelBuilder two lines in multiple chunks 3" time="0.001" classname="two lines in multiple chunks 3">
    </testcase>
    <testcase name="ModelBuilder multiple lines in single chunks" time="0" classname="multiple lines in single chunks">
    </testcase>
    <testcase name="ModelBuilder multiple lines in multiple chunks 1" time="0" classname="multiple lines in multiple chunks 1">
    </testcase>
    <testcase name="ModelBuilder multiple lines in multiple chunks 1" time="0" classname="multiple lines in multiple chunks 1">
    </testcase>
    <testcase name="ModelBuilder multiple lines in multiple chunks 1" time="0" classname="multiple lines in multiple chunks 1">
    </testcase>
    <testcase name="ModelBuilder carriage return detection (1 \r\n 2 \n)" time="0" classname="carriage return detection (1 \r\n 2 \n)">
    </testcase>
    <testcase name="ModelBuilder carriage return detection (2 \r\n 1 \n)" time="0" classname="carriage return detection (2 \r\n 1 \n)">
    </testcase>
    <testcase name="ModelBuilder carriage return detection (3 \r\n 0 \n)" time="0" classname="carriage return detection (3 \r\n 0 \n)">
    </testcase>
    <testcase name="ModelBuilder carriage return detection (isolated \r)" time="0" classname="carriage return detection (isolated \r)">
    </testcase>
    <testcase name="ModelBuilder BOM handling" time="0" classname="BOM handling">
    </testcase>
    <testcase name="ModelBuilder BOM handling" time="0" classname="BOM handling">
    </testcase>
    <testcase name="ModelBuilder RTL handling 1" time="0.001" classname="RTL handling 1">
    </testcase>
    <testcase name="ModelBuilder RTL handling 2" time="0" classname="RTL handling 2">
    </testcase>
    <testcase name="ModelBuilder RTL handling 3" time="0" classname="RTL handling 3">
    </testcase>
    <testcase name="ModelBuilder ASCII handling 1" time="0" classname="ASCII handling 1">
    </testcase>
    <testcase name="ModelBuilder ASCII handling 1" time="0" classname="ASCII handling 1">
    </testcase>
  </testsuite>
  <testsuite name="ModelBuilder Auto Tests" timestamp="2017-02-22T23:10:15" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="ModelBuilder Auto Tests auto1" time="0" classname="auto1">
    </testcase>
    <testcase name="ModelBuilder Auto Tests auto2" time="0.001" classname="auto2">
    </testcase>
    <testcase name="ModelBuilder Auto Tests auto3" time="0" classname="auto3">
    </testcase>
  </testsuite>
  <testsuite name="CursorMove" timestamp="2017-02-22T23:10:15" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="CursorMove nextTabStop" time="0" classname="nextTabStop">
    </testcase>
    <testcase name="CursorMove visibleColumnFromColumn" time="0" classname="visibleColumnFromColumn">
    </testcase>
    <testcase name="CursorMove columnFromVisibleColumn" time="0" classname="columnFromVisibleColumn">
    </testcase>
  </testsuite>
  <testsuite name="CharacterPairSupport" timestamp="2017-02-22T23:10:15" tests="13" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="CharacterPairSupport only autoClosingPairs" time="0" classname="only autoClosingPairs">
    </testcase>
    <testcase name="CharacterPairSupport only empty autoClosingPairs" time="0" classname="only empty autoClosingPairs">
    </testcase>
    <testcase name="CharacterPairSupport only brackets" time="0" classname="only brackets">
    </testcase>
    <testcase name="CharacterPairSupport only empty brackets" time="0" classname="only empty brackets">
    </testcase>
    <testcase name="CharacterPairSupport only surroundingPairs" time="0" classname="only surroundingPairs">
    </testcase>
    <testcase name="CharacterPairSupport only empty surroundingPairs" time="0" classname="only empty surroundingPairs">
    </testcase>
    <testcase name="CharacterPairSupport brackets is ignored when having autoClosingPairs" time="0" classname="brackets is ignored when having autoClosingPairs">
    </testcase>
    <testcase name="CharacterPairSupport shouldAutoClosePair in empty line" time="0" classname="shouldAutoClosePair in empty line">
    </testcase>
    <testcase name="CharacterPairSupport shouldAutoClosePair in not interesting line 1" time="0" classname="shouldAutoClosePair in not interesting line 1">
    </testcase>
    <testcase name="CharacterPairSupport shouldAutoClosePair in not interesting line 2" time="0" classname="shouldAutoClosePair in not interesting line 2">
    </testcase>
    <testcase name="CharacterPairSupport shouldAutoClosePair in interesting line 1" time="0" classname="shouldAutoClosePair in interesting line 1">
    </testcase>
    <testcase name="CharacterPairSupport shouldAutoClosePair in interesting line 2" time="0" classname="shouldAutoClosePair in interesting line 2">
    </testcase>
    <testcase name="CharacterPairSupport shouldAutoClosePair in interesting line 3" time="0" classname="shouldAutoClosePair in interesting line 3">
    </testcase>
  </testsuite>
  <testsuite name="Editor Modes - Auto Indentation" timestamp="2017-02-22T23:10:15" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Editor Modes - Auto Indentation Doc comments" time="0" classname="Doc comments">
    </testcase>
    <testcase name="Editor Modes - Auto Indentation getElectricCharacters uses all sources and dedups" time="0.001" classname="getElectricCharacters uses all sources and dedups">
    </testcase>
    <testcase name="Editor Modes - Auto Indentation auto-close" time="0" classname="auto-close">
    </testcase>
    <testcase name="Editor Modes - Auto Indentation matchOpenBracket" time="0" classname="matchOpenBracket">
    </testcase>
  </testsuite>
  <testsuite name="Theme matching" timestamp="2017-02-22T23:10:15" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Theme matching gives higher priority to deeper matches" time="0.001" classname="gives higher priority to deeper matches">
    </testcase>
    <testcase name="Theme matching can match" time="0.001" classname="can match">
    </testcase>
  </testsuite>
  <testsuite name="Theme parsing" timestamp="2017-02-22T23:10:15" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Theme parsing can parse" time="0" classname="can parse">
    </testcase>
  </testsuite>
  <testsuite name="Theme resolving" timestamp="2017-02-22T23:10:15" tests="12" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Theme resolving strcmp works" time="0" classname="strcmp works">
    </testcase>
    <testcase name="Theme resolving always has defaults" time="0.001" classname="always has defaults">
    </testcase>
    <testcase name="Theme resolving respects incoming defaults 1" time="0" classname="respects incoming defaults 1">
    </testcase>
    <testcase name="Theme resolving respects incoming defaults 2" time="0" classname="respects incoming defaults 2">
    </testcase>
    <testcase name="Theme resolving respects incoming defaults 3" time="0" classname="respects incoming defaults 3">
    </testcase>
    <testcase name="Theme resolving respects incoming defaults 4" time="0" classname="respects incoming defaults 4">
    </testcase>
    <testcase name="Theme resolving respects incoming defaults 5" time="0" classname="respects incoming defaults 5">
    </testcase>
    <testcase name="Theme resolving can merge incoming defaults" time="0.001" classname="can merge incoming defaults">
    </testcase>
    <testcase name="Theme resolving defaults are inherited" time="0" classname="defaults are inherited">
    </testcase>
    <testcase name="Theme resolving same rules get merged" time="0" classname="same rules get merged">
    </testcase>
    <testcase name="Theme resolving rules are inherited 1" time="0" classname="rules are inherited 1">
    </testcase>
    <testcase name="Theme resolving rules are inherited 2" time="0" classname="rules are inherited 2">
    </testcase>
  </testsuite>
  <testsuite name="Editor Modes - textToHtmlTokenizer" timestamp="2017-02-22T23:10:15" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Editor Modes - textToHtmlTokenizer TextToHtmlTokenizer 1" time="0.001" classname="TextToHtmlTokenizer 1">
    </testcase>
    <testcase name="Editor Modes - textToHtmlTokenizer TextToHtmlTokenizer 2" time="0" classname="TextToHtmlTokenizer 2">
    </testcase>
  </testsuite>
  <testsuite name="EditorSimpleWorker" timestamp="2017-02-22T23:10:15" tests="9" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="EditorSimpleWorker ICommonModel#offsetAt" time="0" classname="ICommonModel#offsetAt">
    </testcase>
    <testcase name="EditorSimpleWorker ICommonModel#positionAt" time="0" classname="ICommonModel#positionAt">
    </testcase>
    <testcase name="EditorSimpleWorker ICommonModel#validatePosition, issue #15882" time="0" classname="ICommonModel#validatePosition, issue #15882">
    </testcase>
    <testcase name="EditorSimpleWorker MoreMinimal" time="0.001" classname="MoreMinimal">
    </testcase>
    <testcase name="EditorSimpleWorker MoreMinimal, issue #15385 newline changes only" time="0" classname="MoreMinimal, issue #15385 newline changes only">
    </testcase>
    <testcase name="EditorSimpleWorker MoreMinimal, issue #15385 newline changes and other" time="0" classname="MoreMinimal, issue #15385 newline changes and other">
    </testcase>
    <testcase name="EditorSimpleWorker MoreMinimal, issue #15385 newline changes and other" time="0" classname="MoreMinimal, issue #15385 newline changes and other">
    </testcase>
    <testcase name="EditorSimpleWorker ICommonModel#getValueInRange, issue #17424" time="0" classname="ICommonModel#getValueInRange, issue #17424">
    </testcase>
    <testcase name="EditorSimpleWorker textualSuggest, issue #17785" time="0" classname="textualSuggest, issue #17785">
    </testcase>
  </testsuite>
  <testsuite name="MinimapCharRenderer" timestamp="2017-02-22T23:10:15" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.005">
    <testcase name="MinimapCharRenderer letter d @ 2x" time="0.004" classname="letter d @ 2x">
    </testcase>
    <testcase name="MinimapCharRenderer letter d @ 2x at runtime" time="0" classname="letter d @ 2x at runtime">
    </testcase>
    <testcase name="MinimapCharRenderer letter d @ 1x" time="0.001" classname="letter d @ 1x">
    </testcase>
    <testcase name="MinimapCharRenderer letter d @ 1x at runtime" time="0" classname="letter d @ 1x at runtime">
    </testcase>
  </testsuite>
  <testsuite name="EnvironmentService" timestamp="2017-02-22T23:10:15" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="EnvironmentService parseExtensionHostPort when built" time="0.001" classname="parseExtensionHostPort when built">
    </testcase>
    <testcase name="EnvironmentService parseExtensionHostPort when unbuilt" time="0.001" classname="parseExtensionHostPort when unbuilt">
    </testcase>
    <testcase name="EnvironmentService userDataPath" time="0" classname="userDataPath">
    </testcase>
  </testsuite>
  <testsuite name="LanguagesRegistry" timestamp="2017-02-22T23:10:15" tests="13" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="LanguagesRegistry output mode does not have a name" time="0.001" classname="output mode does not have a name">
    </testcase>
    <testcase name="LanguagesRegistry mode with alias does have a name" time="0" classname="mode with alias does have a name">
    </testcase>
    <testcase name="LanguagesRegistry mode without alias gets a name" time="0" classname="mode without alias gets a name">
    </testcase>
    <testcase name="LanguagesRegistry bug #4360: f# not shown in status bar" time="0" classname="bug #4360: f# not shown in status bar">
    </testcase>
    <testcase name="LanguagesRegistry issue #5278: Extension cannot override language name anymore" time="0" classname="issue #5278: Extension cannot override language name anymore">
    </testcase>
    <testcase name="LanguagesRegistry mimetypes are generated if necessary" time="0" classname="mimetypes are generated if necessary">
    </testcase>
    <testcase name="LanguagesRegistry first mimetype wins" time="0" classname="first mimetype wins">
    </testcase>
    <testcase name="LanguagesRegistry first mimetype wins 2" time="0.001" classname="first mimetype wins 2">
    </testcase>
    <testcase name="LanguagesRegistry aliases" time="0" classname="aliases">
    </testcase>
    <testcase name="LanguagesRegistry empty aliases array means no alias" time="0" classname="empty aliases array means no alias">
    </testcase>
    <testcase name="LanguagesRegistry extensions" time="0" classname="extensions">
    </testcase>
    <testcase name="LanguagesRegistry filenames" time="0" classname="filenames">
    </testcase>
    <testcase name="LanguagesRegistry configuration" time="0" classname="configuration">
    </testcase>
  </testsuite>
  <testsuite name="ConfigurationService - Model" timestamp="2017-02-22T23:10:15" tests="10" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="ConfigurationService - Model simple merge" time="0" classname="simple merge">
    </testcase>
    <testcase name="ConfigurationService - Model Recursive merge" time="0" classname="Recursive merge">
    </testcase>
    <testcase name="ConfigurationService - Model simple merge using models" time="0.001" classname="simple merge using models">
    </testcase>
    <testcase name="ConfigurationService - Model simple merge with an undefined contents" time="0" classname="simple merge with an undefined contents">
    </testcase>
    <testcase name="ConfigurationService - Model Recursive merge using config models" time="0" classname="Recursive merge using config models">
    </testcase>
    <testcase name="ConfigurationService - Model Test contents while getting an existing property" time="0" classname="Test contents while getting an existing property">
    </testcase>
    <testcase name="ConfigurationService - Model Test contents are undefined for non existing properties" time="0" classname="Test contents are undefined for non existing properties">
    </testcase>
    <testcase name="ConfigurationService - Model Test contents are undefined for undefined config" time="0" classname="Test contents are undefined for undefined config">
    </testcase>
    <testcase name="ConfigurationService - Model Test configWithOverrides gives all content merged with overrides" time="0" classname="Test configWithOverrides gives all content merged with overrides">
    </testcase>
    <testcase name="ConfigurationService - Model Test configWithOverrides gives empty contents" time="0" classname="Test configWithOverrides gives empty contents">
    </testcase>
  </testsuite>
  <testsuite name="BackupMainService" timestamp="2017-02-22T23:10:15" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.025">
    <testcase name="BackupMainService service validates backup workspaces on startup and cleans up" time="0.025" classname="service validates backup workspaces on startup and cleans up">
    </testcase>
  </testsuite>
  <testsuite name="loadSync" timestamp="2017-02-22T23:10:15" tests="9" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.023">
    <testcase name="BackupMainService loadSync getWorkspaceBackupPaths() should return [] when workspaces.json doesn&apos;t exist" time="0" classname="getWorkspaceBackupPaths() should return [] when workspaces.json doesn&apos;t exist">
    </testcase>
    <testcase name="BackupMainService loadSync getWorkspaceBackupPaths() should return [] when workspaces.json is not properly formed JSON" time="0.001" classname="getWorkspaceBackupPaths() should return [] when workspaces.json is not properly formed JSON">
    </testcase>
    <testcase name="BackupMainService loadSync getWorkspaceBackupPaths() should return [] when folderWorkspaces in workspaces.json is absent" time="0" classname="getWorkspaceBackupPaths() should return [] when folderWorkspaces in workspaces.json is absent">
    </testcase>
    <testcase name="BackupMainService loadSync getWorkspaceBackupPaths() should return [] when folderWorkspaces in workspaces.json is not a string array" time="0.008" classname="getWorkspaceBackupPaths() should return [] when folderWorkspaces in workspaces.json is not a string array">
    </testcase>
    <testcase name="BackupMainService loadSync getWorkspaceBackupPaths() should return [] when files.hotExit = &quot;onExitAndWindowClose&quot;" time="0.004" classname="getWorkspaceBackupPaths() should return [] when files.hotExit = &quot;onExitAndWindowClose&quot;">
    </testcase>
    <testcase name="BackupMainService loadSync getEmptyWorkspaceBackupPaths() should return [] when workspaces.json doesn&apos;t exist" time="0" classname="getEmptyWorkspaceBackupPaths() should return [] when workspaces.json doesn&apos;t exist">
    </testcase>
    <testcase name="BackupMainService loadSync getEmptyWorkspaceBackupPaths() should return [] when workspaces.json is not properly formed JSON" time="0.002" classname="getEmptyWorkspaceBackupPaths() should return [] when workspaces.json is not properly formed JSON">
    </testcase>
    <testcase name="BackupMainService loadSync getEmptyWorkspaceBackupPaths() should return [] when folderWorkspaces in workspaces.json is absent" time="0.001" classname="getEmptyWorkspaceBackupPaths() should return [] when folderWorkspaces in workspaces.json is absent">
    </testcase>
    <testcase name="BackupMainService loadSync getEmptyWorkspaceBackupPaths() should return [] when folderWorkspaces in workspaces.json is not a string array" time="0.007" classname="getEmptyWorkspaceBackupPaths() should return [] when folderWorkspaces in workspaces.json is not a string array">
    </testcase>
  </testsuite>
  <testsuite name="dedupeFolderWorkspaces" timestamp="2017-02-22T23:10:15" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="BackupMainService dedupeFolderWorkspaces should ignore duplicates on Windows and Mac" time="0" classname="should ignore duplicates on Windows and Mac">
    </testcase>
  </testsuite>
  <testsuite name="registerWindowForBackups" timestamp="2017-02-22T23:10:15" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="BackupMainService registerWindowForBackups should persist paths to workspaces.json" time="0.002" classname="should persist paths to workspaces.json">
    </testcase>
    <testcase name="BackupMainService registerWindowForBackups should always store the workspace path in workspaces.json using the case given, regardless of whether the file system is case-sensitive" time="0.001" classname="should always store the workspace path in workspaces.json using the case given, regardless of whether the file system is case-sensitive">
    </testcase>
  </testsuite>
  <testsuite name="removeBackupPathSync" timestamp="2017-02-22T23:10:15" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.025">
    <testcase name="BackupMainService removeBackupPathSync should remove folder workspaces from workspaces.json" time="0.005" classname="should remove folder workspaces from workspaces.json">
    </testcase>
    <testcase name="BackupMainService removeBackupPathSync should remove empty workspaces from workspaces.json" time="0.004" classname="should remove empty workspaces from workspaces.json">
    </testcase>
    <testcase name="BackupMainService removeBackupPathSync should fail gracefully when removing a path that doesn&apos;t exist" time="0.016" classname="should fail gracefully when removing a path that doesn&apos;t exist">
    </testcase>
  </testsuite>
  <testsuite name="getWorkspaceHash" timestamp="2017-02-22T23:10:15" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="BackupMainService getWorkspaceHash should perform an md5 hash on the path" time="0" classname="should perform an md5 hash on the path">
    </testcase>
    <testcase name="BackupMainService getWorkspaceHash should ignore case on Windows and Mac" time="0" classname="should ignore case on Windows and Mac">
    </testcase>
  </testsuite>
  <testsuite name="getBackupPath" timestamp="2017-02-22T23:10:15" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="BackupMainService getBackupPath should return the window&apos;s correct path" time="0.001" classname="should return the window&apos;s correct path">
    </testcase>
    <testcase name="BackupMainService getBackupPath should override stale window paths with new paths" time="0.001" classname="should override stale window paths with new paths">
    </testcase>
    <testcase name="BackupMainService getBackupPath should throw when the window is not registered" time="0" classname="should throw when the window is not registered">
    </testcase>
  </testsuite>
  <testsuite name="mixed path casing" timestamp="2017-02-22T23:10:15" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.004">
    <testcase name="BackupMainService mixed path casing should handle case insensitive paths properly (registerWindowForBackupsSync)" time="0.001" classname="should handle case insensitive paths properly (registerWindowForBackupsSync)">
    </testcase>
    <testcase name="BackupMainService mixed path casing should handle case insensitive paths properly (removeBackupPathSync)" time="0.003" classname="should handle case insensitive paths properly (removeBackupPathSync)">
    </testcase>
  </testsuite>
  <testsuite name="ConfigurationService - Model" timestamp="2017-02-22T23:10:15" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="ConfigurationService - Model Test scoped configs are undefined" time="0.001" classname="Test scoped configs are undefined">
    </testcase>
    <testcase name="ConfigurationService - Model Test consolidate (settings and tasks)" time="0" classname="Test consolidate (settings and tasks)">
    </testcase>
    <testcase name="ConfigurationService - Model Test consolidate (settings and launch)" time="0" classname="Test consolidate (settings and launch)">
    </testcase>
    <testcase name="ConfigurationService - Model Test consolidate (settings and launch and tasks) - launch/tasks wins over settings file" time="0.001" classname="Test consolidate (settings and launch and tasks) - launch/tasks wins over settings file">
    </testcase>
  </testsuite>
  <testsuite name="ExtHostConfiguration" timestamp="2017-02-22T23:10:15" tests="9" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="ExtHostConfiguration getConfiguration fails regression test 1.7.1 -&gt; 1.8 #15552" time="0.001" classname="getConfiguration fails regression test 1.7.1 -&gt; 1.8 #15552">
    </testcase>
    <testcase name="ExtHostConfiguration has/get" time="0" classname="has/get">
    </testcase>
    <testcase name="ExtHostConfiguration getConfiguration vs get" time="0" classname="getConfiguration vs get">
    </testcase>
    <testcase name="ExtHostConfiguration getConfiguration vs get" time="0" classname="getConfiguration vs get">
    </testcase>
    <testcase name="ExtHostConfiguration name vs property" time="0" classname="name vs property">
    </testcase>
    <testcase name="ExtHostConfiguration update/section to key" time="0" classname="update/section to key">
    </testcase>
    <testcase name="ExtHostConfiguration update, what is #15834" time="0.001" classname="update, what is #15834">
    </testcase>
    <testcase name="ExtHostConfiguration bogous data, #15834" time="0" classname="bogous data, #15834">
    </testcase>
    <testcase name="ExtHostConfiguration update/error-state not OK" time="0" classname="update/error-state not OK">
    </testcase>
  </testsuite>
  <testsuite name="ConfigurationService - Node" timestamp="2017-02-22T23:10:15" tests="7" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.048">
    <testcase name="ConfigurationService - Node simple" time="0.009" classname="simple">
    </testcase>
    <testcase name="ConfigurationService - Node config gets flattened" time="0.006" classname="config gets flattened">
    </testcase>
    <testcase name="ConfigurationService - Node error case does not explode" time="0.004" classname="error case does not explode">
    </testcase>
    <testcase name="ConfigurationService - Node missing file does not explode" time="0.001" classname="missing file does not explode">
    </testcase>
    <testcase name="ConfigurationService - Node reloadConfiguration" time="0.011" classname="reloadConfiguration">
    </testcase>
    <testcase name="ConfigurationService - Node model defaults" time="0.01" classname="model defaults">
    </testcase>
    <testcase name="ConfigurationService - Node lookup" time="0.007" classname="lookup">
    </testcase>
  </testsuite>
  <testsuite name="TelemetryService" timestamp="2017-02-22T23:10:15" tests="24" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.013000000000000005">
    <testcase name="TelemetryService Disposing" time="0.002" classname="Disposing">
    </testcase>
    <testcase name="TelemetryService Simple event" time="0" classname="Simple event">
    </testcase>
    <testcase name="TelemetryService Event with data" time="0.001" classname="Event with data">
    </testcase>
    <testcase name="TelemetryService common properties added to *all* events, simple event" time="0" classname="common properties added to *all* events, simple event">
    </testcase>
    <testcase name="TelemetryService common properties added to *all* events, event with data" time="0" classname="common properties added to *all* events, event with data">
    </testcase>
    <testcase name="TelemetryService TelemetryInfo comes from properties" time="0" classname="TelemetryInfo comes from properties">
    </testcase>
    <testcase name="TelemetryService enableTelemetry on by default" time="0.001" classname="enableTelemetry on by default">
    </testcase>
    <testcase name="TelemetryService Error events" time="0.001" classname="Error events">
    </testcase>
    <testcase name="TelemetryService Handle global errors" time="0.001" classname="Handle global errors">
    </testcase>
    <testcase name="TelemetryService Uncaught Error Telemetry removes PII from filename" time="0.002" classname="Uncaught Error Telemetry removes PII from filename">
    </testcase>
    <testcase name="TelemetryService Unexpected Error Telemetry removes PII" time="0" classname="Unexpected Error Telemetry removes PII">
    </testcase>
    <testcase name="TelemetryService Uncaught Error Telemetry removes PII" time="0.001" classname="Uncaught Error Telemetry removes PII">
    </testcase>
    <testcase name="TelemetryService Unexpected Error Telemetry removes PII but preserves Code file path" time="0" classname="Unexpected Error Telemetry removes PII but preserves Code file path">
    </testcase>
    <testcase name="TelemetryService Uncaught Error Telemetry removes PII but preserves Code file path" time="0" classname="Uncaught Error Telemetry removes PII but preserves Code file path">
    </testcase>
    <testcase name="TelemetryService Unexpected Error Telemetry removes PII but preserves Code file path when PIIPath is configured" time="0.001" classname="Unexpected Error Telemetry removes PII but preserves Code file path when PIIPath is configured">
    </testcase>
    <testcase name="TelemetryService Uncaught Error Telemetry removes PII but preserves Code file path when PIIPath is configured" time="0" classname="Uncaught Error Telemetry removes PII but preserves Code file path when PIIPath is configured">
    </testcase>
    <testcase name="TelemetryService Unexpected Error Telemetry removes PII but preserves Missing Model error message" time="0.001" classname="Unexpected Error Telemetry removes PII but preserves Missing Model error message">
    </testcase>
    <testcase name="TelemetryService Uncaught Error Telemetry removes PII but preserves Missing Model error message" time="0" classname="Uncaught Error Telemetry removes PII but preserves Missing Model error message">
    </testcase>
    <testcase name="TelemetryService Unexpected Error Telemetry removes PII but preserves No Such File error message" time="0" classname="Unexpected Error Telemetry removes PII but preserves No Such File error message">
    </testcase>
    <testcase name="TelemetryService Uncaught Error Telemetry removes PII but preserves No Such File error message" time="0.001" classname="Uncaught Error Telemetry removes PII but preserves No Such File error message">
    </testcase>
    <testcase name="TelemetryService Telemetry Service respects user opt-in settings" time="0" classname="Telemetry Service respects user opt-in settings">
    </testcase>
    <testcase name="TelemetryService Telemetry Service does not sent optInStatus when user opted out" time="0.001" classname="Telemetry Service does not sent optInStatus when user opted out">
    </testcase>
    <testcase name="TelemetryService Telemetry Service sends events when enableTelemetry is on even user optin is on" time="0" classname="Telemetry Service sends events when enableTelemetry is on even user optin is on">
    </testcase>
    <testcase name="TelemetryService Telemetry Service checks with config service" time="0" classname="Telemetry Service checks with config service">
    </testcase>
  </testsuite>
  <testsuite name="WorkspaceConfigurationService - Node" timestamp="2017-02-22T23:10:15" tests="10" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.16899999999999998">
    <testcase name="WorkspaceConfigurationService - Node defaults" time="0.01" classname="defaults">
    </testcase>
    <testcase name="WorkspaceConfigurationService - Node globals" time="0.011" classname="globals">
    </testcase>
    <testcase name="WorkspaceConfigurationService - Node reload configuration emits events" time="0.013" classname="reload configuration emits events">
    </testcase>
    <testcase name="WorkspaceConfigurationService - Node globals override defaults" time="0.009" classname="globals override defaults">
    </testcase>
    <testcase name="WorkspaceConfigurationService - Node workspace settings" time="0.01" classname="workspace settings">
    </testcase>
    <testcase name="WorkspaceConfigurationService - Node workspace settings override user settings" time="0.009" classname="workspace settings override user settings">
    </testcase>
    <testcase name="WorkspaceConfigurationService - Node workspace change triggers event" time="0.059" classname="workspace change triggers event">
    </testcase>
    <testcase name="WorkspaceConfigurationService - Node lookup" time="0.018" classname="lookup">
    </testcase>
    <testcase name="WorkspaceConfigurationService - Node keys" time="0.018" classname="keys">
    </testcase>
    <testcase name="WorkspaceConfigurationService - Node values" time="0.012" classname="values">
    </testcase>
  </testsuite>
  <testsuite name="Debug - Adapter" timestamp="2017-02-22T23:10:15" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Debug - Adapter attributes" time="0.001" classname="attributes">
    </testcase>
    <testcase name="Debug - Adapter schema attributes" time="0" classname="schema attributes">
    </testcase>
    <testcase name="Debug - Adapter merge" time="0.001" classname="merge">
    </testcase>
    <testcase name="Debug - Adapter initial config file content" time="0" classname="initial config file content">
    </testcase>
  </testsuite>
  <testsuite name="MarkersModel Test" timestamp="2017-02-22T23:10:15" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="MarkersModel Test getFilteredResource return markers grouped by resource" time="0.001" classname="getFilteredResource return markers grouped by resource">
    </testcase>
    <testcase name="MarkersModel Test sort palces resources with no errors at the end" time="0" classname="sort palces resources with no errors at the end">
    </testcase>
    <testcase name="MarkersModel Test sort resources by file path" time="0" classname="sort resources by file path">
    </testcase>
    <testcase name="MarkersModel Test sort markers by severity, line and column" time="0.001" classname="sort markers by severity, line and column">
    </testcase>
    <testcase name="MarkersModel Test toString()" time="0" classname="toString()">
    </testcase>
  </testsuite>
  <testsuite name="Tasks Configuration parsing tests" timestamp="2017-02-22T23:10:15" tests="46" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.008">
    <testcase name="Tasks Configuration parsing tests tasks: all default" time="0.002" classname="tasks: all default">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: global isShellCommand" time="0" classname="tasks: global isShellCommand">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: global show output silent" time="0" classname="tasks: global show output silent">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: global promptOnClose default" time="0" classname="tasks: global promptOnClose default">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: global promptOnClose" time="0" classname="tasks: global promptOnClose">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: global promptOnClose default watching" time="0" classname="tasks: global promptOnClose default watching">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: global show output never" time="0" classname="tasks: global show output never">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: global echo Command" time="0" classname="tasks: global echo Command">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: global args" time="0" classname="tasks: global args">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: options - cwd" time="0" classname="tasks: options - cwd">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: options - env" time="0" classname="tasks: options - env">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: os windows" time="0.001" classname="tasks: os windows">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: os windows &amp; global isShellCommand" time="0" classname="tasks: os windows &amp; global isShellCommand">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: os mac" time="0" classname="tasks: os mac">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: os linux" time="0" classname="tasks: os linux">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: overwrite showOutput" time="0.001" classname="tasks: overwrite showOutput">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: overwrite echo Command" time="0" classname="tasks: overwrite echo Command">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: global problemMatcher one" time="0" classname="tasks: global problemMatcher one">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: global problemMatcher two" time="0" classname="tasks: global problemMatcher two">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: task definition" time="0" classname="tasks: task definition">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: build task" time="0" classname="tasks: build task">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: default build task" time="0" classname="tasks: default build task">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: test task" time="0" classname="tasks: test task">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: default test task" time="0" classname="tasks: default test task">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: task with values" time="0" classname="tasks: task with values">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: task inherits global values" time="0" classname="tasks: task inherits global values">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: problem matcher default" time="0.001" classname="tasks: problem matcher default">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: problem matcher .* regular expression" time="0.001" classname="tasks: problem matcher .* regular expression">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: problem matcher owner, applyTo, severity and fileLocation" time="0" classname="tasks: problem matcher owner, applyTo, severity and fileLocation">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: problem matcher fileLocation and filePrefix" time="0" classname="tasks: problem matcher fileLocation and filePrefix">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: problem pattern location" time="0" classname="tasks: problem pattern location">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: problem pattern line &amp; column" time="0" classname="tasks: problem pattern line &amp; column">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: prompt on close default" time="0" classname="tasks: prompt on close default">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: prompt on close watching" time="0.001" classname="tasks: prompt on close watching">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: prompt on close set" time="0" classname="tasks: prompt on close set">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: task selector set" time="0" classname="tasks: task selector set">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: suppress task name set" time="0" classname="tasks: suppress task name set">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: suppress task name inerit" time="0" classname="tasks: suppress task name inerit">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: two tasks" time="0" classname="tasks: two tasks">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: with command" time="0" classname="tasks: with command">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: two tasks with command" time="0" classname="tasks: two tasks with command">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: with command and args" time="0" classname="tasks: with command and args">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: with command os specific" time="0" classname="tasks: with command os specific">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: with Windows specific args" time="0" classname="tasks: with Windows specific args">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: with Linux specific args" time="0.001" classname="tasks: with Linux specific args">
    </testcase>
    <testcase name="Tasks Configuration parsing tests tasks: global command and task command properties" time="0" classname="tasks: global command and task command properties">
    </testcase>
  </testsuite>
  <testsuite name="Bugs / regression tests" timestamp="2017-02-22T23:10:15" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Bugs / regression tests Bug 19548" time="0" classname="Bug 19548">
    </testcase>
  </testsuite>
  <testsuite name="Processes" timestamp="2017-02-22T23:10:15" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.314">
    <testcase name="Processes buffered sending - simple data" time="0.147" classname="buffered sending - simple data">
    </testcase>
    <testcase name="Processes buffered sending - lots of data (potential deadlock on win32)" time="0.167" classname="buffered sending - lots of data (potential deadlock on win32)">
    </testcase>
  </testsuite>
  <testsuite name="IPC" timestamp="2017-02-22T23:10:15" tests="0" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
  </testsuite>
  <testsuite name="child process" timestamp="2017-02-22T23:10:15" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.548">
    <testcase name="IPC child process createChannel" time="0.162" classname="createChannel">
    </testcase>
    <testcase name="IPC child process cancellation" time="0.054" classname="cancellation">
    </testcase>
    <testcase name="IPC child process events" time="0.158" classname="events">
    </testcase>
    <testcase name="IPC child process event dispose" time="0.174" classname="event dispose">
    </testcase>
  </testsuite>
  <testsuite name="Execution - TerminalService" timestamp="2017-02-22T23:10:16" tests="8" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Execution - TerminalService WinTerminalService - uses terminal from configuration" time="0.001" classname="WinTerminalService - uses terminal from configuration">
    </testcase>
    <testcase name="Execution - TerminalService WinTerminalService - uses default terminal when configuration.terminal.external.windowsExec is undefined" time="0" classname="WinTerminalService - uses default terminal when configuration.terminal.external.windowsExec is undefined">
    </testcase>
    <testcase name="Execution - TerminalService WinTerminalService - uses default terminal when configuration.terminal.external.windowsExec is undefined" time="0" classname="WinTerminalService - uses default terminal when configuration.terminal.external.windowsExec is undefined">
    </testcase>
    <testcase name="Execution - TerminalService WinTerminalService - cmder should be spawned differently" time="0" classname="WinTerminalService - cmder should be spawned differently">
    </testcase>
    <testcase name="Execution - TerminalService MacTerminalService - uses terminal from configuration" time="0" classname="MacTerminalService - uses terminal from configuration">
    </testcase>
    <testcase name="Execution - TerminalService MacTerminalService - uses default terminal when configuration.terminal.external.osxExec is undefined" time="0" classname="MacTerminalService - uses default terminal when configuration.terminal.external.osxExec is undefined">
    </testcase>
    <testcase name="Execution - TerminalService LinuxTerminalService - uses terminal from configuration" time="0" classname="LinuxTerminalService - uses terminal from configuration">
    </testcase>
    <testcase name="Execution - TerminalService LinuxTerminalService - uses default terminal when configuration.terminal.external.linuxExec is undefined" time="0" classname="LinuxTerminalService - uses default terminal when configuration.terminal.external.linuxExec is undefined">
    </testcase>
  </testsuite>
  <testsuite name="Search" timestamp="2017-02-22T23:10:16" tests="36" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.4800000000000001">
    <testcase name="Search Files: *.js" time="0.003" classname="Files: *.js">
    </testcase>
    <testcase name="Search Files: examples/com*" time="0.002" classname="Files: examples/com*">
    </testcase>
    <testcase name="Search Files: examples (fuzzy)" time="0.002" classname="Files: examples (fuzzy)">
    </testcase>
    <testcase name="Search Files: NPE (CamelCase)" time="0.001" classname="Files: NPE (CamelCase)">
    </testcase>
    <testcase name="Search Files: *.*" time="0.002" classname="Files: *.*">
    </testcase>
    <testcase name="Search Files: *.as" time="0.002" classname="Files: *.as">
    </testcase>
    <testcase name="Search Files: *.* without derived" time="0.002" classname="Files: *.* without derived">
    </testcase>
    <testcase name="Search Files: *.* exclude folder without wildcard" time="0.001" classname="Files: *.* exclude folder without wildcard">
    </testcase>
    <testcase name="Search Files: *.* exclude folder with leading wildcard" time="0.001" classname="Files: *.* exclude folder with leading wildcard">
    </testcase>
    <testcase name="Search Files: *.* exclude folder with trailing wildcard" time="0.001" classname="Files: *.* exclude folder with trailing wildcard">
    </testcase>
    <testcase name="Search Files: *.* exclude with unicode" time="0.001" classname="Files: *.* exclude with unicode">
    </testcase>
    <testcase name="Search Files: Unicode and Spaces" time="0.002" classname="Files: Unicode and Spaces">
    </testcase>
    <testcase name="Search Files: no results" time="0.001" classname="Files: no results">
    </testcase>
    <testcase name="Search Files: absolute path to file ignores excludes" time="0.001" classname="Files: absolute path to file ignores excludes">
    </testcase>
    <testcase name="Search Files: relative path matched once" time="0.001" classname="Files: relative path matched once">
    </testcase>
    <testcase name="Search Files: relative path to file ignores excludes" time="0.002" classname="Files: relative path to file ignores excludes">
    </testcase>
    <testcase name="Search Files: Include pattern, single files" time="0.001" classname="Files: Include pattern, single files">
    </testcase>
    <testcase name="Search Files: extraFiles only" time="0" classname="Files: extraFiles only">
    </testcase>
    <testcase name="Search Files: extraFiles only (with include)" time="0" classname="Files: extraFiles only (with include)">
    </testcase>
    <testcase name="Search Files: extraFiles only (with exclude)" time="0.001" classname="Files: extraFiles only (with exclude)">
    </testcase>
    <testcase name="Search Find: exclude subfolder" time="0" classname="Find: exclude subfolder">
    </testcase>
    <testcase name="Search Find: exclude multiple folders" time="0" classname="Find: exclude multiple folders">
    </testcase>
    <testcase name="Search Find: exclude folder path suffix" time="0" classname="Find: exclude folder path suffix">
    </testcase>
    <testcase name="Search Find: exclude subfolder path suffix" time="0" classname="Find: exclude subfolder path suffix">
    </testcase>
    <testcase name="Search Find: exclude folder path" time="0" classname="Find: exclude folder path">
    </testcase>
    <testcase name="Search Find: exclude combination of paths" time="0" classname="Find: exclude combination of paths">
    </testcase>
    <testcase name="Search Text: GameOfLife" time="0.369" classname="Text: GameOfLife">
    </testcase>
    <testcase name="Search Text: GameOfLife (RegExp)" time="0.01" classname="Text: GameOfLife (RegExp)">
    </testcase>
    <testcase name="Search Text: GameOfLife (Word Match, Case Sensitive)" time="0.007" classname="Text: GameOfLife (Word Match, Case Sensitive)">
    </testcase>
    <testcase name="Search Text: Helvetica (UTF 16)" time="0.005" classname="Text: Helvetica (UTF 16)">
    </testcase>
    <testcase name="Search Text: e" time="0.015" classname="Text: e">
    </testcase>
    <testcase name="Search Text: e (with excludes)" time="0.006" classname="Text: e (with excludes)">
    </testcase>
    <testcase name="Search Text: e (with includes)" time="0.009" classname="Text: e (with includes)">
    </testcase>
    <testcase name="Search Text: e (with includes and exclude)" time="0.009" classname="Text: e (with includes and exclude)">
    </testcase>
    <testcase name="Search Text: a (capped)" time="0.014" classname="Text: a (capped)">
    </testcase>
    <testcase name="Search Text: a (no results)" time="0.009" classname="Text: a (no results)">
    </testcase>
  </testsuite>
  <testsuite name="SearchService" timestamp="2017-02-22T23:10:16" tests="6" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.005">
    <testcase name="SearchService Individual results" time="0.001" classname="Individual results">
    </testcase>
    <testcase name="SearchService Batch results" time="0" classname="Batch results">
    </testcase>
    <testcase name="SearchService Collect batched results" time="0.001" classname="Collect batched results">
    </testcase>
    <testcase name="SearchService Sorted results" time="0.001" classname="Sorted results">
    </testcase>
    <testcase name="SearchService Sorted result batches" time="0.001" classname="Sorted result batches">
    </testcase>
    <testcase name="SearchService Cached results" time="0.001" classname="Cached results">
    </testcase>
  </testsuite>
  <testsuite name="Workbench - EditorInput" timestamp="2017-02-22T23:10:16" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Workbench - EditorInput EditorInput" time="0.001" classname="EditorInput">
    </testcase>
    <testcase name="Workbench - EditorInput DiffEditorInput" time="0" classname="DiffEditorInput">
    </testcase>
    <testcase name="Workbench - EditorInput DiffEditorInput disposes when input inside disposes" time="0" classname="DiffEditorInput disposes when input inside disposes">
    </testcase>
  </testsuite>
  <testsuite name="MainThreadCommands" timestamp="2017-02-22T23:10:16" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="MainThreadCommands dispose on unregister" time="0" classname="dispose on unregister">
    </testcase>
  </testsuite>
  <testsuite name="ExtHostDocument" timestamp="2017-02-22T23:10:16" tests="10" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="ExtHostDocument readonly-ness" time="0" classname="readonly-ness">
    </testcase>
    <testcase name="ExtHostDocument lines" time="0.001" classname="lines">
    </testcase>
    <testcase name="ExtHostDocument line, issue #5704" time="0" classname="line, issue #5704">
    </testcase>
    <testcase name="ExtHostDocument offsetAt" time="0.001" classname="offsetAt">
    </testcase>
    <testcase name="ExtHostDocument offsetAt, after remove" time="0" classname="offsetAt, after remove">
    </testcase>
    <testcase name="ExtHostDocument offsetAt, after replace" time="0" classname="offsetAt, after replace">
    </testcase>
    <testcase name="ExtHostDocument offsetAt, after insert line" time="0" classname="offsetAt, after insert line">
    </testcase>
    <testcase name="ExtHostDocument offsetAt, after remove line" time="0" classname="offsetAt, after remove line">
    </testcase>
    <testcase name="ExtHostDocument positionAt" time="0" classname="positionAt">
    </testcase>
    <testcase name="ExtHostDocument getWordRangeAtPosition" time="0.001" classname="getWordRangeAtPosition">
    </testcase>
  </testsuite>
  <testsuite name="ExtHostDocument updates line mapping" timestamp="2017-02-22T23:10:16" tests="11" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.013000000000000001">
    <testcase name="ExtHostDocument updates line mapping line mapping" time="0.002" classname="line mapping">
    </testcase>
    <testcase name="ExtHostDocument updates line mapping after remove" time="0.002" classname="after remove">
    </testcase>
    <testcase name="ExtHostDocument updates line mapping after replace" time="0.001" classname="after replace">
    </testcase>
    <testcase name="ExtHostDocument updates line mapping after insert line" time="0.002" classname="after insert line">
    </testcase>
    <testcase name="ExtHostDocument updates line mapping after insert two lines" time="0.001" classname="after insert two lines">
    </testcase>
    <testcase name="ExtHostDocument updates line mapping after remove line" time="0.001" classname="after remove line">
    </testcase>
    <testcase name="ExtHostDocument updates line mapping after remove two lines" time="0" classname="after remove two lines">
    </testcase>
    <testcase name="ExtHostDocument updates line mapping after deleting entire content" time="0.001" classname="after deleting entire content">
    </testcase>
    <testcase name="ExtHostDocument updates line mapping after replacing entire content" time="0" classname="after replacing entire content">
    </testcase>
    <testcase name="ExtHostDocument updates line mapping after changing EOL to CRLF" time="0.002" classname="after changing EOL to CRLF">
    </testcase>
    <testcase name="ExtHostDocument updates line mapping after changing EOL to LF" time="0.001" classname="after changing EOL to LF">
    </testcase>
  </testsuite>
  <testsuite name="ExtHostDocumentSaveParticipant" timestamp="2017-02-22T23:10:16" tests="15" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.067">
    <testcase name="ExtHostDocumentSaveParticipant no listeners, no problem" time="0.001" classname="no listeners, no problem">
    </testcase>
    <testcase name="ExtHostDocumentSaveParticipant event delivery" time="0.001" classname="event delivery">
    </testcase>
    <testcase name="ExtHostDocumentSaveParticipant event delivery, immutable" time="0" classname="event delivery, immutable">
    </testcase>
    <testcase name="ExtHostDocumentSaveParticipant event delivery, bad listener" time="0.001" classname="event delivery, bad listener">
    </testcase>
    <testcase name="ExtHostDocumentSaveParticipant event delivery, bad listener doesn&apos;t prevent more events" time="0" classname="event delivery, bad listener doesn&apos;t prevent more events">
    </testcase>
    <testcase name="ExtHostDocumentSaveParticipant event delivery, in subscriber order" time="0" classname="event delivery, in subscriber order">
    </testcase>
    <testcase name="ExtHostDocumentSaveParticipant event delivery, ignore bad listeners" time="0" classname="event delivery, ignore bad listeners">
    </testcase>
    <testcase name="ExtHostDocumentSaveParticipant event delivery, overall timeout" time="0.036" classname="event delivery, overall timeout">
    </testcase>
    <testcase name="ExtHostDocumentSaveParticipant event delivery, waitUntil" time="0.011" classname="event delivery, waitUntil">
    </testcase>
    <testcase name="ExtHostDocumentSaveParticipant event delivery, waitUntil must be called sync" time="0.011" classname="event delivery, waitUntil must be called sync">
    </testcase>
    <testcase name="ExtHostDocumentSaveParticipant event delivery, waitUntil will timeout" time="0.005" classname="event delivery, waitUntil will timeout">
    </testcase>
    <testcase name="ExtHostDocumentSaveParticipant event delivery, waitUntil failure handling" time="0" classname="event delivery, waitUntil failure handling">
    </testcase>
    <testcase name="ExtHostDocumentSaveParticipant event delivery, pushEdits sync" time="0" classname="event delivery, pushEdits sync">
    </testcase>
    <testcase name="ExtHostDocumentSaveParticipant event delivery, concurrent change" time="0.001" classname="event delivery, concurrent change">
    </testcase>
    <testcase name="ExtHostDocumentSaveParticipant event delivery, two listeners -&gt; two document states" time="0" classname="event delivery, two listeners -&gt; two document states">
    </testcase>
  </testsuite>
  <testsuite name="ExtHostCommands" timestamp="2017-02-22T23:10:17" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="ExtHostCommands dispose calls unregister" time="0.001" classname="dispose calls unregister">
    </testcase>
    <testcase name="ExtHostCommands dispose bubbles only once" time="0" classname="dispose bubbles only once">
    </testcase>
  </testsuite>
  <testsuite name="ExtHostTextEditorOptions" timestamp="2017-02-22T23:10:17" tests="22" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="ExtHostTextEditorOptions can set tabSize to the same value" time="0" classname="can set tabSize to the same value">
    </testcase>
    <testcase name="ExtHostTextEditorOptions can change tabSize to positive integer" time="0" classname="can change tabSize to positive integer">
    </testcase>
    <testcase name="ExtHostTextEditorOptions can change tabSize to positive float" time="0" classname="can change tabSize to positive float">
    </testcase>
    <testcase name="ExtHostTextEditorOptions can change tabSize to a string number" time="0" classname="can change tabSize to a string number">
    </testcase>
    <testcase name="ExtHostTextEditorOptions tabSize can request indentation detection" time="0" classname="tabSize can request indentation detection">
    </testcase>
    <testcase name="ExtHostTextEditorOptions ignores invalid tabSize 1" time="0" classname="ignores invalid tabSize 1">
    </testcase>
    <testcase name="ExtHostTextEditorOptions ignores invalid tabSize 2" time="0" classname="ignores invalid tabSize 2">
    </testcase>
    <testcase name="ExtHostTextEditorOptions ignores invalid tabSize 3" time="0" classname="ignores invalid tabSize 3">
    </testcase>
    <testcase name="ExtHostTextEditorOptions ignores invalid tabSize 4" time="0" classname="ignores invalid tabSize 4">
    </testcase>
    <testcase name="ExtHostTextEditorOptions can set insertSpaces to the same value" time="0" classname="can set insertSpaces to the same value">
    </testcase>
    <testcase name="ExtHostTextEditorOptions can set insertSpaces to boolean" time="0" classname="can set insertSpaces to boolean">
    </testcase>
    <testcase name="ExtHostTextEditorOptions can set insertSpaces to false string" time="0" classname="can set insertSpaces to false string">
    </testcase>
    <testcase name="ExtHostTextEditorOptions can set insertSpaces to truey" time="0" classname="can set insertSpaces to truey">
    </testcase>
    <testcase name="ExtHostTextEditorOptions insertSpaces can request indentation detection" time="0" classname="insertSpaces can request indentation detection">
    </testcase>
    <testcase name="ExtHostTextEditorOptions can set cursorStyle to same value" time="0" classname="can set cursorStyle to same value">
    </testcase>
    <testcase name="ExtHostTextEditorOptions can change cursorStyle" time="0" classname="can change cursorStyle">
    </testcase>
    <testcase name="ExtHostTextEditorOptions can set lineNumbers to same value" time="0" classname="can set lineNumbers to same value">
    </testcase>
    <testcase name="ExtHostTextEditorOptions can change lineNumbers" time="0" classname="can change lineNumbers">
    </testcase>
    <testcase name="ExtHostTextEditorOptions can do bulk updates 0" time="0.001" classname="can do bulk updates 0">
    </testcase>
    <testcase name="ExtHostTextEditorOptions can do bulk updates 1" time="0" classname="can do bulk updates 1">
    </testcase>
    <testcase name="ExtHostTextEditorOptions can do bulk updates 2" time="0" classname="can do bulk updates 2">
    </testcase>
    <testcase name="ExtHostTextEditorOptions can do bulk updates 3" time="0" classname="can do bulk updates 3">
    </testcase>
  </testsuite>
  <testsuite name="ExtHostWorkspace" timestamp="2017-02-22T23:10:17" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="ExtHostWorkspace asRelativePath" time="0.001" classname="asRelativePath">
    </testcase>
    <testcase name="ExtHostWorkspace asRelativePath, same paths, #11402" time="0" classname="asRelativePath, same paths, #11402">
    </testcase>
  </testsuite>
  <testsuite name="Telemetry - common properties" timestamp="2017-02-22T23:10:17" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.6709999999999999">
    <testcase name="Telemetry - common properties default" time="0.243" classname="default">
    </testcase>
    <testcase name="Telemetry - common properties lastSessionDate when aviablale" time="0.211" classname="lastSessionDate when aviablale">
    </testcase>
    <testcase name="Telemetry - common properties values chance on ask" time="0.217" classname="values chance on ask">
    </testcase>
  </testsuite>
  <testsuite name="dom" timestamp="2017-02-22T23:10:17" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="dom hasClass" time="0.001" classname="hasClass">
    </testcase>
    <testcase name="dom removeClass" time="0" classname="removeClass">
    </testcase>
    <testcase name="dom removeClass should consider hyphens" time="0.001" classname="removeClass should consider hyphens">
    </testcase>
    <testcase name="dom safeStringify" time="0" classname="safeStringify">
    </testcase>
    <testcase name="dom safeStringify2" time="0" classname="safeStringify2">
    </testcase>
  </testsuite>
  <testsuite name="$" timestamp="2017-02-22T23:10:17" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="dom $ should build simple nodes" time="0" classname="should build simple nodes">
    </testcase>
    <testcase name="dom $ should build nodes with attributes" time="0" classname="should build nodes with attributes">
    </testcase>
    <testcase name="dom $ should build nodes with children" time="0.001" classname="should build nodes with children">
    </testcase>
  </testsuite>
  <testsuite name="TreeModel" timestamp="2017-02-22T23:10:17" tests="11" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.007">
    <testcase name="TreeModel setInput, getInput" time="0.002" classname="setInput, getInput">
    </testcase>
    <testcase name="TreeModel refresh() refreshes all" time="0.001" classname="refresh() refreshes all">
    </testcase>
    <testcase name="TreeModel refresh(root) refreshes all" time="0" classname="refresh(root) refreshes all">
    </testcase>
    <testcase name="TreeModel refresh(root, false) refreshes the root" time="0" classname="refresh(root, false) refreshes the root">
    </testcase>
    <testcase name="TreeModel refresh(collapsed element) does not refresh descendants" time="0" classname="refresh(collapsed element) does not refresh descendants">
    </testcase>
    <testcase name="TreeModel refresh(expanded element) refreshes the element and descendants" time="0.001" classname="refresh(expanded element) refreshes the element and descendants">
    </testcase>
    <testcase name="TreeModel refresh(element, false) refreshes the element" time="0" classname="refresh(element, false) refreshes the element">
    </testcase>
    <testcase name="TreeModel refreshAll(...) refreshes the elements and descendants" time="0.001" classname="refreshAll(...) refreshes the elements and descendants">
    </testcase>
    <testcase name="TreeModel refreshAll(..., false) refreshes the elements" time="0.001" classname="refreshAll(..., false) refreshes the elements">
    </testcase>
    <testcase name="TreeModel depths" time="0" classname="depths">
    </testcase>
    <testcase name="TreeModel intersections" time="0.001" classname="intersections">
    </testcase>
  </testsuite>
  <testsuite name="TreeModel - TreeNavigator" timestamp="2017-02-22T23:10:17" tests="11" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.004">
    <testcase name="TreeModel - TreeNavigator next()" time="0" classname="next()">
    </testcase>
    <testcase name="TreeModel - TreeNavigator previous()" time="0" classname="previous()">
    </testcase>
    <testcase name="TreeModel - TreeNavigator parent()" time="0.001" classname="parent()">
    </testcase>
    <testcase name="TreeModel - TreeNavigator next() - scoped" time="0" classname="next() - scoped">
    </testcase>
    <testcase name="TreeModel - TreeNavigator previous() - scoped" time="0.001" classname="previous() - scoped">
    </testcase>
    <testcase name="TreeModel - TreeNavigator parent() - scoped" time="0" classname="parent() - scoped">
    </testcase>
    <testcase name="TreeModel - TreeNavigator next() - non sub tree only" time="0.001" classname="next() - non sub tree only">
    </testcase>
    <testcase name="TreeModel - TreeNavigator previous() - non sub tree only" time="0" classname="previous() - non sub tree only">
    </testcase>
    <testcase name="TreeModel - TreeNavigator parent() - non sub tree only" time="0" classname="parent() - non sub tree only">
    </testcase>
    <testcase name="TreeModel - TreeNavigator deep next() - scoped" time="0.001" classname="deep next() - scoped">
    </testcase>
    <testcase name="TreeModel - TreeNavigator deep previous() - scoped" time="0" classname="deep previous() - scoped">
    </testcase>
  </testsuite>
  <testsuite name="TreeModel - Expansion" timestamp="2017-02-22T23:10:17" tests="6" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="TreeModel - Expansion collapse, expand" time="0.001" classname="collapse, expand">
    </testcase>
    <testcase name="TreeModel - Expansion toggleExpansion" time="0.001" classname="toggleExpansion">
    </testcase>
    <testcase name="TreeModel - Expansion collapseAll" time="0" classname="collapseAll">
    </testcase>
    <testcase name="TreeModel - Expansion auto expand single child folders" time="0.001" classname="auto expand single child folders">
    </testcase>
    <testcase name="TreeModel - Expansion expand can trigger refresh" time="0" classname="expand can trigger refresh">
    </testcase>
    <testcase name="TreeModel - Expansion top level collapsed" time="0" classname="top level collapsed">
    </testcase>
  </testsuite>
  <testsuite name="TreeModel - Filter" timestamp="2017-02-22T23:10:17" tests="7" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="TreeModel - Filter no filter" time="0" classname="no filter">
    </testcase>
    <testcase name="TreeModel - Filter filter all" time="0" classname="filter all">
    </testcase>
    <testcase name="TreeModel - Filter simple filter" time="0" classname="simple filter">
    </testcase>
    <testcase name="TreeModel - Filter simple filter 2" time="0.001" classname="simple filter 2">
    </testcase>
    <testcase name="TreeModel - Filter simple filter, opposite" time="0" classname="simple filter, opposite">
    </testcase>
    <testcase name="TreeModel - Filter simple filter, mischieving" time="0" classname="simple filter, mischieving">
    </testcase>
    <testcase name="TreeModel - Filter simple filter &amp; previous" time="0" classname="simple filter &amp; previous">
    </testcase>
  </testsuite>
  <testsuite name="TreeModel - Traits" timestamp="2017-02-22T23:10:17" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="TreeModel - Traits Selection" time="0.002" classname="Selection">
    </testcase>
    <testcase name="TreeModel - Traits Focus" time="0" classname="Focus">
    </testcase>
    <testcase name="TreeModel - Traits Highlight" time="0.001" classname="Highlight">
    </testcase>
  </testsuite>
  <testsuite name="TreeModel - Dynamic data model" timestamp="2017-02-22T23:10:17" tests="12" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.009000000000000001">
    <testcase name="TreeModel - Dynamic data model items get property disposed" time="0.001" classname="items get property disposed">
    </testcase>
    <testcase name="TreeModel - Dynamic data model addChild, removeChild, collapse" time="0.001" classname="addChild, removeChild, collapse">
    </testcase>
    <testcase name="TreeModel - Dynamic data model move" time="0" classname="move">
    </testcase>
    <testcase name="TreeModel - Dynamic data model refreshing grandfather recursively should not refresh collapsed father&apos;s children immediately" time="0.001" classname="refreshing grandfather recursively should not refresh collapsed father&apos;s children immediately">
    </testcase>
    <testcase name="TreeModel - Dynamic data model simultaneously refreshing two disjoint elements should parallelize the refreshes" time="0.001" classname="simultaneously refreshing two disjoint elements should parallelize the refreshes">
    </testcase>
    <testcase name="TreeModel - Dynamic data model simultaneously recursively refreshing two intersecting elements should concatenate the refreshes - ancestor first" time="0.001" classname="simultaneously recursively refreshing two intersecting elements should concatenate the refreshes - ancestor first">
    </testcase>
    <testcase name="TreeModel - Dynamic data model simultaneously recursively refreshing two intersecting elements should concatenate the refreshes - ancestor second" time="0.001" classname="simultaneously recursively refreshing two intersecting elements should concatenate the refreshes - ancestor second">
    </testcase>
    <testcase name="TreeModel - Dynamic data model refreshing an empty element that adds children should still keep it collapsed" time="0" classname="refreshing an empty element that adds children should still keep it collapsed">
    </testcase>
    <testcase name="TreeModel - Dynamic data model refreshing a collapsed element that adds children should still keep it collapsed" time="0.001" classname="refreshing a collapsed element that adds children should still keep it collapsed">
    </testcase>
    <testcase name="TreeModel - Dynamic data model recursively refreshing an ancestor of an expanded element, should keep that element expanded" time="0.001" classname="recursively refreshing an ancestor of an expanded element, should keep that element expanded">
    </testcase>
    <testcase name="TreeModel - Dynamic data model recursively refreshing an ancestor of a collapsed element, should keep that element collapsed" time="0" classname="recursively refreshing an ancestor of a collapsed element, should keep that element collapsed">
    </testcase>
    <testcase name="TreeModel - Dynamic data model Bug 10855:[explorer] quickly deleting things causes NPE in tree - intersectsLock should always be called when trying to unlock" time="0.001" classname="Bug 10855:[explorer] quickly deleting things causes NPE in tree - intersectsLock should always be called when trying to unlock">
    </testcase>
  </testsuite>
  <testsuite name="TreeModel - bugs" timestamp="2017-02-22T23:10:17" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.011">
    <testcase name="TreeModel - bugs Bug 10566:[tree] build viewlet is broken after some time" time="0.011" classname="Bug 10566:[tree] build viewlet is broken after some time">
    </testcase>
  </testsuite>
  <testsuite name="HighlightedLabel" timestamp="2017-02-22T23:10:17" tests="7" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.007">
    <testcase name="HighlightedLabel empty label" time="0.001" classname="empty label">
    </testcase>
    <testcase name="HighlightedLabel no decorations" time="0.003" classname="no decorations">
    </testcase>
    <testcase name="HighlightedLabel escape html" time="0.001" classname="escape html">
    </testcase>
    <testcase name="HighlightedLabel everything highlighted" time="0.001" classname="everything highlighted">
    </testcase>
    <testcase name="HighlightedLabel beginning highlighted" time="0" classname="beginning highlighted">
    </testcase>
    <testcase name="HighlightedLabel ending highlighted" time="0.001" classname="ending highlighted">
    </testcase>
    <testcase name="HighlightedLabel middle highlighted" time="0" classname="middle highlighted">
    </testcase>
  </testsuite>
  <testsuite name="Builder" timestamp="2017-02-22T23:10:17" tests="66" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.14400000000000004">
    <testcase name="Builder Dimension.substract()" time="0" classname="Dimension.substract()">
    </testcase>
    <testcase name="Builder Position" time="0" classname="Position">
    </testcase>
    <testcase name="Builder Binding" time="0" classname="Binding">
    </testcase>
    <testcase name="Builder Select" time="0.007" classname="Select">
    </testcase>
    <testcase name="Builder Build.withElement()" time="0.001" classname="Build.withElement()">
    </testcase>
    <testcase name="Builder Build.withBuilder()" time="0" classname="Build.withBuilder()">
    </testcase>
    <testcase name="Builder Build.withBuilder() - Multibuilder" time="0.001" classname="Build.withBuilder() - Multibuilder">
    </testcase>
    <testcase name="Builder Build.offDOM()" time="0.001" classname="Build.offDOM()">
    </testcase>
    <testcase name="Builder Build.withElementById()" time="0" classname="Build.withElementById()">
    </testcase>
    <testcase name="Builder withElementsBySelector()" time="0" classname="withElementsBySelector()">
    </testcase>
    <testcase name="Builder Off DOM withElementById and container passed in" time="0.001" classname="Off DOM withElementById and container passed in">
    </testcase>
    <testcase name="Builder Off DOM withSelector and container passed in" time="0" classname="Off DOM withSelector and container passed in">
    </testcase>
    <testcase name="Builder Builder.build() with index specified" time="0.002" classname="Builder.build() with index specified">
    </testcase>
    <testcase name="Builder Builder.asContainer()" time="0" classname="Builder.asContainer()">
    </testcase>
    <testcase name="Builder Builder.clone()" time="0" classname="Builder.clone()">
    </testcase>
    <testcase name="Builder Builder.and() with 2 Builders" time="0.001" classname="Builder.and() with 2 Builders">
    </testcase>
    <testcase name="Builder Builder.and() with HTMLElement" time="0" classname="Builder.and() with HTMLElement">
    </testcase>
    <testcase name="Builder Builder.and() with MultiBuilder" time="0.001" classname="Builder.and() with MultiBuilder">
    </testcase>
    <testcase name="Builder Builder.and() with two MultiBuilders" time="0.005" classname="Builder.and() with two MultiBuilders">
    </testcase>
    <testcase name="Builder Builder.and() with MultiBuilder and HTMLElement" time="0.001" classname="Builder.and() with MultiBuilder and HTMLElement">
    </testcase>
    <testcase name="Builder Builder Multibuilder fn call that returns Multibuilder" time="0.001" classname="Builder Multibuilder fn call that returns Multibuilder">
    </testcase>
    <testcase name="Builder Builder.p() and other elements" time="0.002" classname="Builder.p() and other elements">
    </testcase>
    <testcase name="Builder Builder.p() and other elements" time="0.001" classname="Builder.p() and other elements">
    </testcase>
    <testcase name="Builder Builder.attr()" time="0.002" classname="Builder.attr()">
    </testcase>
    <testcase name="Builder Builder.style()" time="0" classname="Builder.style()">
    </testcase>
    <testcase name="Builder Builder.style() as object literal" time="0.001" classname="Builder.style() as object literal">
    </testcase>
    <testcase name="Builder Builder.attributes" time="0.005" classname="Builder.attributes">
    </testcase>
    <testcase name="Builder Builder.addClass() and Co" time="0.002" classname="Builder.addClass() and Co">
    </testcase>
    <testcase name="Builder Builder.color() and .background()" time="0.001" classname="Builder.color() and .background()">
    </testcase>
    <testcase name="Builder Builder.padding() and .margin()" time="0.001" classname="Builder.padding() and .margin()">
    </testcase>
    <testcase name="Builder Builder.position()" time="0" classname="Builder.position()">
    </testcase>
    <testcase name="Builder Builder.size(), .minSize() and .maxSize()" time="0" classname="Builder.size(), .minSize() and .maxSize()">
    </testcase>
    <testcase name="Builder Builder.float() and .clear()" time="0" classname="Builder.float() and .clear()">
    </testcase>
    <testcase name="Builder Builder.normal(), .italic(), .bold() and underline()" time="0" classname="Builder.normal(), .italic(), .bold() and underline()">
    </testcase>
    <testcase name="Builder Builder.display() and .overflow()" time="0.001" classname="Builder.display() and .overflow()">
    </testcase>
    <testcase name="Builder Builder.show() and .hide()" time="0.002" classname="Builder.show() and .hide()">
    </testcase>
    <testcase name="Builder Builder.showDelayed()" time="0.031" classname="Builder.showDelayed()">
    </testcase>
    <testcase name="Builder Builder.showDelayed() but interrupted" time="0.031" classname="Builder.showDelayed() but interrupted">
    </testcase>
    <testcase name="Builder Builder.border(), .borderTop(), .borderBottom(), .borderLeft(), .borderRight()" time="0.005" classname="Builder.border(), .borderTop(), .borderBottom(), .borderLeft(), .borderRight()">
    </testcase>
    <testcase name="Builder Builder.textAlign() and .verticalAlign()" time="0.001" classname="Builder.textAlign() and .verticalAlign()">
    </testcase>
    <testcase name="Builder Builder.innerHtml()" time="0.002" classname="Builder.innerHtml()">
    </testcase>
    <testcase name="Builder Builder.safeInnerHtml()" time="0.001" classname="Builder.safeInnerHtml()">
    </testcase>
    <testcase name="Builder Builder.parent(), .children(), .removeChild() and isEmpty()" time="0.002" classname="Builder.parent(), .children(), .removeChild() and isEmpty()">
    </testcase>
    <testcase name="Builder Build Client Area" time="0.001" classname="Build Client Area">
    </testcase>
    <testcase name="Builder Builder.select() and .matches()" time="0.001" classname="Builder.select() and .matches()">
    </testcase>
    <testcase name="Builder Builder.preventDefault()" time="0.003" classname="Builder.preventDefault()">
    </testcase>
    <testcase name="Builder Builder.once()" time="0.001" classname="Builder.once()">
    </testcase>
    <testcase name="Builder Builder.once() with capture" time="0" classname="Builder.once() with capture">
    </testcase>
    <testcase name="Builder Builder.on() and .off()" time="0" classname="Builder.on() and .off()">
    </testcase>
    <testcase name="Builder Builder.on() and .off() with capture" time="0" classname="Builder.on() and .off() with capture">
    </testcase>
    <testcase name="Builder Builder.empty()" time="0.008" classname="Builder.empty()">
    </testcase>
    <testcase name="Builder Builder.empty() cleans all listeners" time="0.002" classname="Builder.empty() cleans all listeners">
    </testcase>
    <testcase name="Builder Builder.destroy()" time="0.005" classname="Builder.destroy()">
    </testcase>
    <testcase name="Builder Builder.destroy() cleans all listeners" time="0.001" classname="Builder.destroy() cleans all listeners">
    </testcase>
    <testcase name="Builder Builder.empty() MultiBuilder" time="0.002" classname="Builder.empty() MultiBuilder">
    </testcase>
    <testcase name="Builder Builder .domFocus(), .domBlur(), .hasFocus()" time="0.001" classname="Builder .domFocus(), .domBlur(), .hasFocus()">
    </testcase>
    <testcase name="Builder Builder misc" time="0" classname="Builder misc">
    </testcase>
    <testcase name="Builder Builder.offDOM()" time="0" classname="Builder.offDOM()">
    </testcase>
    <testcase name="Builder $ - selector construction" time="0.003" classname="$ - selector construction">
    </testcase>
    <testcase name="Builder $ - wrap elements and builders" time="0" classname="$ - wrap elements and builders">
    </testcase>
    <testcase name="Builder $ - delegate to #element" time="0" classname="$ - delegate to #element">
    </testcase>
    <testcase name="Builder $ - html" time="0.001" classname="$ - html">
    </testcase>
    <testcase name="Builder $ - multiple html tags" time="0" classname="$ - multiple html tags">
    </testcase>
    <testcase name="Builder $ - html format" time="0" classname="$ - html format">
    </testcase>
    <testcase name="Builder $ - exceptions" time="0" classname="$ - exceptions">
    </testcase>
    <testcase name="Builder $ - appendTo, append" time="0.002" classname="$ - appendTo, append">
    </testcase>
  </testsuite>
  <testsuite name="Workbench Part" timestamp="2017-02-22T23:10:17" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Workbench Part Creation" time="0.001" classname="Creation">
    </testcase>
    <testcase name="Workbench Part Part Layout with Title and Content" time="0" classname="Part Layout with Title and Content">
    </testcase>
    <testcase name="Workbench Part Part Layout with Content only" time="0" classname="Part Layout with Content only">
    </testcase>
  </testsuite>
  <testsuite name="HtmlContent" timestamp="2017-02-22T23:10:17" tests="18" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.010000000000000002">
    <testcase name="HtmlContent render text" time="0" classname="render text">
    </testcase>
    <testcase name="HtmlContent cannot render script tag" time="0" classname="cannot render script tag">
    </testcase>
    <testcase name="HtmlContent render simple element" time="0" classname="render simple element">
    </testcase>
    <testcase name="HtmlContent render element with class" time="0" classname="render element with class">
    </testcase>
    <testcase name="HtmlContent render element with style" time="0" classname="render element with style">
    </testcase>
    <testcase name="HtmlContent render element with custom style" time="0.001" classname="render element with custom style">
    </testcase>
    <testcase name="HtmlContent render element with children" time="0" classname="render element with children">
    </testcase>
    <testcase name="HtmlContent simple formatting" time="0.001" classname="simple formatting">
    </testcase>
    <testcase name="HtmlContent no formatting" time="0" classname="no formatting">
    </testcase>
    <testcase name="HtmlContent preserve newlines" time="0" classname="preserve newlines">
    </testcase>
    <testcase name="HtmlContent action" time="0" classname="action">
    </testcase>
    <testcase name="HtmlContent fancy action" time="0.001" classname="fancy action">
    </testcase>
    <testcase name="HtmlContent escaped formatting" time="0" classname="escaped formatting">
    </testcase>
    <testcase name="HtmlContent image rendering conforms to default" time="0.004" classname="image rendering conforms to default">
    </testcase>
    <testcase name="HtmlContent image rendering conforms to default without title" time="0" classname="image rendering conforms to default without title">
    </testcase>
    <testcase name="HtmlContent image width from title params" time="0.001" classname="image width from title params">
    </testcase>
    <testcase name="HtmlContent image height from title params" time="0.001" classname="image height from title params">
    </testcase>
    <testcase name="HtmlContent image width and height from title params" time="0.001" classname="image width and height from title params">
    </testcase>
  </testsuite>
  <testsuite name="ProgressBar" timestamp="2017-02-22T23:10:17" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="ProgressBar Progress Bar" time="0.002" classname="Progress Bar">
    </testcase>
  </testsuite>
  <testsuite name="Browser Services - EditorLayoutProvider" timestamp="2017-02-22T23:10:17" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.005">
    <testcase name="Browser Services - EditorLayoutProvider register and resolve decoration type" time="0.003" classname="register and resolve decoration type">
    </testcase>
    <testcase name="Browser Services - EditorLayoutProvider remove decoration type" time="0.001" classname="remove decoration type">
    </testcase>
    <testcase name="Browser Services - EditorLayoutProvider css properties" time="0.001" classname="css properties">
    </testcase>
    <testcase name="Browser Services - EditorLayoutProvider css properties, gutterIconPaths" time="0" classname="css properties, gutterIconPaths">
    </testcase>
  </testsuite>
  <testsuite name="StandaloneKeybindingService" timestamp="2017-02-22T23:10:17" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.005">
    <testcase name="StandaloneKeybindingService issue Microsoft/monaco-editor#167" time="0.005" classname="issue Microsoft/monaco-editor#167">
    </testcase>
  </testsuite>
  <testsuite name="RenderedLinesCollection onModelLinesDeleted" timestamp="2017-02-22T23:10:17" tests="31" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="RenderedLinesCollection onModelLinesDeleted A1" time="0.001" classname="A1">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted A2" time="0" classname="A2">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted A3" time="0" classname="A3">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted A4" time="0" classname="A4">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted A5" time="0" classname="A5">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted A6" time="0" classname="A6">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted A7" time="0" classname="A7">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted A8" time="0" classname="A8">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted B1" time="0" classname="B1">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted B2" time="0" classname="B2">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted B3" time="0" classname="B3">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted B4" time="0" classname="B4">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted B5" time="0" classname="B5">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted B6" time="0" classname="B6">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted C1" time="0" classname="C1">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted C2" time="0" classname="C2">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted C3" time="0" classname="C3">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted C4" time="0.001" classname="C4">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted C5" time="0" classname="C5">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted D1" time="0" classname="D1">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted D2" time="0" classname="D2">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted D3" time="0" classname="D3">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted D4" time="0" classname="D4">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted E1" time="0" classname="E1">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted E2" time="0" classname="E2">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted E3" time="0" classname="E3">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted F1" time="0" classname="F1">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted F2" time="0" classname="F2">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted G1" time="0" classname="G1">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted G2" time="0" classname="G2">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesDeleted H1" time="0" classname="H1">
    </testcase>
  </testsuite>
  <testsuite name="RenderedLinesCollection onModelLineChanged" timestamp="2017-02-22T23:10:17" tests="9" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="RenderedLinesCollection onModelLineChanged 3" time="0" classname="3">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLineChanged 4" time="0" classname="4">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLineChanged 5" time="0" classname="5">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLineChanged 6" time="0" classname="6">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLineChanged 7" time="0" classname="7">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLineChanged 8" time="0.001" classname="8">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLineChanged 9" time="0" classname="9">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLineChanged 10" time="0" classname="10">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLineChanged 11" time="0" classname="11">
    </testcase>
  </testsuite>
  <testsuite name="RenderedLinesCollection onModelLinesInserted" timestamp="2017-02-22T23:10:17" tests="31" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="RenderedLinesCollection onModelLinesInserted A1" time="0" classname="A1">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted A2" time="0" classname="A2">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted A3" time="0" classname="A3">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted A4" time="0" classname="A4">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted A5" time="0" classname="A5">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted A6" time="0" classname="A6">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted A7" time="0" classname="A7">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted A8" time="0" classname="A8">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted B1" time="0" classname="B1">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted B2" time="0" classname="B2">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted B3" time="0" classname="B3">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted B4" time="0" classname="B4">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted B5" time="0" classname="B5">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted B6" time="0" classname="B6">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted C1" time="0" classname="C1">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted C2" time="0.001" classname="C2">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted C3" time="0" classname="C3">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted C4" time="0" classname="C4">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted C5" time="0" classname="C5">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted D1" time="0" classname="D1">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted D2" time="0" classname="D2">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted D3" time="0" classname="D3">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted D4" time="0" classname="D4">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted E1" time="0" classname="E1">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted E2" time="0" classname="E2">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted E3" time="0" classname="E3">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted F1" time="0" classname="F1">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted F2" time="0" classname="F2">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted G1" time="0" classname="G1">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted G2" time="0" classname="G2">
    </testcase>
    <testcase name="RenderedLinesCollection onModelLinesInserted H1" time="0" classname="H1">
    </testcase>
  </testsuite>
  <testsuite name="RenderedLinesCollection onModelTokensChanged" timestamp="2017-02-22T23:10:17" tests="9" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="RenderedLinesCollection onModelTokensChanged A" time="0" classname="A">
    </testcase>
    <testcase name="RenderedLinesCollection onModelTokensChanged B" time="0" classname="B">
    </testcase>
    <testcase name="RenderedLinesCollection onModelTokensChanged C" time="0" classname="C">
    </testcase>
    <testcase name="RenderedLinesCollection onModelTokensChanged D" time="0" classname="D">
    </testcase>
    <testcase name="RenderedLinesCollection onModelTokensChanged E" time="0" classname="E">
    </testcase>
    <testcase name="RenderedLinesCollection onModelTokensChanged F" time="0" classname="F">
    </testcase>
    <testcase name="RenderedLinesCollection onModelTokensChanged G" time="0" classname="G">
    </testcase>
    <testcase name="RenderedLinesCollection onModelTokensChanged H" time="0" classname="H">
    </testcase>
    <testcase name="RenderedLinesCollection onModelTokensChanged I" time="0" classname="I">
    </testcase>
  </testsuite>
  <testsuite name="Workbench - TerminalService" timestamp="2017-02-22T23:10:17" tests="0" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
  </testsuite>
  <testsuite name="createInstance" timestamp="2017-02-22T23:10:17" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.015">
    <testcase name="Workbench - TerminalService createInstance should return the new instance" time="0.004" classname="should return the new instance">
    </testcase>
    <testcase name="Workbench - TerminalService createInstance should register the new instance on the service" time="0.003" classname="should register the new instance on the service">
    </testcase>
    <testcase name="Workbench - TerminalService createInstance should deregister an instance from the service when it&apos;s disposed" time="0.003" classname="should deregister an instance from the service when it&apos;s disposed">
    </testcase>
    <testcase name="Workbench - TerminalService createInstance should only automatically set the first instance as the active instance" time="0.005" classname="should only automatically set the first instance as the active instance">
    </testcase>
  </testsuite>
  <testsuite name="onInstancesChanged event" timestamp="2017-02-22T23:10:17" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.008">
    <testcase name="Workbench - TerminalService onInstancesChanged event should fire when an instance is created" time="0.005" classname="should fire when an instance is created">
    </testcase>
    <testcase name="Workbench - TerminalService onInstancesChanged event should fire when an instance is disposed" time="0.003" classname="should fire when an instance is disposed">
    </testcase>
  </testsuite>
  <testsuite name="onInstanceDisposed event" timestamp="2017-02-22T23:10:17" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.004">
    <testcase name="Workbench - TerminalService onInstanceDisposed event should fire when an instance is disposed" time="0.004" classname="should fire when an instance is disposed">
    </testcase>
  </testsuite>
  <testsuite name="Suggest" timestamp="2017-02-22T23:10:17" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.005">
    <testcase name="Suggest sort - snippet inline" time="0.003" classname="sort - snippet inline">
    </testcase>
    <testcase name="Suggest sort - snippet top" time="0.001" classname="sort - snippet top">
    </testcase>
    <testcase name="Suggest sort - snippet bottom" time="0" classname="sort - snippet bottom">
    </testcase>
    <testcase name="Suggest sort - snippet none" time="0" classname="sort - snippet none">
    </testcase>
    <testcase name="Suggest only from" time="0.001" classname="only from">
    </testcase>
  </testsuite>
  <testsuite name="Indentation Folding" timestamp="2017-02-22T23:10:17" tests="8" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Indentation Folding Fold one level" time="0" classname="Fold one level">
    </testcase>
    <testcase name="Indentation Folding Fold two levels" time="0" classname="Fold two levels">
    </testcase>
    <testcase name="Indentation Folding Fold three levels" time="0" classname="Fold three levels">
    </testcase>
    <testcase name="Indentation Folding Fold decreasing indent" time="0" classname="Fold decreasing indent">
    </testcase>
    <testcase name="Indentation Folding Fold Java" time="0" classname="Fold Java">
    </testcase>
    <testcase name="Indentation Folding Fold Javadoc" time="0" classname="Fold Javadoc">
    </testcase>
    <testcase name="Indentation Folding Fold Whitespace" time="0" classname="Fold Whitespace">
    </testcase>
    <testcase name="Indentation Folding Fold Tabs" time="0" classname="Fold Tabs">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - Model" timestamp="2017-02-22T23:10:17" tests="25" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.007">
    <testcase name="Editor Model - Model model getValue" time="0.001" classname="model getValue">
    </testcase>
    <testcase name="Editor Model - Model model insert empty text" time="0.003" classname="model insert empty text">
    </testcase>
    <testcase name="Editor Model - Model model insert text without newline 1" time="0.001" classname="model insert text without newline 1">
    </testcase>
    <testcase name="Editor Model - Model model insert text without newline 2" time="0" classname="model insert text without newline 2">
    </testcase>
    <testcase name="Editor Model - Model model insert text with one newline" time="0" classname="model insert text with one newline">
    </testcase>
    <testcase name="Editor Model - Model model insert text with two newlines" time="0" classname="model insert text with two newlines">
    </testcase>
    <testcase name="Editor Model - Model model insert text with many newlines" time="0" classname="model insert text with many newlines">
    </testcase>
    <testcase name="Editor Model - Model model insert empty text does not trigger eventing" time="0" classname="model insert empty text does not trigger eventing">
    </testcase>
    <testcase name="Editor Model - Model model insert text without newline eventing" time="0" classname="model insert text without newline eventing">
    </testcase>
    <testcase name="Editor Model - Model model insert text with one newline eventing" time="0" classname="model insert text with one newline eventing">
    </testcase>
    <testcase name="Editor Model - Model model delete empty text" time="0" classname="model delete empty text">
    </testcase>
    <testcase name="Editor Model - Model model delete text from one line" time="0" classname="model delete text from one line">
    </testcase>
    <testcase name="Editor Model - Model model delete text from one line 2" time="0" classname="model delete text from one line 2">
    </testcase>
    <testcase name="Editor Model - Model model delete all text from a line" time="0" classname="model delete all text from a line">
    </testcase>
    <testcase name="Editor Model - Model model delete text from two lines" time="0.001" classname="model delete text from two lines">
    </testcase>
    <testcase name="Editor Model - Model model delete text from many lines" time="0" classname="model delete text from many lines">
    </testcase>
    <testcase name="Editor Model - Model model delete everything" time="0" classname="model delete everything">
    </testcase>
    <testcase name="Editor Model - Model model delete empty text does not trigger eventing" time="0" classname="model delete empty text does not trigger eventing">
    </testcase>
    <testcase name="Editor Model - Model model delete text from one line eventing" time="0" classname="model delete text from one line eventing">
    </testcase>
    <testcase name="Editor Model - Model model delete all text from a line eventing" time="0" classname="model delete all text from a line eventing">
    </testcase>
    <testcase name="Editor Model - Model model delete text from two lines eventing" time="0" classname="model delete text from two lines eventing">
    </testcase>
    <testcase name="Editor Model - Model model delete text from many lines eventing" time="0" classname="model delete text from many lines eventing">
    </testcase>
    <testcase name="Editor Model - Model getValueInRange" time="0" classname="getValueInRange">
    </testcase>
    <testcase name="Editor Model - Model getValueLengthInRange" time="0" classname="getValueLengthInRange">
    </testcase>
    <testcase name="Editor Model - Model setValue eventing" time="0.001" classname="setValue eventing">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - Model Line Separators" timestamp="2017-02-22T23:10:17" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Editor Model - Model Line Separators model getValue" time="0" classname="model getValue">
    </testcase>
    <testcase name="Editor Model - Model Line Separators model lines" time="0" classname="model lines">
    </testcase>
    <testcase name="Editor Model - Model Line Separators Bug 13333:Model should line break on lonely CR too" time="0" classname="Bug 13333:Model should line break on lonely CR too">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - Words" timestamp="2017-02-22T23:10:17" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Editor Model - Words Get word at position" time="0.001" classname="Get word at position">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - Model Modes 1" timestamp="2017-02-22T23:10:17" tests="8" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Editor Model - Model Modes 1 model calls syntax highlighter 1" time="0.001" classname="model calls syntax highlighter 1">
    </testcase>
    <testcase name="Editor Model - Model Modes 1 model calls syntax highlighter 2" time="0" classname="model calls syntax highlighter 2">
    </testcase>
    <testcase name="Editor Model - Model Modes 1 model caches states" time="0" classname="model caches states">
    </testcase>
    <testcase name="Editor Model - Model Modes 1 model invalidates states for one line insert" time="0" classname="model invalidates states for one line insert">
    </testcase>
    <testcase name="Editor Model - Model Modes 1 model invalidates states for many lines insert" time="0" classname="model invalidates states for many lines insert">
    </testcase>
    <testcase name="Editor Model - Model Modes 1 model invalidates states for one new line" time="0" classname="model invalidates states for one new line">
    </testcase>
    <testcase name="Editor Model - Model Modes 1 model invalidates states for one line delete" time="0" classname="model invalidates states for one line delete">
    </testcase>
    <testcase name="Editor Model - Model Modes 1 model invalidates states for many lines delete" time="0" classname="model invalidates states for many lines delete">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - Model Modes 2" timestamp="2017-02-22T23:10:17" tests="6" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Editor Model - Model Modes 2 getTokensForInvalidLines one text insert" time="0" classname="getTokensForInvalidLines one text insert">
    </testcase>
    <testcase name="Editor Model - Model Modes 2 getTokensForInvalidLines two text insert" time="0" classname="getTokensForInvalidLines two text insert">
    </testcase>
    <testcase name="Editor Model - Model Modes 2 getTokensForInvalidLines one multi-line text insert, one small text insert" time="0" classname="getTokensForInvalidLines one multi-line text insert, one small text insert">
    </testcase>
    <testcase name="Editor Model - Model Modes 2 getTokensForInvalidLines one delete text" time="0" classname="getTokensForInvalidLines one delete text">
    </testcase>
    <testcase name="Editor Model - Model Modes 2 getTokensForInvalidLines one line delete text" time="0" classname="getTokensForInvalidLines one line delete text">
    </testcase>
    <testcase name="Editor Model - Model Modes 2 getTokensForInvalidLines multiple lines delete text" time="0" classname="getTokensForInvalidLines multiple lines delete text">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - Token Iterator" timestamp="2017-02-22T23:10:17" tests="10" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.005">
    <testcase name="Editor Model - Token Iterator all tokens with ranges" time="0.001" classname="all tokens with ranges">
    </testcase>
    <testcase name="Editor Model - Token Iterator all tokens from beginning with next" time="0" classname="all tokens from beginning with next">
    </testcase>
    <testcase name="Editor Model - Token Iterator all tokens from beginning with prev" time="0" classname="all tokens from beginning with prev">
    </testcase>
    <testcase name="Editor Model - Token Iterator all tokens from end with prev" time="0" classname="all tokens from end with prev">
    </testcase>
    <testcase name="Editor Model - Token Iterator all tokens from end with next" time="0" classname="all tokens from end with next">
    </testcase>
    <testcase name="Editor Model - Token Iterator prev and next are assert.equal at start" time="0" classname="prev and next are assert.equal at start">
    </testcase>
    <testcase name="Editor Model - Token Iterator position variance within token" time="0" classname="position variance within token">
    </testcase>
    <testcase name="Editor Model - Token Iterator iterator allows next/prev" time="0.001" classname="iterator allows next/prev">
    </testcase>
    <testcase name="Editor Model - Token Iterator iterator allows prev/next" time="0.003" classname="iterator allows prev/next">
    </testcase>
    <testcase name="Editor Model - Token Iterator iterator can not be used outside of callback" time="0" classname="iterator can not be used outside of callback">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - Model Decorations" timestamp="2017-02-22T23:10:18" tests="25" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.008">
    <testcase name="Editor Model - Model Decorations single character decoration" time="0.003" classname="single character decoration">
    </testcase>
    <testcase name="Editor Model - Model Decorations line decoration" time="0" classname="line decoration">
    </testcase>
    <testcase name="Editor Model - Model Decorations full line decoration" time="0" classname="full line decoration">
    </testcase>
    <testcase name="Editor Model - Model Decorations multiple line decoration" time="0" classname="multiple line decoration">
    </testcase>
    <testcase name="Editor Model - Model Decorations decoration gets removed" time="0.001" classname="decoration gets removed">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations get removed" time="0" classname="decorations get removed">
    </testcase>
    <testcase name="Editor Model - Model Decorations decoration range can be changed" time="0.001" classname="decoration range can be changed">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations emit event on add" time="0" classname="decorations emit event on add">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations emit event on change" time="0" classname="decorations emit event on change">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations emit event on remove" time="0" classname="decorations emit event on remove">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations emit event when inserting one line text before it" time="0" classname="decorations emit event when inserting one line text before it">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations are updated when inserting one line text before it" time="0.001" classname="decorations are updated when inserting one line text before it">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations are updated when inserting one line text before it 2" time="0" classname="decorations are updated when inserting one line text before it 2">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations are updated when inserting multiple lines text before it" time="0" classname="decorations are updated when inserting multiple lines text before it">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations change when inserting text after them" time="0.001" classname="decorations change when inserting text after them">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations are updated when inserting text inside" time="0" classname="decorations are updated when inserting text inside">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations are updated when inserting text inside 2" time="0" classname="decorations are updated when inserting text inside 2">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations are updated when inserting text inside 3" time="0" classname="decorations are updated when inserting text inside 3">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations are updated when inserting multiple lines text inside" time="0.001" classname="decorations are updated when inserting multiple lines text inside">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations are updated when deleting one line text before it" time="0" classname="decorations are updated when deleting one line text before it">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations are updated when deleting multiple lines text before it" time="0" classname="decorations are updated when deleting multiple lines text before it">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations are updated when deleting multiple lines text before it 2" time="0" classname="decorations are updated when deleting multiple lines text before it 2">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations are updated when deleting text inside" time="0" classname="decorations are updated when deleting text inside">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations are updated when deleting text inside 2" time="0" classname="decorations are updated when deleting text inside 2">
    </testcase>
    <testcase name="Editor Model - Model Decorations decorations are updated when deleting multiple lines text" time="0" classname="decorations are updated when deleting multiple lines text">
    </testcase>
  </testsuite>
  <testsuite name="deltaDecorations" timestamp="2017-02-22T23:10:18" tests="7" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.007">
    <testcase name="deltaDecorations result respects input" time="0.001" classname="result respects input">
    </testcase>
    <testcase name="deltaDecorations deltaDecorations 1" time="0.003" classname="deltaDecorations 1">
    </testcase>
    <testcase name="deltaDecorations deltaDecorations 2" time="0" classname="deltaDecorations 2">
    </testcase>
    <testcase name="deltaDecorations deltaDecorations 3" time="0" classname="deltaDecorations 3">
    </testcase>
    <testcase name="deltaDecorations issue #4317: editor.setDecorations doesn&apos;t update the hover message" time="0.001" classname="issue #4317: editor.setDecorations doesn&apos;t update the hover message">
    </testcase>
    <testcase name="deltaDecorations model doesn&apos;t get confused with individual tracked ranges" time="0.001" classname="model doesn&apos;t get confused with individual tracked ranges">
    </testcase>
    <testcase name="deltaDecorations issue #16922: Clicking on link doesn&apos;t seem to do anything" time="0.001" classname="issue #16922: Clicking on link doesn&apos;t seem to do anything">
    </testcase>
  </testsuite>
  <testsuite name="Editor Model - Model Edit Operation" timestamp="2017-02-22T23:10:18" tests="8" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Editor Model - Model Edit Operation Insert inline" time="0" classname="Insert inline">
    </testcase>
    <testcase name="Editor Model - Model Edit Operation Replace inline/inline 1" time="0" classname="Replace inline/inline 1">
    </testcase>
    <testcase name="Editor Model - Model Edit Operation Replace inline/inline 2" time="0" classname="Replace inline/inline 2">
    </testcase>
    <testcase name="Editor Model - Model Edit Operation Replace inline/inline 3" time="0" classname="Replace inline/inline 3">
    </testcase>
    <testcase name="Editor Model - Model Edit Operation Replace inline/multi line 1" time="0.001" classname="Replace inline/multi line 1">
    </testcase>
    <testcase name="Editor Model - Model Edit Operation Replace inline/multi line 2" time="0" classname="Replace inline/multi line 2">
    </testcase>
    <testcase name="Editor Model - Model Edit Operation Replace inline/multi line 3" time="0.001" classname="Replace inline/multi line 3">
    </testcase>
    <testcase name="Editor Model - Model Edit Operation Replace muli line/multi line" time="0" classname="Replace muli line/multi line">
    </testcase>
  </testsuite>
  <testsuite name="TextModelWithTokens" timestamp="2017-02-22T23:10:18" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.007">
    <testcase name="TextModelWithTokens brackets" time="0.007" classname="brackets">
    </testcase>
  </testsuite>
  <testsuite name="TextModelWithTokens - bracket matching" timestamp="2017-02-22T23:10:18" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="TextModelWithTokens - bracket matching bracket matching 1" time="0.002" classname="bracket matching 1">
    </testcase>
    <testcase name="TextModelWithTokens - bracket matching bracket matching 2" time="0.001" classname="bracket matching 2">
    </testcase>
  </testsuite>
  <testsuite name="TextModelWithTokens regression tests" timestamp="2017-02-22T23:10:18" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="TextModelWithTokens regression tests Microsoft/monaco-editor#122: Unhandled Exception: TypeError: Unable to get property &apos;replace&apos; of undefined or null reference" time="0" classname="Microsoft/monaco-editor#122: Unhandled Exception: TypeError: Unable to get property &apos;replace&apos; of undefined or null reference">
    </testcase>
    <testcase name="TextModelWithTokens regression tests Microsoft/monaco-editor#133: Error: Cannot read property &apos;modeId&apos; of undefined" time="0.001" classname="Microsoft/monaco-editor#133: Error: Cannot read property &apos;modeId&apos; of undefined">
    </testcase>
  </testsuite>
  <testsuite name="Editor ViewModel - SplitLinesCollection" timestamp="2017-02-22T23:10:18" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.013000000000000001">
    <testcase name="Editor ViewModel - SplitLinesCollection SplitLine" time="0.006" classname="SplitLine">
    </testcase>
    <testcase name="Editor ViewModel - SplitLinesCollection issue #3662" time="0.007" classname="issue #3662">
    </testcase>
  </testsuite>
  <testsuite name="ViewModelDecorations" timestamp="2017-02-22T23:10:18" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.008">
    <testcase name="ViewModelDecorations getDecorationsViewportData" time="0.007" classname="getDecorationsViewportData">
    </testcase>
    <testcase name="ViewModelDecorations issue #17208: Problem scrolling in 1.8.0" time="0.001" classname="issue #17208: Problem scrolling in 1.8.0">
    </testcase>
  </testsuite>
  <testsuite name="Git - Stage ranges" timestamp="2017-02-22T23:10:18" tests="20" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.006">
    <testcase name="Git - Stage ranges Get selected changes test - no change selected (selection before changes)" time="0" classname="Get selected changes test - no change selected (selection before changes)">
    </testcase>
    <testcase name="Git - Stage ranges Get selected changes test - no change selected (selection after changes)" time="0" classname="Get selected changes test - no change selected (selection after changes)">
    </testcase>
    <testcase name="Git - Stage ranges Get selected changes test - one change fully selected" time="0.001" classname="Get selected changes test - one change fully selected">
    </testcase>
    <testcase name="Git - Stage ranges Get selected changes test - one change fully selected(deletion)" time="0" classname="Get selected changes test - one change fully selected(deletion)">
    </testcase>
    <testcase name="Git - Stage ranges Get selected changes test - one change (insertion) partially selected" time="0" classname="Get selected changes test - one change (insertion) partially selected">
    </testcase>
    <testcase name="Git - Stage ranges Get selected changes test - multiple changes selected with one selection" time="0" classname="Get selected changes test - multiple changes selected with one selection">
    </testcase>
    <testcase name="Git - Stage ranges Get selected changes test - one change partially seleceted with multiple selections" time="0" classname="Get selected changes test - one change partially seleceted with multiple selections">
    </testcase>
    <testcase name="Git - Stage ranges Get selected changes test - one change partially seleceted with overlapping selections" time="0" classname="Get selected changes test - one change partially seleceted with overlapping selections">
    </testcase>
    <testcase name="Git - Stage ranges Get selected changes test - multiple changes partially selected with multiple selections" time="0" classname="Get selected changes test - multiple changes partially selected with multiple selections">
    </testcase>
    <testcase name="Git - Stage ranges Get selected changes test - multiple changes selected with multiple selections. Multiple changes not selected" time="0" classname="Get selected changes test - multiple changes selected with multiple selections. Multiple changes not selected">
    </testcase>
    <testcase name="Git - Stage ranges Apply changes to model - no changes" time="0" classname="Apply changes to model - no changes">
    </testcase>
    <testcase name="Git - Stage ranges Apply changes to model - one line change at the end" time="0.001" classname="Apply changes to model - one line change at the end">
    </testcase>
    <testcase name="Git - Stage ranges Apply changes to model - one line insertion in the middle" time="0" classname="Apply changes to model - one line insertion in the middle">
    </testcase>
    <testcase name="Git - Stage ranges Apply changes to model - three empty lines insertion in the middle" time="0.001" classname="Apply changes to model - three empty lines insertion in the middle">
    </testcase>
    <testcase name="Git - Stage ranges Apply changes to model - one line deletion" time="0" classname="Apply changes to model - one line deletion">
    </testcase>
    <testcase name="Git - Stage ranges Apply changes to model - one multi line change" time="0.001" classname="Apply changes to model - one multi line change">
    </testcase>
    <testcase name="Git - Stage ranges Apply changes to model - two overlapping changes" time="0" classname="Apply changes to model - two overlapping changes">
    </testcase>
    <testcase name="Git - Stage ranges Apply changes to model - multiple small changes" time="0.001" classname="Apply changes to model - multiple small changes">
    </testcase>
    <testcase name="Git - Stage ranges Apply changes to model - multiple changes - insertion, deletion and modification" time="0" classname="Apply changes to model - multiple changes - insertion, deletion and modification">
    </testcase>
    <testcase name="Git - Stage ranges Apply changes to model - multiple changes 2 - insertion, deletion and modification" time="0.001" classname="Apply changes to model - multiple changes 2 - insertion, deletion and modification">
    </testcase>
  </testsuite>
  <testsuite name="ExtHostLanguageFeatureCommands" timestamp="2017-02-22T23:10:18" tests="11" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.034">
    <testcase name="ExtHostLanguageFeatureCommands WorkspaceSymbols, invalid arguments" time="0" classname="WorkspaceSymbols, invalid arguments">
    </testcase>
    <testcase name="ExtHostLanguageFeatureCommands WorkspaceSymbols, back and forth" time="0.005" classname="WorkspaceSymbols, back and forth">
    </testcase>
    <testcase name="ExtHostLanguageFeatureCommands Definition, invalid arguments" time="0.001" classname="Definition, invalid arguments">
    </testcase>
    <testcase name="ExtHostLanguageFeatureCommands Definition, back and forth" time="0.005" classname="Definition, back and forth">
    </testcase>
    <testcase name="ExtHostLanguageFeatureCommands reference search, back and forth" time="0.002" classname="reference search, back and forth">
    </testcase>
    <testcase name="ExtHostLanguageFeatureCommands Outline, back and forth" time="0.004" classname="Outline, back and forth">
    </testcase>
    <testcase name="ExtHostLanguageFeatureCommands Suggest, back and forth" time="0.005" classname="Suggest, back and forth">
    </testcase>
    <testcase name="ExtHostLanguageFeatureCommands Suggest, return CompletionList !array" time="0.004" classname="Suggest, return CompletionList !array">
    </testcase>
    <testcase name="ExtHostLanguageFeatureCommands QuickFix, back and forth" time="0.002" classname="QuickFix, back and forth">
    </testcase>
    <testcase name="ExtHostLanguageFeatureCommands CodeLens, back and forth" time="0.003" classname="CodeLens, back and forth">
    </testcase>
    <testcase name="ExtHostLanguageFeatureCommands Links, back and forth" time="0.003" classname="Links, back and forth">
    </testcase>
  </testsuite>
  <testsuite name="ExtHostLanguageFeatures" timestamp="2017-02-22T23:10:18" tests="44" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.06100000000000004">
    <testcase name="ExtHostLanguageFeatures DocumentSymbols, register/deregister" time="0.002" classname="DocumentSymbols, register/deregister">
    </testcase>
    <testcase name="ExtHostLanguageFeatures DocumentSymbols, evil provider" time="0.002" classname="DocumentSymbols, evil provider">
    </testcase>
    <testcase name="ExtHostLanguageFeatures DocumentSymbols, data conversion" time="0.001" classname="DocumentSymbols, data conversion">
    </testcase>
    <testcase name="ExtHostLanguageFeatures CodeLens, evil provider" time="0.001" classname="CodeLens, evil provider">
    </testcase>
    <testcase name="ExtHostLanguageFeatures CodeLens, do not resolve a resolved lens" time="0.002" classname="CodeLens, do not resolve a resolved lens">
    </testcase>
    <testcase name="ExtHostLanguageFeatures CodeLens, missing command" time="0.001" classname="CodeLens, missing command">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Definition, data conversion" time="0.001" classname="Definition, data conversion">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Definition, one or many" time="0.001" classname="Definition, one or many">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Definition, registration order" time="0.001" classname="Definition, registration order">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Definition, evil provider" time="0.002" classname="Definition, evil provider">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Implementation, data conversion" time="0.001" classname="Implementation, data conversion">
    </testcase>
    <testcase name="ExtHostLanguageFeatures HoverProvider, word range at pos" time="0.004" classname="HoverProvider, word range at pos">
    </testcase>
    <testcase name="ExtHostLanguageFeatures HoverProvider, given range" time="0.001" classname="HoverProvider, given range">
    </testcase>
    <testcase name="ExtHostLanguageFeatures HoverProvider, registration order" time="0.001" classname="HoverProvider, registration order">
    </testcase>
    <testcase name="ExtHostLanguageFeatures HoverProvider, evil provider" time="0.002" classname="HoverProvider, evil provider">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Occurrences, data conversion" time="0.002" classname="Occurrences, data conversion">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Occurrences, order 1/2" time="0.001" classname="Occurrences, order 1/2">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Occurrences, order 2/2" time="0.001" classname="Occurrences, order 2/2">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Occurrences, evil provider" time="0.001" classname="Occurrences, evil provider">
    </testcase>
    <testcase name="ExtHostLanguageFeatures References, registration order" time="0.002" classname="References, registration order">
    </testcase>
    <testcase name="ExtHostLanguageFeatures References, data conversion" time="0.001" classname="References, data conversion">
    </testcase>
    <testcase name="ExtHostLanguageFeatures References, evil provider" time="0.003" classname="References, evil provider">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Quick Fix, data conversion" time="0.002" classname="Quick Fix, data conversion">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Quick Fix, evil provider" time="0.002" classname="Quick Fix, evil provider">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Navigate types, evil provider" time="0.001" classname="Navigate types, evil provider">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Rename, evil provider 1/2" time="0.002" classname="Rename, evil provider 1/2">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Rename, evil provider 2/2" time="0.001" classname="Rename, evil provider 2/2">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Rename, ordering" time="0.001" classname="Rename, ordering">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Parameter Hints, order" time="0.001" classname="Parameter Hints, order">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Parameter Hints, evil provider" time="0.001" classname="Parameter Hints, evil provider">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Suggest, order 1/3" time="0.001" classname="Suggest, order 1/3">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Suggest, order 2/3" time="0.001" classname="Suggest, order 2/3">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Suggest, order 2/3" time="0.001" classname="Suggest, order 2/3">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Suggest, evil provider" time="0.001" classname="Suggest, evil provider">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Suggest, CompletionList" time="0.001" classname="Suggest, CompletionList">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Format Doc, data conversion" time="0.001" classname="Format Doc, data conversion">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Format Doc, evil provider" time="0.001" classname="Format Doc, evil provider">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Format Doc, order" time="0.001" classname="Format Doc, order">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Format Range, data conversion" time="0.001" classname="Format Range, data conversion">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Format Range, + format_doc" time="0.001" classname="Format Range, + format_doc">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Format Range, evil provider" time="0.002" classname="Format Range, evil provider">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Format on Type, data conversion" time="0.002" classname="Format on Type, data conversion">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Links, data conversion" time="0.001" classname="Links, data conversion">
    </testcase>
    <testcase name="ExtHostLanguageFeatures Links, evil provider" time="0.001" classname="Links, evil provider">
    </testcase>
  </testsuite>
  <testsuite name="bracket matching" timestamp="2017-02-22T23:10:18" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.017">
    <testcase name="bracket matching issue #183: jump to matching bracket position" time="0.017" classname="issue #183: jump to matching bracket position">
    </testcase>
  </testsuite>
  <testsuite name="FindController" timestamp="2017-02-22T23:10:18" tests="13" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.538">
    <testcase name="FindController issue #1857: F3, Find Next, acts like &quot;Find Under Cursor&quot;" time="0.013" classname="issue #1857: F3, Find Next, acts like &quot;Find Under Cursor&quot;">
    </testcase>
    <testcase name="FindController issue #3090: F3 does not loop with two matches on a single line" time="0.003" classname="issue #3090: F3 does not loop with two matches on a single line">
    </testcase>
    <testcase name="FindController issue #6149: Auto-escape highlighted text for search and replace regex mode" time="0.003" classname="issue #6149: Auto-escape highlighted text for search and replace regex mode">
    </testcase>
    <testcase name="FindController issue #8817: Cursor position changes when you cancel multicursor" time="0.003" classname="issue #8817: Cursor position changes when you cancel multicursor">
    </testcase>
    <testcase name="FindController issue #9043: Clear search scope when find widget is hidden" time="0.001" classname="issue #9043: Clear search scope when find widget is hidden">
    </testcase>
    <testcase name="FindController find term is added to history on state change" time="0.001" classname="find term is added to history on state change">
    </testcase>
    <testcase name="FindController find term is added with delay" time="0.502" classname="find term is added with delay">
    </testcase>
    <testcase name="FindController show previous find term" time="0.001" classname="show previous find term">
    </testcase>
    <testcase name="FindController show previous find term do not update history" time="0.001" classname="show previous find term do not update history">
    </testcase>
    <testcase name="FindController show next find term" time="0.001" classname="show next find term">
    </testcase>
    <testcase name="FindController show next find term do not update history" time="0.002" classname="show next find term do not update history">
    </testcase>
    <testcase name="FindController AddSelectionToNextFindMatchAction can work with multiline" time="0.004" classname="AddSelectionToNextFindMatchAction can work with multiline">
    </testcase>
    <testcase name="FindController issue #18111: Regex replace with single space replaces with no space" time="0.003" classname="issue #18111: Regex replace with single space replaces with no space">
    </testcase>
  </testsuite>
  <testsuite name="FindModel" timestamp="2017-02-22T23:10:18" tests="37" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.07600000000000003">
    <testcase name="FindModel incremental find from beginning of file" time="0.01" classname="incremental find from beginning of file">
    </testcase>
    <testcase name="FindModel find model removes its decorations" time="0.001" classname="find model removes its decorations">
    </testcase>
    <testcase name="FindModel find model updates state matchesCount" time="0.001" classname="find model updates state matchesCount">
    </testcase>
    <testcase name="FindModel find model reacts to position change" time="0.001" classname="find model reacts to position change">
    </testcase>
    <testcase name="FindModel find model next" time="0.003" classname="find model next">
    </testcase>
    <testcase name="FindModel find model next stays in scope" time="0.002" classname="find model next stays in scope">
    </testcase>
    <testcase name="FindModel find model prev" time="0.004" classname="find model prev">
    </testcase>
    <testcase name="FindModel find model prev stays in scope" time="0.001" classname="find model prev stays in scope">
    </testcase>
    <testcase name="FindModel find model next/prev with no matches" time="0.002" classname="find model next/prev with no matches">
    </testcase>
    <testcase name="FindModel find model next/prev respects cursor position" time="0.002" classname="find model next/prev respects cursor position">
    </testcase>
    <testcase name="FindModel find ^" time="0.002" classname="find ^">
    </testcase>
    <testcase name="FindModel find $" time="0.003" classname="find $">
    </testcase>
    <testcase name="FindModel find next ^$" time="0.001" classname="find next ^$">
    </testcase>
    <testcase name="FindModel find .*" time="0.001" classname="find .*">
    </testcase>
    <testcase name="FindModel find next ^.*$" time="0.003" classname="find next ^.*$">
    </testcase>
    <testcase name="FindModel find prev ^.*$" time="0.002" classname="find prev ^.*$">
    </testcase>
    <testcase name="FindModel find prev ^$" time="0.002" classname="find prev ^$">
    </testcase>
    <testcase name="FindModel replace hello" time="0.004" classname="replace hello">
    </testcase>
    <testcase name="FindModel replace bla" time="0.003" classname="replace bla">
    </testcase>
    <testcase name="FindModel replaceAll hello" time="0.002" classname="replaceAll hello">
    </testcase>
    <testcase name="FindModel replaceAll two spaces with one space" time="0.001" classname="replaceAll two spaces with one space">
    </testcase>
    <testcase name="FindModel replaceAll bla" time="0.005" classname="replaceAll bla">
    </testcase>
    <testcase name="FindModel replaceAll bla with \t\n" time="0.001" classname="replaceAll bla with \t\n">
    </testcase>
    <testcase name="FindModel issue #3516: &quot;replace all&quot; moves page/cursor/focus/scroll to the place of the last replacement" time="0.002" classname="issue #3516: &quot;replace all&quot; moves page/cursor/focus/scroll to the place of the last replacement">
    </testcase>
    <testcase name="FindModel finds only in editable range if replace is shown" time="0.001" classname="finds only in editable range if replace is shown">
    </testcase>
    <testcase name="FindModel listens to model content changes" time="0.001" classname="listens to model content changes">
    </testcase>
    <testcase name="FindModel selectAllMatches" time="0.002" classname="selectAllMatches">
    </testcase>
    <testcase name="FindModel issue #14143 selectAllMatches should maintain primary cursor if feasible" time="0.001" classname="issue #14143 selectAllMatches should maintain primary cursor if feasible">
    </testcase>
    <testcase name="FindModel issue #1914: NPE when there is only one find match" time="0.001" classname="issue #1914: NPE when there is only one find match">
    </testcase>
    <testcase name="FindModel replace when search string has look ahed regex" time="0.002" classname="replace when search string has look ahed regex">
    </testcase>
    <testcase name="FindModel replace when search string has look ahed regex and cursor is at the last find match" time="0.002" classname="replace when search string has look ahed regex and cursor is at the last find match">
    </testcase>
    <testcase name="FindModel replaceAll when search string has look ahed regex" time="0.001" classname="replaceAll when search string has look ahed regex">
    </testcase>
    <testcase name="FindModel replace when search string has look ahed regex and replace string has capturing groups" time="0.001" classname="replace when search string has look ahed regex and replace string has capturing groups">
    </testcase>
    <testcase name="FindModel replaceAll when search string has look ahed regex and replace string has capturing groups" time="0.001" classname="replaceAll when search string has look ahed regex and replace string has capturing groups">
    </testcase>
    <testcase name="FindModel replaceAll when search string is multiline and has look ahed regex and replace string has capturing groups" time="0.002" classname="replaceAll when search string is multiline and has look ahed regex and replace string has capturing groups">
    </testcase>
    <testcase name="FindModel issue #18711 replaceAll with empty string" time="0.001" classname="issue #18711 replaceAll with empty string">
    </testcase>
    <testcase name="FindModel issue #19740 Find and replace capture group/backreference inserts `undefined` instead of empty string" time="0.001" classname="issue #19740 Find and replace capture group/backreference inserts `undefined` instead of empty string">
    </testcase>
  </testsuite>
  <testsuite name="Editor Contrib - Line Operations" timestamp="2017-02-22T23:10:18" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.006">
    <testcase name="Editor Contrib - Line Operations transpose" time="0.003" classname="transpose">
    </testcase>
    <testcase name="Editor Contrib - Line Operations toggle case" time="0.003" classname="toggle case">
    </testcase>
  </testsuite>
  <testsuite name="DeleteAllLeftAction" timestamp="2017-02-22T23:10:18" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.004">
    <testcase name="Editor Contrib - Line Operations DeleteAllLeftAction should delete to the left of the cursor" time="0.002" classname="should delete to the left of the cursor">
    </testcase>
    <testcase name="Editor Contrib - Line Operations DeleteAllLeftAction should work in multi cursor mode" time="0.002" classname="should work in multi cursor mode">
    </testcase>
  </testsuite>
  <testsuite name="JoinLinesAction" timestamp="2017-02-22T23:10:18" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.006">
    <testcase name="Editor Contrib - Line Operations JoinLinesAction should join lines and insert space if necessary" time="0.002" classname="should join lines and insert space if necessary">
    </testcase>
    <testcase name="Editor Contrib - Line Operations JoinLinesAction should work in multi cursor mode" time="0.004" classname="should work in multi cursor mode">
    </testcase>
  </testsuite>
  <testsuite name="DeleteAllRightAction" timestamp="2017-02-22T23:10:18" tests="6" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.009000000000000001">
    <testcase name="Editor Contrib - Line Operations DeleteAllRightAction should be noop on empty" time="0.001" classname="should be noop on empty">
    </testcase>
    <testcase name="Editor Contrib - Line Operations DeleteAllRightAction should delete selected range" time="0.001" classname="should delete selected range">
    </testcase>
    <testcase name="Editor Contrib - Line Operations DeleteAllRightAction should delete to the right of the cursor" time="0.001" classname="should delete to the right of the cursor">
    </testcase>
    <testcase name="Editor Contrib - Line Operations DeleteAllRightAction should join two lines, if at the end of the line" time="0.002" classname="should join two lines, if at the end of the line">
    </testcase>
    <testcase name="Editor Contrib - Line Operations DeleteAllRightAction should work with multiple cursors" time="0.001" classname="should work with multiple cursors">
    </testcase>
    <testcase name="Editor Contrib - Line Operations DeleteAllRightAction should work with undo/redo" time="0.003" classname="should work with undo/redo">
    </testcase>
  </testsuite>
  <testsuite name="QuickFix" timestamp="2017-02-22T23:10:18" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="QuickFix Orcale -&gt; marker added" time="0.002" classname="Orcale -&gt; marker added">
    </testcase>
    <testcase name="QuickFix Orcale -&gt; position changed" time="0" classname="Orcale -&gt; position changed">
    </testcase>
    <testcase name="QuickFix Oracle -&gt; ask once per marker/word" time="0" classname="Oracle -&gt; ask once per marker/word">
    </testcase>
  </testsuite>
  <testsuite name="SnippetController" timestamp="2017-02-22T23:10:18" tests="18" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.05000000000000001">
    <testcase name="SnippetController Simple accepted" time="0.006" classname="Simple accepted">
    </testcase>
    <testcase name="SnippetController Simple canceled" time="0.001" classname="Simple canceled">
    </testcase>
    <testcase name="SnippetController Stops when deleting lines above" time="0.002" classname="Stops when deleting lines above">
    </testcase>
    <testcase name="SnippetController Stops when deleting lines below" time="0.004" classname="Stops when deleting lines below">
    </testcase>
    <testcase name="SnippetController Stops when inserting lines above" time="0.002" classname="Stops when inserting lines above">
    </testcase>
    <testcase name="SnippetController Stops when inserting lines below" time="0.002" classname="Stops when inserting lines below">
    </testcase>
    <testcase name="SnippetController Stops when calling model.setValue()" time="0.001" classname="Stops when calling model.setValue()">
    </testcase>
    <testcase name="SnippetController Stops when undoing" time="0.001" classname="Stops when undoing">
    </testcase>
    <testcase name="SnippetController Stops when moving cursor outside" time="0.003" classname="Stops when moving cursor outside">
    </testcase>
    <testcase name="SnippetController Stops when disconnecting editor model" time="0.001" classname="Stops when disconnecting editor model">
    </testcase>
    <testcase name="SnippetController Stops when disposing editor" time="0" classname="Stops when disposing editor">
    </testcase>
    <testcase name="SnippetController Final tabstop with multiple selections" time="0.007" classname="Final tabstop with multiple selections">
    </testcase>
    <testcase name="SnippetController Final tabstop, #11742 simple" time="0.007" classname="Final tabstop, #11742 simple">
    </testcase>
    <testcase name="SnippetController Final tabstop, #11742 different indents" time="0.004" classname="Final tabstop, #11742 different indents">
    </testcase>
    <testcase name="SnippetController Final tabstop, #11890 stay at the beginning" time="0.001" classname="Final tabstop, #11890 stay at the beginning">
    </testcase>
    <testcase name="SnippetController Final tabstop, no tabstop" time="0.002" classname="Final tabstop, no tabstop">
    </testcase>
    <testcase name="SnippetController Multiple cursor and overwriteBefore/After, issue #11060" time="0.005" classname="Multiple cursor and overwriteBefore/After, issue #11060">
    </testcase>
    <testcase name="SnippetController Multiple cursor and overwriteBefore/After, #16277" time="0.001" classname="Multiple cursor and overwriteBefore/After, #16277">
    </testcase>
  </testsuite>
  <testsuite name="Snippet Variables Resolver" timestamp="2017-02-22T23:10:18" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.004">
    <testcase name="Snippet Variables Resolver editor variables, basics" time="0.001" classname="editor variables, basics">
    </testcase>
    <testcase name="Snippet Variables Resolver editor variables, file/dir" time="0.002" classname="editor variables, file/dir">
    </testcase>
    <testcase name="Snippet Variables Resolver editor variables, selection" time="0.001" classname="editor variables, selection">
    </testcase>
  </testsuite>
  <testsuite name="SuggestModel - Context" timestamp="2017-02-22T23:10:18" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="SuggestModel - Context Context - shouldAutoTrigger" time="0.002" classname="Context - shouldAutoTrigger">
    </testcase>
  </testsuite>
  <testsuite name="SuggestModel - TriggerAndCancelOracle" timestamp="2017-02-22T23:10:18" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.057999999999999996">
    <testcase name="SuggestModel - TriggerAndCancelOracle events - cancel/trigger" time="0.003" classname="events - cancel/trigger">
    </testcase>
    <testcase name="SuggestModel - TriggerAndCancelOracle events - suggest/empty" time="0.002" classname="events - suggest/empty">
    </testcase>
    <testcase name="SuggestModel - TriggerAndCancelOracle trigger - on type" time="0.013" classname="trigger - on type">
    </testcase>
    <testcase name="SuggestModel - TriggerAndCancelOracle #17400: Keep filtering suggestModel.ts after space" time="0.04" classname="#17400: Keep filtering suggestModel.ts after space">
    </testcase>
  </testsuite>
  <testsuite name="Emmet" timestamp="2017-02-22T23:10:19" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="Emmet emmet isEnabled" time="0.002" classname="emmet isEnabled">
    </testcase>
    <testcase name="Emmet emmet syntax profiles" time="0.001" classname="emmet syntax profiles">
    </testcase>
  </testsuite>
  <testsuite name="TokenSelectionSupport" timestamp="2017-02-22T23:10:19" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="TokenSelectionSupport getRangesToPosition #1" time="0.002" classname="getRangesToPosition #1">
    </testcase>
  </testsuite>
  <testsuite name="SearchModel" timestamp="2017-02-22T23:10:19" tests="10" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.034999999999999996">
    <testcase name="SearchModel Search Model: Search adds to results" time="0.002" classname="Search Model: Search adds to results">
    </testcase>
    <testcase name="SearchModel Search Model: Search adds to results during progress" time="0.002" classname="Search Model: Search adds to results during progress">
    </testcase>
    <testcase name="SearchModel Search Model: Search reports telemetry on search completed" time="0" classname="Search Model: Search reports telemetry on search completed">
    </testcase>
    <testcase name="SearchModel Search Model: Search reports timed telemetry on search when progress is not called" time="0.004" classname="Search Model: Search reports timed telemetry on search when progress is not called">
    </testcase>
    <testcase name="SearchModel Search Model: Search reports timed telemetry on search when progress is called" time="0.004" classname="Search Model: Search reports timed telemetry on search when progress is called">
    </testcase>
    <testcase name="SearchModel Search Model: Search reports timed telemetry on search when error is called" time="0.003" classname="Search Model: Search reports timed telemetry on search when error is called">
    </testcase>
    <testcase name="SearchModel Search Model: Search reports timed telemetry on search when error is cancelled error" time="0.004" classname="Search Model: Search reports timed telemetry on search when error is cancelled error">
    </testcase>
    <testcase name="SearchModel Search Model: Search results are cleared during search" time="0.004" classname="Search Model: Search results are cleared during search">
    </testcase>
    <testcase name="SearchModel Search Model: Previous search is cancelled when new search is called" time="0.003" classname="Search Model: Previous search is cancelled when new search is called">
    </testcase>
    <testcase name="SearchModel getReplaceString returns proper replace string for regExpressions" time="0.009" classname="getReplaceString returns proper replace string for regExpressions">
    </testcase>
  </testsuite>
  <testsuite name="SearchResult" timestamp="2017-02-22T23:10:19" tests="19" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.012">
    <testcase name="SearchResult Line Match" time="0" classname="Line Match">
    </testcase>
    <testcase name="SearchResult Line Match - Remove" time="0.001" classname="Line Match - Remove">
    </testcase>
    <testcase name="SearchResult File Match" time="0" classname="File Match">
    </testcase>
    <testcase name="SearchResult File Match: Select an existing match" time="0" classname="File Match: Select an existing match">
    </testcase>
    <testcase name="SearchResult File Match: Select non existing match" time="0" classname="File Match: Select non existing match">
    </testcase>
    <testcase name="SearchResult File Match: isSelected return true for selected match" time="0" classname="File Match: isSelected return true for selected match">
    </testcase>
    <testcase name="SearchResult File Match: isSelected return false for un-selected match" time="0" classname="File Match: isSelected return false for un-selected match">
    </testcase>
    <testcase name="SearchResult File Match: unselect" time="0" classname="File Match: unselect">
    </testcase>
    <testcase name="SearchResult File Match: unselect when not selected" time="0" classname="File Match: unselect when not selected">
    </testcase>
    <testcase name="SearchResult Alle Drei Zusammen" time="0" classname="Alle Drei Zusammen">
    </testcase>
    <testcase name="SearchResult Adding a raw match will add a file match with line matches" time="0.001" classname="Adding a raw match will add a file match with line matches">
    </testcase>
    <testcase name="SearchResult Adding multiple raw matches" time="0" classname="Adding multiple raw matches">
    </testcase>
    <testcase name="SearchResult Dispose disposes matches" time="0.002" classname="Dispose disposes matches">
    </testcase>
    <testcase name="SearchResult remove triggers change event" time="0" classname="remove triggers change event">
    </testcase>
    <testcase name="SearchResult remove triggers change event" time="0" classname="remove triggers change event">
    </testcase>
    <testcase name="SearchResult Removing all line matches and adding back will add file back to result" time="0.001" classname="Removing all line matches and adding back will add file back to result">
    </testcase>
    <testcase name="SearchResult replace should remove the file match" time="0.001" classname="replace should remove the file match">
    </testcase>
    <testcase name="SearchResult replace should trigger the change event" time="0.005" classname="replace should trigger the change event">
    </testcase>
    <testcase name="SearchResult replaceAll should remove all file matches" time="0.001" classname="replaceAll should remove all file matches">
    </testcase>
  </testsuite>
  <testsuite name="Workbench - EditorModel" timestamp="2017-02-22T23:10:19" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.004">
    <testcase name="Workbench - EditorModel EditorModel" time="0" classname="EditorModel">
    </testcase>
    <testcase name="Workbench - EditorModel BaseTextEditorModel" time="0.001" classname="BaseTextEditorModel">
    </testcase>
    <testcase name="Workbench - EditorModel TextDiffEditorModel" time="0.003" classname="TextDiffEditorModel">
    </testcase>
  </testsuite>
  <testsuite name="Workbench - StringEditorModel" timestamp="2017-02-22T23:10:19" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Workbench - StringEditorModel StringEditorModel" time="0.001" classname="StringEditorModel">
    </testcase>
    <testcase name="Workbench - StringEditorModel StringEditorModel - setValue" time="0.001" classname="StringEditorModel - setValue">
    </testcase>
  </testsuite>
  <testsuite name="Editor Side Editing - collapsed selection" timestamp="2017-02-22T23:10:19" tests="8" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="Editor Side Editing - collapsed selection replace at selection" time="0.001" classname="replace at selection">
    </testcase>
    <testcase name="Editor Side Editing - collapsed selection replace at selection 2" time="0" classname="replace at selection 2">
    </testcase>
    <testcase name="Editor Side Editing - collapsed selection ModelLine.applyEdits uses `isReplace`" time="0" classname="ModelLine.applyEdits uses `isReplace`">
    </testcase>
    <testcase name="Editor Side Editing - collapsed selection insert at selection" time="0.001" classname="insert at selection">
    </testcase>
    <testcase name="Editor Side Editing - collapsed selection insert at selection sitting on max column" time="0" classname="insert at selection sitting on max column">
    </testcase>
    <testcase name="Editor Side Editing - collapsed selection issue #3994: replace on top of selection" time="0.001" classname="issue #3994: replace on top of selection">
    </testcase>
    <testcase name="Editor Side Editing - collapsed selection issue #15267: Suggestion that adds a line - cursor goes to the wrong line " time="0" classname="issue #15267: Suggestion that adds a line - cursor goes to the wrong line ">
    </testcase>
    <testcase name="Editor Side Editing - collapsed selection issue #15236: Selections broke after deleting text using vscode.TextEditor.edit " time="0" classname="issue #15236: Selections broke after deleting text using vscode.TextEditor.edit ">
    </testcase>
  </testsuite>
  <testsuite name="Cursor move command test" timestamp="2017-02-22T23:10:19" tests="39" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.009000000000000001">
    <testcase name="Cursor move command test move left should move to left character" time="0.001" classname="move left should move to left character">
    </testcase>
    <testcase name="Cursor move command test move left should move to left by n characters" time="0" classname="move left should move to left by n characters">
    </testcase>
    <testcase name="Cursor move command test move left should move to left by half line" time="0" classname="move left should move to left by half line">
    </testcase>
    <testcase name="Cursor move command test move left moves to previous line" time="0" classname="move left moves to previous line">
    </testcase>
    <testcase name="Cursor move command test move right should move to right character" time="0.002" classname="move right should move to right character">
    </testcase>
    <testcase name="Cursor move command test move right should move to right by n characters" time="0" classname="move right should move to right by n characters">
    </testcase>
    <testcase name="Cursor move command test move right should move to right by half line" time="0" classname="move right should move to right by half line">
    </testcase>
    <testcase name="Cursor move command test move right moves to next line" time="0" classname="move right moves to next line">
    </testcase>
    <testcase name="Cursor move command test move to first character of line from middle" time="0" classname="move to first character of line from middle">
    </testcase>
    <testcase name="Cursor move command test move to first character of line from first non white space character" time="0.001" classname="move to first character of line from first non white space character">
    </testcase>
    <testcase name="Cursor move command test move to first character of line from first character" time="0.001" classname="move to first character of line from first character">
    </testcase>
    <testcase name="Cursor move command test move to first non white space character of line from middle" time="0" classname="move to first non white space character of line from middle">
    </testcase>
    <testcase name="Cursor move command test move to first non white space character of line from first non white space character" time="0" classname="move to first non white space character of line from first non white space character">
    </testcase>
    <testcase name="Cursor move command test move to first non white space character of line from first character" time="0.001" classname="move to first non white space character of line from first character">
    </testcase>
    <testcase name="Cursor move command test move to end of line from middle" time="0" classname="move to end of line from middle">
    </testcase>
    <testcase name="Cursor move command test move to end of line from last non white space character" time="0" classname="move to end of line from last non white space character">
    </testcase>
    <testcase name="Cursor move command test move to end of line from line end" time="0" classname="move to end of line from line end">
    </testcase>
    <testcase name="Cursor move command test move to last non white space character from middle" time="0" classname="move to last non white space character from middle">
    </testcase>
    <testcase name="Cursor move command test move to last non white space character from last non white space character" time="0" classname="move to last non white space character from last non white space character">
    </testcase>
    <testcase name="Cursor move command test move to last non white space character from line end" time="0" classname="move to last non white space character from line end">
    </testcase>
    <testcase name="Cursor move command test move to center of line not from center" time="0" classname="move to center of line not from center">
    </testcase>
    <testcase name="Cursor move command test move to center of line from center" time="0" classname="move to center of line from center">
    </testcase>
    <testcase name="Cursor move command test move to center of line from start" time="0" classname="move to center of line from start">
    </testcase>
    <testcase name="Cursor move command test move to center of line from end" time="0" classname="move to center of line from end">
    </testcase>
    <testcase name="Cursor move command test move up by cursor move command" time="0" classname="move up by cursor move command">
    </testcase>
    <testcase name="Cursor move command test move up by model line cursor move command" time="0" classname="move up by model line cursor move command">
    </testcase>
    <testcase name="Cursor move command test move down by model line cursor move command" time="0" classname="move down by model line cursor move command">
    </testcase>
    <testcase name="Cursor move command test move up with selection by cursor move command" time="0" classname="move up with selection by cursor move command">
    </testcase>
    <testcase name="Cursor move command test move up and down with tabs by cursor move command" time="0" classname="move up and down with tabs by cursor move command">
    </testcase>
    <testcase name="Cursor move command test move up and down with end of lines starting from a long one by cursor move command" time="0.001" classname="move up and down with end of lines starting from a long one by cursor move command">
    </testcase>
    <testcase name="Cursor move command test move to view top line moves to first visible line if it is first line" time="0" classname="move to view top line moves to first visible line if it is first line">
    </testcase>
    <testcase name="Cursor move command test move to view top line moves to top visible line when first line is not visible" time="0" classname="move to view top line moves to top visible line when first line is not visible">
    </testcase>
    <testcase name="Cursor move command test move to view top line moves to nth line from top" time="0.001" classname="move to view top line moves to nth line from top">
    </testcase>
    <testcase name="Cursor move command test move to view top line moves to last line if n is greater than last visible line number" time="0" classname="move to view top line moves to last line if n is greater than last visible line number">
    </testcase>
    <testcase name="Cursor move command test move to view center line moves to the center line" time="0" classname="move to view center line moves to the center line">
    </testcase>
    <testcase name="Cursor move command test move to view bottom line moves to last visible line if it is last line" time="0" classname="move to view bottom line moves to last visible line if it is last line">
    </testcase>
    <testcase name="Cursor move command test move to view bottom line moves to last visible line when last line is not visible" time="0.001" classname="move to view bottom line moves to last visible line when last line is not visible">
    </testcase>
    <testcase name="Cursor move command test move to view bottom line moves to nth line from bottom" time="0" classname="move to view bottom line moves to nth line from bottom">
    </testcase>
    <testcase name="Cursor move command test move to view bottom line moves to first line if n is lesser than first visible line number" time="0" classname="move to view bottom line moves to first line if n is lesser than first visible line number">
    </testcase>
  </testsuite>
  <testsuite name="Editor Controller - Cursor" timestamp="2017-02-22T23:10:19" tests="79" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.018000000000000002">
    <testcase name="Editor Controller - Cursor cursor initialized" time="0" classname="cursor initialized">
    </testcase>
    <testcase name="Editor Controller - Cursor no move" time="0" classname="no move">
    </testcase>
    <testcase name="Editor Controller - Cursor move" time="0" classname="move">
    </testcase>
    <testcase name="Editor Controller - Cursor move in selection mode" time="0" classname="move in selection mode">
    </testcase>
    <testcase name="Editor Controller - Cursor move beyond line end" time="0" classname="move beyond line end">
    </testcase>
    <testcase name="Editor Controller - Cursor move empty line" time="0" classname="move empty line">
    </testcase>
    <testcase name="Editor Controller - Cursor move one char line" time="0" classname="move one char line">
    </testcase>
    <testcase name="Editor Controller - Cursor selection down" time="0" classname="selection down">
    </testcase>
    <testcase name="Editor Controller - Cursor move and then select" time="0" classname="move and then select">
    </testcase>
    <testcase name="Editor Controller - Cursor move left on top left position" time="0" classname="move left on top left position">
    </testcase>
    <testcase name="Editor Controller - Cursor move left" time="0" classname="move left">
    </testcase>
    <testcase name="Editor Controller - Cursor move left with surrogate pair" time="0" classname="move left with surrogate pair">
    </testcase>
    <testcase name="Editor Controller - Cursor move left goes to previous row" time="0" classname="move left goes to previous row">
    </testcase>
    <testcase name="Editor Controller - Cursor move left selection" time="0" classname="move left selection">
    </testcase>
    <testcase name="Editor Controller - Cursor move word left" time="0.001" classname="move word left">
    </testcase>
    <testcase name="Editor Controller - Cursor move word left selection" time="0" classname="move word left selection">
    </testcase>
    <testcase name="Editor Controller - Cursor move right on bottom right position" time="0" classname="move right on bottom right position">
    </testcase>
    <testcase name="Editor Controller - Cursor move right" time="0" classname="move right">
    </testcase>
    <testcase name="Editor Controller - Cursor move right with surrogate pair" time="0.001" classname="move right with surrogate pair">
    </testcase>
    <testcase name="Editor Controller - Cursor move right goes to next row" time="0" classname="move right goes to next row">
    </testcase>
    <testcase name="Editor Controller - Cursor move right selection" time="0" classname="move right selection">
    </testcase>
    <testcase name="Editor Controller - Cursor move word right" time="0.001" classname="move word right">
    </testcase>
    <testcase name="Editor Controller - Cursor move word right selection" time="0" classname="move word right selection">
    </testcase>
    <testcase name="Editor Controller - Cursor move down" time="0" classname="move down">
    </testcase>
    <testcase name="Editor Controller - Cursor move down with selection" time="0" classname="move down with selection">
    </testcase>
    <testcase name="Editor Controller - Cursor move down with tabs" time="0" classname="move down with tabs">
    </testcase>
    <testcase name="Editor Controller - Cursor move up" time="0" classname="move up">
    </testcase>
    <testcase name="Editor Controller - Cursor move up with selection" time="0" classname="move up with selection">
    </testcase>
    <testcase name="Editor Controller - Cursor move up and down with tabs" time="0" classname="move up and down with tabs">
    </testcase>
    <testcase name="Editor Controller - Cursor move up and down with end of lines starting from a long one" time="0.001" classname="move up and down with end of lines starting from a long one">
    </testcase>
    <testcase name="Editor Controller - Cursor move to beginning of line" time="0" classname="move to beginning of line">
    </testcase>
    <testcase name="Editor Controller - Cursor move to beginning of line from within line" time="0" classname="move to beginning of line from within line">
    </testcase>
    <testcase name="Editor Controller - Cursor move to beginning of line from whitespace at beginning of line" time="0" classname="move to beginning of line from whitespace at beginning of line">
    </testcase>
    <testcase name="Editor Controller - Cursor move to beginning of line from within line selection" time="0" classname="move to beginning of line from within line selection">
    </testcase>
    <testcase name="Editor Controller - Cursor move to beginning of line with selection multiline forward" time="0" classname="move to beginning of line with selection multiline forward">
    </testcase>
    <testcase name="Editor Controller - Cursor move to beginning of line with selection multiline backward" time="0" classname="move to beginning of line with selection multiline backward">
    </testcase>
    <testcase name="Editor Controller - Cursor move to beginning of line with selection single line forward" time="0" classname="move to beginning of line with selection single line forward">
    </testcase>
    <testcase name="Editor Controller - Cursor move to beginning of line with selection single line backward" time="0" classname="move to beginning of line with selection single line backward">
    </testcase>
    <testcase name="Editor Controller - Cursor issue #15401: &quot;End&quot; key is behaving weird when text is selected part 1" time="0" classname="issue #15401: &quot;End&quot; key is behaving weird when text is selected part 1">
    </testcase>
    <testcase name="Editor Controller - Cursor issue #17011: Shift+home/end now go to the end of the selection start&apos;s line, not the selection&apos;s end" time="0" classname="issue #17011: Shift+home/end now go to the end of the selection start&apos;s line, not the selection&apos;s end">
    </testcase>
    <testcase name="Editor Controller - Cursor move to end of line" time="0" classname="move to end of line">
    </testcase>
    <testcase name="Editor Controller - Cursor move to end of line from within line" time="0" classname="move to end of line from within line">
    </testcase>
    <testcase name="Editor Controller - Cursor move to end of line from whitespace at end of line" time="0" classname="move to end of line from whitespace at end of line">
    </testcase>
    <testcase name="Editor Controller - Cursor move to end of line from within line selection" time="0" classname="move to end of line from within line selection">
    </testcase>
    <testcase name="Editor Controller - Cursor move to end of line with selection multiline forward" time="0" classname="move to end of line with selection multiline forward">
    </testcase>
    <testcase name="Editor Controller - Cursor move to end of line with selection multiline backward" time="0" classname="move to end of line with selection multiline backward">
    </testcase>
    <testcase name="Editor Controller - Cursor move to end of line with selection single line forward" time="0" classname="move to end of line with selection single line forward">
    </testcase>
    <testcase name="Editor Controller - Cursor move to end of line with selection single line backward" time="0" classname="move to end of line with selection single line backward">
    </testcase>
    <testcase name="Editor Controller - Cursor issue #15401: &quot;End&quot; key is behaving weird when text is selected part 2" time="0" classname="issue #15401: &quot;End&quot; key is behaving weird when text is selected part 2">
    </testcase>
    <testcase name="Editor Controller - Cursor move to beginning of buffer" time="0.001" classname="move to beginning of buffer">
    </testcase>
    <testcase name="Editor Controller - Cursor move to beginning of buffer from within first line" time="0.001" classname="move to beginning of buffer from within first line">
    </testcase>
    <testcase name="Editor Controller - Cursor move to beginning of buffer from within another line" time="0" classname="move to beginning of buffer from within another line">
    </testcase>
    <testcase name="Editor Controller - Cursor move to beginning of buffer from within first line selection" time="0" classname="move to beginning of buffer from within first line selection">
    </testcase>
    <testcase name="Editor Controller - Cursor move to beginning of buffer from within another line selection" time="0" classname="move to beginning of buffer from within another line selection">
    </testcase>
    <testcase name="Editor Controller - Cursor move to end of buffer" time="0" classname="move to end of buffer">
    </testcase>
    <testcase name="Editor Controller - Cursor move to end of buffer from within last line" time="0" classname="move to end of buffer from within last line">
    </testcase>
    <testcase name="Editor Controller - Cursor move to end of buffer from within another line" time="0" classname="move to end of buffer from within another line">
    </testcase>
    <testcase name="Editor Controller - Cursor move to end of buffer from within last line selection" time="0" classname="move to end of buffer from within last line selection">
    </testcase>
    <testcase name="Editor Controller - Cursor move to end of buffer from within another line selection" time="0.001" classname="move to end of buffer from within another line selection">
    </testcase>
    <testcase name="Editor Controller - Cursor delete word left for non-empty selection" time="0.002" classname="delete word left for non-empty selection">
    </testcase>
    <testcase name="Editor Controller - Cursor delete word left for caret at beginning of document" time="0" classname="delete word left for caret at beginning of document">
    </testcase>
    <testcase name="Editor Controller - Cursor delete word left for caret at end of whitespace" time="0" classname="delete word left for caret at end of whitespace">
    </testcase>
    <testcase name="Editor Controller - Cursor delete word left for caret just behind a word" time="0" classname="delete word left for caret just behind a word">
    </testcase>
    <testcase name="Editor Controller - Cursor delete word left for caret inside of a word" time="0" classname="delete word left for caret inside of a word">
    </testcase>
    <testcase name="Editor Controller - Cursor delete word right for non-empty selection" time="0.001" classname="delete word right for non-empty selection">
    </testcase>
    <testcase name="Editor Controller - Cursor delete word right for caret at end of document" time="0" classname="delete word right for caret at end of document">
    </testcase>
    <testcase name="Editor Controller - Cursor delete word right for caret at beggining of whitespace" time="0" classname="delete word right for caret at beggining of whitespace">
    </testcase>
    <testcase name="Editor Controller - Cursor delete word right for caret just before a word" time="0.001" classname="delete word right for caret just before a word">
    </testcase>
    <testcase name="Editor Controller - Cursor delete word right for caret inside of a word" time="0" classname="delete word right for caret inside of a word">
    </testcase>
    <testcase name="Editor Controller - Cursor select all" time="0" classname="select all">
    </testcase>
    <testcase name="Editor Controller - Cursor expandLineSelection" time="0" classname="expandLineSelection">
    </testcase>
    <testcase name="Editor Controller - Cursor no move doesn&apos;t trigger event" time="0" classname="no move doesn&apos;t trigger event">
    </testcase>
    <testcase name="Editor Controller - Cursor move eventing" time="0" classname="move eventing">
    </testcase>
    <testcase name="Editor Controller - Cursor move in selection mode eventing" time="0" classname="move in selection mode eventing">
    </testcase>
    <testcase name="Editor Controller - Cursor saveState &amp; restoreState" time="0" classname="saveState &amp; restoreState">
    </testcase>
    <testcase name="Editor Controller - Cursor Independent model edit 1" time="0" classname="Independent model edit 1">
    </testcase>
    <testcase name="Editor Controller - Cursor column select 1" time="0.002" classname="column select 1">
    </testcase>
    <testcase name="Editor Controller - Cursor issue #4905 - column select is biased to the right" time="0" classname="issue #4905 - column select is biased to the right">
    </testcase>
    <testcase name="Editor Controller - Cursor column select with keyboard" time="0.005" classname="column select with keyboard">
    </testcase>
  </testsuite>
  <testsuite name="Editor Controller - Regression tests" timestamp="2017-02-22T23:10:19" tests="39" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.03700000000000002">
    <testcase name="Editor Controller - Regression tests Bug 9121: Auto indent + undo + redo is funky" time="0.004" classname="Bug 9121: Auto indent + undo + redo is funky">
    </testcase>
    <testcase name="Editor Controller - Regression tests bug #16543: Tab should indent to correct indentation spot immediately" time="0.001" classname="bug #16543: Tab should indent to correct indentation spot immediately">
    </testcase>
    <testcase name="Editor Controller - Regression tests bug #2938 (1): When pressing Tab on white-space only lines, indent straight to the right spot (similar to empty lines)" time="0.001" classname="bug #2938 (1): When pressing Tab on white-space only lines, indent straight to the right spot (similar to empty lines)">
    </testcase>
    <testcase name="Editor Controller - Regression tests bug #2938 (2): When pressing Tab on white-space only lines, indent straight to the right spot (similar to empty lines)" time="0" classname="bug #2938 (2): When pressing Tab on white-space only lines, indent straight to the right spot (similar to empty lines)">
    </testcase>
    <testcase name="Editor Controller - Regression tests bug #2938 (3): When pressing Tab on white-space only lines, indent straight to the right spot (similar to empty lines)" time="0.001" classname="bug #2938 (3): When pressing Tab on white-space only lines, indent straight to the right spot (similar to empty lines)">
    </testcase>
    <testcase name="Editor Controller - Regression tests bug #2938 (4): When pressing Tab on white-space only lines, indent straight to the right spot (similar to empty lines)" time="0.001" classname="bug #2938 (4): When pressing Tab on white-space only lines, indent straight to the right spot (similar to empty lines)">
    </testcase>
    <testcase name="Editor Controller - Regression tests Bug 18276:[editor] Indentation broken when selection is empty" time="0.001" classname="Bug 18276:[editor] Indentation broken when selection is empty">
    </testcase>
    <testcase name="Editor Controller - Regression tests bug #16815:Shift+Tab doesn&apos;t go back to tabstop" time="0.001" classname="bug #16815:Shift+Tab doesn&apos;t go back to tabstop">
    </testcase>
    <testcase name="Editor Controller - Regression tests Bug #18293:[regression][editor] Can&apos;t outdent whitespace line" time="0" classname="Bug #18293:[regression][editor] Can&apos;t outdent whitespace line">
    </testcase>
    <testcase name="Editor Controller - Regression tests Bug #16657: [editor] Tab on empty line of zero indentation moves cursor to position (1,1)" time="0.001" classname="Bug #16657: [editor] Tab on empty line of zero indentation moves cursor to position (1,1)">
    </testcase>
    <testcase name="Editor Controller - Regression tests bug #16740: [editor] Cut line doesn&apos;t quite cut the last line" time="0.001" classname="bug #16740: [editor] Cut line doesn&apos;t quite cut the last line">
    </testcase>
    <testcase name="Editor Controller - Regression tests Bug #11476: Double bracket surrounding + undo is broken" time="0.001" classname="Bug #11476: Double bracket surrounding + undo is broken">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #1140: Backspace stops prematurely" time="0" classname="issue #1140: Backspace stops prematurely">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #1336: Insert cursor below on last line adds a cursor to the end of the current line" time="0.001" classname="issue #1336: Insert cursor below on last line adds a cursor to the end of the current line">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #2205: Multi-cursor pastes in reverse order" time="0.001" classname="issue #2205: Multi-cursor pastes in reverse order">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #10212: Pasting entire line does not replace selection" time="0" classname="issue #10212: Pasting entire line does not replace selection">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #3071: Investigate why undo stack gets corrupted" time="0.001" classname="issue #3071: Investigate why undo stack gets corrupted">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #12950: Cannot Double Click To Insert Emoji Using OSX Emoji Panel" time="0" classname="issue #12950: Cannot Double Click To Insert Emoji Using OSX Emoji Panel">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #3463: pressing tab adds spaces, but not as many as for a tab" time="0" classname="issue #3463: pressing tab adds spaces, but not as many as for a tab">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #4312: trying to type a tab character over a sequence of spaces results in unexpected behaviour" time="0.001" classname="issue #4312: trying to type a tab character over a sequence of spaces results in unexpected behaviour">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #832: deleteWordLeft" time="0.001" classname="issue #832: deleteWordLeft">
    </testcase>
    <testcase name="Editor Controller - Regression tests deleteWordStartLeft" time="0" classname="deleteWordStartLeft">
    </testcase>
    <testcase name="Editor Controller - Regression tests deleteWordEndLeft" time="0" classname="deleteWordEndLeft">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #832: deleteWordRight" time="0.001" classname="issue #832: deleteWordRight">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #3882: deleteWordRight" time="0.001" classname="issue #3882: deleteWordRight">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #3882: deleteWordStartRight" time="0" classname="issue #3882: deleteWordStartRight">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #3882: deleteWordEndRight" time="0.001" classname="issue #3882: deleteWordEndRight">
    </testcase>
    <testcase name="Editor Controller - Regression tests deleteWordStartRight" time="0.001" classname="deleteWordStartRight">
    </testcase>
    <testcase name="Editor Controller - Regression tests deleteWordEndRight" time="0" classname="deleteWordEndRight">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #832: moveWordLeft" time="0" classname="issue #832: moveWordLeft">
    </testcase>
    <testcase name="Editor Controller - Regression tests moveWordStartLeft" time="0.001" classname="moveWordStartLeft">
    </testcase>
    <testcase name="Editor Controller - Regression tests moveWordEndLeft" time="0.001" classname="moveWordEndLeft">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #832: moveWordRight" time="0.001" classname="issue #832: moveWordRight">
    </testcase>
    <testcase name="Editor Controller - Regression tests moveWordEndRight" time="0.001" classname="moveWordEndRight">
    </testcase>
    <testcase name="Editor Controller - Regression tests moveWordStartRight" time="0.001" classname="moveWordStartRight">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #832: word right" time="0.003" classname="issue #832: word right">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #3882 (1): Ctrl+Delete removing entire line when used at the end of line" time="0" classname="issue #3882 (1): Ctrl+Delete removing entire line when used at the end of line">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #3882 (2): Ctrl+Delete removing entire line when used at the end of line" time="0.001" classname="issue #3882 (2): Ctrl+Delete removing entire line when used at the end of line">
    </testcase>
    <testcase name="Editor Controller - Regression tests issue #9675: Undo/Redo adds a stop in between CHN Characters" time="0.006" classname="issue #9675: Undo/Redo adds a stop in between CHN Characters">
    </testcase>
  </testsuite>
  <testsuite name="Editor Controller - Cursor Configuration" timestamp="2017-02-22T23:10:19" tests="15" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.017">
    <testcase name="Editor Controller - Cursor Configuration Cursor honors insertSpaces configuration on new line" time="0" classname="Cursor honors insertSpaces configuration on new line">
    </testcase>
    <testcase name="Editor Controller - Cursor Configuration Cursor honors insertSpaces configuration on tab" time="0.002" classname="Cursor honors insertSpaces configuration on tab">
    </testcase>
    <testcase name="Editor Controller - Cursor Configuration Enter auto-indents with insertSpaces setting 1" time="0" classname="Enter auto-indents with insertSpaces setting 1">
    </testcase>
    <testcase name="Editor Controller - Cursor Configuration Enter auto-indents with insertSpaces setting 2" time="0.001" classname="Enter auto-indents with insertSpaces setting 2">
    </testcase>
    <testcase name="Editor Controller - Cursor Configuration Enter auto-indents with insertSpaces setting 3" time="0.001" classname="Enter auto-indents with insertSpaces setting 3">
    </testcase>
    <testcase name="Editor Controller - Cursor Configuration Insert line before" time="0.001" classname="Insert line before">
    </testcase>
    <testcase name="Editor Controller - Cursor Configuration Insert line after" time="0.002" classname="Insert line after">
    </testcase>
    <testcase name="Editor Controller - Cursor Configuration removeAutoWhitespace off" time="0" classname="removeAutoWhitespace off">
    </testcase>
    <testcase name="Editor Controller - Cursor Configuration removeAutoWhitespace on: removes only whitespace the cursor added 1" time="0" classname="removeAutoWhitespace on: removes only whitespace the cursor added 1">
    </testcase>
    <testcase name="Editor Controller - Cursor Configuration issue #6862: Editor removes auto inserted indentation when formatting on type" time="0.001" classname="issue #6862: Editor removes auto inserted indentation when formatting on type">
    </testcase>
    <testcase name="Editor Controller - Cursor Configuration removeAutoWhitespace on: removes only whitespace the cursor added 2" time="0.004" classname="removeAutoWhitespace on: removes only whitespace the cursor added 2">
    </testcase>
    <testcase name="Editor Controller - Cursor Configuration removeAutoWhitespace on: test 1" time="0.001" classname="removeAutoWhitespace on: test 1">
    </testcase>
    <testcase name="Editor Controller - Cursor Configuration UseTabStops is off" time="0.001" classname="UseTabStops is off">
    </testcase>
    <testcase name="Editor Controller - Cursor Configuration Backspace removes whitespaces with tab size" time="0.001" classname="Backspace removes whitespaces with tab size">
    </testcase>
    <testcase name="Editor Controller - Cursor Configuration PR #5423: Auto indent + undo + redo is funky" time="0.002" classname="PR #5423: Auto indent + undo + redo is funky">
    </testcase>
  </testsuite>
  <testsuite name="Editor Controller - Indentation Rules" timestamp="2017-02-22T23:10:19" tests="16" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.021000000000000005">
    <testcase name="Editor Controller - Indentation Rules Enter honors increaseIndentPattern" time="0.005" classname="Enter honors increaseIndentPattern">
    </testcase>
    <testcase name="Editor Controller - Indentation Rules Enter honors decreaseIndentPattern" time="0.001" classname="Enter honors decreaseIndentPattern">
    </testcase>
    <testcase name="Editor Controller - Indentation Rules Enter honors unIndentedLinePattern" time="0.001" classname="Enter honors unIndentedLinePattern">
    </testcase>
    <testcase name="Editor Controller - Indentation Rules Enter honors indentNextLinePattern" time="0.001" classname="Enter honors indentNextLinePattern">
    </testcase>
    <testcase name="Editor Controller - Indentation Rules Enter adjusts indentation of current line 1" time="0" classname="Enter adjusts indentation of current line 1">
    </testcase>
    <testcase name="Editor Controller - Indentation Rules Enter adjusts indentation of current line 2" time="0.001" classname="Enter adjusts indentation of current line 2">
    </testcase>
    <testcase name="Editor Controller - Indentation Rules Enter supports selection 1" time="0.003" classname="Enter supports selection 1">
    </testcase>
    <testcase name="Editor Controller - Indentation Rules Enter supports selection 2" time="0.002" classname="Enter supports selection 2">
    </testcase>
    <testcase name="Editor Controller - Indentation Rules Enter honors tabSize and insertSpaces 1" time="0.001" classname="Enter honors tabSize and insertSpaces 1">
    </testcase>
    <testcase name="Editor Controller - Indentation Rules Enter honors tabSize and insertSpaces 2" time="0.001" classname="Enter honors tabSize and insertSpaces 2">
    </testcase>
    <testcase name="Editor Controller - Indentation Rules Enter honors tabSize and insertSpaces 3" time="0.001" classname="Enter honors tabSize and insertSpaces 3">
    </testcase>
    <testcase name="Editor Controller - Indentation Rules Enter supports intentional indentation" time="0.001" classname="Enter supports intentional indentation">
    </testcase>
    <testcase name="Editor Controller - Indentation Rules issue Microsoft/monaco-editor#108 part 1/2: Auto indentation on Enter with selection is half broken" time="0.001" classname="issue Microsoft/monaco-editor#108 part 1/2: Auto indentation on Enter with selection is half broken">
    </testcase>
    <testcase name="Editor Controller - Indentation Rules issue Microsoft/monaco-editor#108 part 2/2: Auto indentation on Enter with selection is half broken" time="0" classname="issue Microsoft/monaco-editor#108 part 2/2: Auto indentation on Enter with selection is half broken">
    </testcase>
    <testcase name="Editor Controller - Indentation Rules onEnter works if there are no indentation rules" time="0" classname="onEnter works if there are no indentation rules">
    </testcase>
    <testcase name="Editor Controller - Indentation Rules onEnter works if there are no indentation rules 2" time="0.002" classname="onEnter works if there are no indentation rules 2">
    </testcase>
  </testsuite>
  <testsuite name="ElectricCharacter" timestamp="2017-02-22T23:10:19" tests="13" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.008">
    <testcase name="ElectricCharacter does nothing if no electric char" time="0.001" classname="does nothing if no electric char">
    </testcase>
    <testcase name="ElectricCharacter indents in order to match bracket" time="0.001" classname="indents in order to match bracket">
    </testcase>
    <testcase name="ElectricCharacter unindents in order to match bracket" time="0" classname="unindents in order to match bracket">
    </testcase>
    <testcase name="ElectricCharacter matches with correct bracket" time="0.001" classname="matches with correct bracket">
    </testcase>
    <testcase name="ElectricCharacter does nothing if bracket does not match" time="0" classname="does nothing if bracket does not match">
    </testcase>
    <testcase name="ElectricCharacter matches bracket even in line with content" time="0.001" classname="matches bracket even in line with content">
    </testcase>
    <testcase name="ElectricCharacter is no-op if bracket is lined up" time="0" classname="is no-op if bracket is lined up">
    </testcase>
    <testcase name="ElectricCharacter is no-op if there is non-whitespace text before" time="0.001" classname="is no-op if there is non-whitespace text before">
    </testcase>
    <testcase name="ElectricCharacter is no-op if pairs are all matched before" time="0" classname="is no-op if pairs are all matched before">
    </testcase>
    <testcase name="ElectricCharacter is no-op if matching bracket is on the same line" time="0.001" classname="is no-op if matching bracket is on the same line">
    </testcase>
    <testcase name="ElectricCharacter is no-op if the line has other content" time="0.001" classname="is no-op if the line has other content">
    </testcase>
    <testcase name="ElectricCharacter appends text" time="0.001" classname="appends text">
    </testcase>
    <testcase name="ElectricCharacter appends text 2" time="0" classname="appends text 2">
    </testcase>
  </testsuite>
  <testsuite name="Editor Contrib - Line Comment Command" timestamp="2017-02-22T23:10:19" tests="17" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.012000000000000004">
    <testcase name="Editor Contrib - Line Comment Command comment single line" time="0.002" classname="comment single line">
    </testcase>
    <testcase name="Editor Contrib - Line Comment Command _analyzeLines" time="0" classname="_analyzeLines">
    </testcase>
    <testcase name="Editor Contrib - Line Comment Command _normalizeInsertionPoint" time="0.001" classname="_normalizeInsertionPoint">
    </testcase>
    <testcase name="Editor Contrib - Line Comment Command detects indentation" time="0.001" classname="detects indentation">
    </testcase>
    <testcase name="Editor Contrib - Line Comment Command detects mixed indentation" time="0" classname="detects mixed indentation">
    </testcase>
    <testcase name="Editor Contrib - Line Comment Command ignores whitespace lines" time="0" classname="ignores whitespace lines">
    </testcase>
    <testcase name="Editor Contrib - Line Comment Command removes its own" time="0" classname="removes its own">
    </testcase>
    <testcase name="Editor Contrib - Line Comment Command works in only whitespace" time="0.001" classname="works in only whitespace">
    </testcase>
    <testcase name="Editor Contrib - Line Comment Command bug 9697 - whitespace before comment token" time="0" classname="bug 9697 - whitespace before comment token">
    </testcase>
    <testcase name="Editor Contrib - Line Comment Command bug 10162 - line comment before caret" time="0.002" classname="bug 10162 - line comment before caret">
    </testcase>
    <testcase name="Editor Contrib - Line Comment Command comment single line - leading whitespace" time="0" classname="comment single line - leading whitespace">
    </testcase>
    <testcase name="Editor Contrib - Line Comment Command ignores invisible selection" time="0" classname="ignores invisible selection">
    </testcase>
    <testcase name="Editor Contrib - Line Comment Command multiple lines" time="0.001" classname="multiple lines">
    </testcase>
    <testcase name="Editor Contrib - Line Comment Command multiple modes on multiple lines" time="0.001" classname="multiple modes on multiple lines">
    </testcase>
    <testcase name="Editor Contrib - Line Comment Command toggle single line" time="0.001" classname="toggle single line">
    </testcase>
    <testcase name="Editor Contrib - Line Comment Command toggle multiple lines" time="0.001" classname="toggle multiple lines">
    </testcase>
    <testcase name="Editor Contrib - Line Comment Command issue #2837 &quot;Add Line Comment&quot; fault when blank lines involved" time="0.001" classname="issue #2837 &quot;Add Line Comment&quot; fault when blank lines involved">
    </testcase>
  </testsuite>
  <testsuite name="Editor Contrib - Line Comment As Block Comment" timestamp="2017-02-22T23:10:19" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.005">
    <testcase name="Editor Contrib - Line Comment As Block Comment fall back to block comment command" time="0.002" classname="fall back to block comment command">
    </testcase>
    <testcase name="Editor Contrib - Line Comment As Block Comment fall back to block comment command - toggle" time="0.001" classname="fall back to block comment command - toggle">
    </testcase>
    <testcase name="Editor Contrib - Line Comment As Block Comment bug 9513 - expand single line to uncomment auto block" time="0.001" classname="bug 9513 - expand single line to uncomment auto block">
    </testcase>
    <testcase name="Editor Contrib - Line Comment As Block Comment bug 9691 - always expand selection to line boundaries" time="0.001" classname="bug 9691 - always expand selection to line boundaries">
    </testcase>
  </testsuite>
  <testsuite name="Editor Contrib - Line Comment As Block Comment 2" timestamp="2017-02-22T23:10:19" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.007">
    <testcase name="Editor Contrib - Line Comment As Block Comment 2 no selection =&gt; uses indentation" time="0.002" classname="no selection =&gt; uses indentation">
    </testcase>
    <testcase name="Editor Contrib - Line Comment As Block Comment 2 can remove" time="0.004" classname="can remove">
    </testcase>
    <testcase name="Editor Contrib - Line Comment As Block Comment 2 issue #993: Remove comment does not work consistently in HTML" time="0.001" classname="issue #993: Remove comment does not work consistently in HTML">
    </testcase>
  </testsuite>
  <testsuite name="Editor Contrib - Block Comment Command" timestamp="2017-02-22T23:10:19" tests="8" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.013000000000000001">
    <testcase name="Editor Contrib - Block Comment Command empty selection wraps itself" time="0.001" classname="empty selection wraps itself">
    </testcase>
    <testcase name="Editor Contrib - Block Comment Command invisible selection ignored" time="0" classname="invisible selection ignored">
    </testcase>
    <testcase name="Editor Contrib - Block Comment Command bug9511" time="0.001" classname="bug9511">
    </testcase>
    <testcase name="Editor Contrib - Block Comment Command one line selection" time="0" classname="one line selection">
    </testcase>
    <testcase name="Editor Contrib - Block Comment Command one line selection toggle" time="0.002" classname="one line selection toggle">
    </testcase>
    <testcase name="Editor Contrib - Block Comment Command multi line selection" time="0" classname="multi line selection">
    </testcase>
    <testcase name="Editor Contrib - Block Comment Command multi line selection toggle" time="0.003" classname="multi line selection toggle">
    </testcase>
    <testcase name="Editor Contrib - Block Comment Command fuzzy removes" time="0.006" classname="fuzzy removes">
    </testcase>
  </testsuite>
  <testsuite name="Editor Contrib - Indentation to Spaces" timestamp="2017-02-22T23:10:19" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Editor Contrib - Indentation to Spaces single tabs only at start of line" time="0.001" classname="single tabs only at start of line">
    </testcase>
    <testcase name="Editor Contrib - Indentation to Spaces multiple tabs at start of line" time="0" classname="multiple tabs at start of line">
    </testcase>
    <testcase name="Editor Contrib - Indentation to Spaces multiple tabs" time="0.001" classname="multiple tabs">
    </testcase>
    <testcase name="Editor Contrib - Indentation to Spaces empty lines" time="0" classname="empty lines">
    </testcase>
  </testsuite>
  <testsuite name="Editor Contrib - Indentation to Tabs" timestamp="2017-02-22T23:10:19" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Editor Contrib - Indentation to Tabs spaces only at start of line" time="0" classname="spaces only at start of line">
    </testcase>
    <testcase name="Editor Contrib - Indentation to Tabs multiple spaces at start of line" time="0.001" classname="multiple spaces at start of line">
    </testcase>
    <testcase name="Editor Contrib - Indentation to Tabs multiple spaces" time="0" classname="multiple spaces">
    </testcase>
  </testsuite>
  <testsuite name="Editor Contrib - Copy Lines Command" timestamp="2017-02-22T23:10:19" tests="8" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.007">
    <testcase name="Editor Contrib - Copy Lines Command copy first line down" time="0.001" classname="copy first line down">
    </testcase>
    <testcase name="Editor Contrib - Copy Lines Command copy first line up" time="0.003" classname="copy first line up">
    </testcase>
    <testcase name="Editor Contrib - Copy Lines Command copy last line down" time="0.001" classname="copy last line down">
    </testcase>
    <testcase name="Editor Contrib - Copy Lines Command copy last line up" time="0" classname="copy last line up">
    </testcase>
    <testcase name="Editor Contrib - Copy Lines Command issue #1322: copy line up" time="0.001" classname="issue #1322: copy line up">
    </testcase>
    <testcase name="Editor Contrib - Copy Lines Command issue #1322: copy last line up" time="0" classname="issue #1322: copy last line up">
    </testcase>
    <testcase name="Editor Contrib - Copy Lines Command copy many lines up" time="0.001" classname="copy many lines up">
    </testcase>
    <testcase name="Editor Contrib - Copy Lines Command ignore empty selection" time="0" classname="ignore empty selection">
    </testcase>
  </testsuite>
  <testsuite name="Editor Contrib - Delete Lines Command" timestamp="2017-02-22T23:10:19" tests="9" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.008">
    <testcase name="Editor Contrib - Delete Lines Command empty selection in middle of lines" time="0.001" classname="empty selection in middle of lines">
    </testcase>
    <testcase name="Editor Contrib - Delete Lines Command empty selection at top of lines" time="0.002" classname="empty selection at top of lines">
    </testcase>
    <testcase name="Editor Contrib - Delete Lines Command empty selection at end of lines" time="0.002" classname="empty selection at end of lines">
    </testcase>
    <testcase name="Editor Contrib - Delete Lines Command with selection in middle of lines" time="0.001" classname="with selection in middle of lines">
    </testcase>
    <testcase name="Editor Contrib - Delete Lines Command with selection at top of lines" time="0.001" classname="with selection at top of lines">
    </testcase>
    <testcase name="Editor Contrib - Delete Lines Command with selection at end of lines" time="0" classname="with selection at end of lines">
    </testcase>
    <testcase name="Editor Contrib - Delete Lines Command with full line selection in middle of lines" time="0" classname="with full line selection in middle of lines">
    </testcase>
    <testcase name="Editor Contrib - Delete Lines Command with full line selection at top of lines" time="0.001" classname="with full line selection at top of lines">
    </testcase>
    <testcase name="Editor Contrib - Delete Lines Command with full line selection at end of lines" time="0" classname="with full line selection at end of lines">
    </testcase>
  </testsuite>
  <testsuite name="Editor Contrib - Move Lines Command" timestamp="2017-02-22T23:10:19" tests="10" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.011">
    <testcase name="Editor Contrib - Move Lines Command move first up / last down disabled" time="0.001" classname="move first up / last down disabled">
    </testcase>
    <testcase name="Editor Contrib - Move Lines Command move first line down" time="0.002" classname="move first line down">
    </testcase>
    <testcase name="Editor Contrib - Move Lines Command move 2nd line up" time="0" classname="move 2nd line up">
    </testcase>
    <testcase name="Editor Contrib - Move Lines Command issue #1322a: move 2nd line up" time="0.001" classname="issue #1322a: move 2nd line up">
    </testcase>
    <testcase name="Editor Contrib - Move Lines Command issue #1322b: move last line up" time="0" classname="issue #1322b: move last line up">
    </testcase>
    <testcase name="Editor Contrib - Move Lines Command issue #1322c: move last line selected up" time="0.001" classname="issue #1322c: move last line selected up">
    </testcase>
    <testcase name="Editor Contrib - Move Lines Command move last line up" time="0.002" classname="move last line up">
    </testcase>
    <testcase name="Editor Contrib - Move Lines Command move 4th line down" time="0" classname="move 4th line down">
    </testcase>
    <testcase name="Editor Contrib - Move Lines Command move multiple lines down" time="0.004" classname="move multiple lines down">
    </testcase>
    <testcase name="Editor Contrib - Move Lines Command invisible selection is ignored" time="0" classname="invisible selection is ignored">
    </testcase>
  </testsuite>
  <testsuite name="Editor Contrib - Sort Lines Command" timestamp="2017-02-22T23:10:19" tests="7" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.005">
    <testcase name="Editor Contrib - Sort Lines Command no op unless at least two lines selected 1" time="0.002" classname="no op unless at least two lines selected 1">
    </testcase>
    <testcase name="Editor Contrib - Sort Lines Command no op unless at least two lines selected 2" time="0" classname="no op unless at least two lines selected 2">
    </testcase>
    <testcase name="Editor Contrib - Sort Lines Command sorting two lines ascending" time="0" classname="sorting two lines ascending">
    </testcase>
    <testcase name="Editor Contrib - Sort Lines Command sorting first 4 lines ascending" time="0.001" classname="sorting first 4 lines ascending">
    </testcase>
    <testcase name="Editor Contrib - Sort Lines Command sorting all lines ascending" time="0" classname="sorting all lines ascending">
    </testcase>
    <testcase name="Editor Contrib - Sort Lines Command sorting first 4 lines desscending" time="0.001" classname="sorting first 4 lines desscending">
    </testcase>
    <testcase name="Editor Contrib - Sort Lines Command sorting all lines descending" time="0.001" classname="sorting all lines descending">
    </testcase>
  </testsuite>
  <testsuite name="Editor Commands - ShiftCommand" timestamp="2017-02-22T23:10:19" tests="20" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.037000000000000005">
    <testcase name="Editor Commands - ShiftCommand Bug 9503: Shifting without any selection" time="0" classname="Bug 9503: Shifting without any selection">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand shift on single line selection 1" time="0.001" classname="shift on single line selection 1">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand shift on single line selection 2" time="0" classname="shift on single line selection 2">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand simple shift" time="0.001" classname="simple shift">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand shifting on two separate lines" time="0.003" classname="shifting on two separate lines">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand shifting on two lines" time="0.001" classname="shifting on two lines">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand shifting on two lines again" time="0.003" classname="shifting on two lines again">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand shifting at end of file" time="0.001" classname="shifting at end of file">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand issue #1120 TAB should not indent empty lines in a multi-line selection" time="0.004" classname="issue #1120 TAB should not indent empty lines in a multi-line selection">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand unshift on single line selection 1" time="0.002" classname="unshift on single line selection 1">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand unshift on single line selection 2" time="0.001" classname="unshift on single line selection 2">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand simple unshift" time="0" classname="simple unshift">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand unshifting on two lines 1" time="0.001" classname="unshifting on two lines 1">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand unshifting on two lines 2" time="0" classname="unshifting on two lines 2">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand unshifting at the end of the file" time="0.001" classname="unshifting at the end of the file">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand unshift many times + shift" time="0.001" classname="unshift many times + shift">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand Bug 9119: Unshift from first column doesn&apos;t work" time="0" classname="Bug 9119: Unshift from first column doesn&apos;t work">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand issue #348: indenting around doc block comments" time="0.002" classname="issue #348: indenting around doc block comments">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand issue #1609: Wrong indentation of block comments" time="0.001" classname="issue #1609: Wrong indentation of block comments">
    </testcase>
    <testcase name="Editor Commands - ShiftCommand bug #16815:Shift+Tab doesn&apos;t go back to tabstop" time="0.014" classname="bug #16815:Shift+Tab doesn&apos;t go back to tabstop">
    </testcase>
  </testsuite>
  <testsuite name="Editor Commands - Trim Trailing Whitespace Command" timestamp="2017-02-22T23:10:19" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Editor Commands - Trim Trailing Whitespace Command remove trailing whitespace" time="0.002" classname="remove trailing whitespace">
    </testcase>
  </testsuite>
  <testsuite name="EditorModel - EditableTextModel._getInverseEdits" timestamp="2017-02-22T23:10:19" tests="18" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="EditorModel - EditableTextModel._getInverseEdits single insert" time="0" classname="single insert">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits Bug 19872: Undo is funky" time="0" classname="Bug 19872: Undo is funky">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits two single unrelated inserts" time="0" classname="two single unrelated inserts">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits two single inserts 1" time="0" classname="two single inserts 1">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits two single inserts 2" time="0" classname="two single inserts 2">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits multiline insert" time="0" classname="multiline insert">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits two unrelated multiline inserts" time="0" classname="two unrelated multiline inserts">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits two multiline inserts 1" time="0" classname="two multiline inserts 1">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits single delete" time="0" classname="single delete">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits two single unrelated deletes" time="0" classname="two single unrelated deletes">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits two single deletes 1" time="0" classname="two single deletes 1">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits two single deletes 2" time="0" classname="two single deletes 2">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits multiline delete" time="0" classname="multiline delete">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits two unrelated multiline deletes" time="0" classname="two unrelated multiline deletes">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits two multiline deletes 1" time="0" classname="two multiline deletes 1">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits single replace" time="0" classname="single replace">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits two replaces" time="0" classname="two replaces">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._getInverseEdits many edits" time="0" classname="many edits">
    </testcase>
  </testsuite>
  <testsuite name="EditorModel - EditableTextModel._toSingleEditOperation" timestamp="2017-02-22T23:10:19" tests="11" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="EditorModel - EditableTextModel._toSingleEditOperation one edit op is unchanged" time="0.001" classname="one edit op is unchanged">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._toSingleEditOperation two edits on one line" time="0" classname="two edits on one line">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._toSingleEditOperation insert multiple newlines" time="0" classname="insert multiple newlines">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._toSingleEditOperation delete empty text" time="0" classname="delete empty text">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._toSingleEditOperation two unrelated edits" time="0" classname="two unrelated edits">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._toSingleEditOperation many edits" time="0" classname="many edits">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._toSingleEditOperation many edits reversed" time="0" classname="many edits reversed">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._toSingleEditOperation replacing newlines 1" time="0" classname="replacing newlines 1">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._toSingleEditOperation replacing newlines 2" time="0" classname="replacing newlines 2">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._toSingleEditOperation advanced" time="0" classname="advanced">
    </testcase>
    <testcase name="EditorModel - EditableTextModel._toSingleEditOperation advanced simplified" time="0" classname="advanced simplified">
    </testcase>
  </testsuite>
  <testsuite name="EditorModel - EditableTextModel.applyEdits updates mightContainRTL" timestamp="2017-02-22T23:10:19" tests="6" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="EditorModel - EditableTextModel.applyEdits updates mightContainRTL start with RTL, insert LTR" time="0.001" classname="start with RTL, insert LTR">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits updates mightContainRTL start with RTL, delete RTL" time="0" classname="start with RTL, delete RTL">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits updates mightContainRTL start with RTL, insert RTL" time="0" classname="start with RTL, insert RTL">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits updates mightContainRTL start with LTR, insert LTR" time="0" classname="start with LTR, insert LTR">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits updates mightContainRTL start with LTR, insert RTL 1" time="0" classname="start with LTR, insert RTL 1">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits updates mightContainRTL start with LTR, insert RTL 2" time="0.001" classname="start with LTR, insert RTL 2">
    </testcase>
  </testsuite>
  <testsuite name="EditorModel - EditableTextModel.applyEdits updates mightContainNonBasicASCII" timestamp="2017-02-22T23:10:19" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="EditorModel - EditableTextModel.applyEdits updates mightContainNonBasicASCII start with NON-ASCII, insert ASCII" time="0" classname="start with NON-ASCII, insert ASCII">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits updates mightContainNonBasicASCII start with NON-ASCII, delete NON-ASCII" time="0" classname="start with NON-ASCII, delete NON-ASCII">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits updates mightContainNonBasicASCII start with NON-ASCII, insert NON-ASCII" time="0" classname="start with NON-ASCII, insert NON-ASCII">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits updates mightContainNonBasicASCII start with ASCII, insert ASCII" time="0" classname="start with ASCII, insert ASCII">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits updates mightContainNonBasicASCII start with ASCII, insert NON-ASCII" time="0" classname="start with ASCII, insert NON-ASCII">
    </testcase>
  </testsuite>
  <testsuite name="EditorModel - EditableTextModel.applyEdits" timestamp="2017-02-22T23:10:19" tests="44" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.044000000000000025">
    <testcase name="EditorModel - EditableTextModel.applyEdits high-low surrogates 1" time="0.002" classname="high-low surrogates 1">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits high-low surrogates 2" time="0.001" classname="high-low surrogates 2">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits high-low surrogates 3" time="0.002" classname="high-low surrogates 3">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits high-low surrogates 4" time="0.001" classname="high-low surrogates 4">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits Bug 19872: Undo is funky" time="0.002" classname="Bug 19872: Undo is funky">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits Bug 19872: Undo is funky" time="0.001" classname="Bug 19872: Undo is funky">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits insert empty text" time="0" classname="insert empty text">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits last op is no-op" time="0.001" classname="last op is no-op">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits insert text without newline 1" time="0.003" classname="insert text without newline 1">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits insert text without newline 2" time="0.003" classname="insert text without newline 2">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits insert one newline" time="0.002" classname="insert one newline">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits insert text with one newline" time="0" classname="insert text with one newline">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits insert text with two newlines" time="0.001" classname="insert text with two newlines">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits insert text with many newlines" time="0" classname="insert text with many newlines">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits insert multiple newlines" time="0.002" classname="insert multiple newlines">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits delete empty text" time="0.001" classname="delete empty text">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits delete text from one line" time="0.001" classname="delete text from one line">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits delete text from one line 2" time="0.001" classname="delete text from one line 2">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits delete all text from a line" time="0.001" classname="delete all text from a line">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits delete text from two lines" time="0.001" classname="delete text from two lines">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits delete text from many lines" time="0.001" classname="delete text from many lines">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits delete everything" time="0.001" classname="delete everything">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits two unrelated edits" time="0.001" classname="two unrelated edits">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits two edits on one line" time="0" classname="two edits on one line">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits many edits" time="0" classname="many edits">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits many edits reversed" time="0" classname="many edits reversed">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits replacing newlines 1" time="0" classname="replacing newlines 1">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits replacing newlines 2" time="0.001" classname="replacing newlines 2">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits advanced 1" time="0.002" classname="advanced 1">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits advanced simplified" time="0" classname="advanced simplified">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits issue #144" time="0.004" classname="issue #144">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits issue #2586 Replacing selected end-of-line with newline locks up the document" time="0.003" classname="issue #2586 Replacing selected end-of-line with newline locks up the document">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits issue #3980" time="0.002" classname="issue #3980">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits touching edits: two inserts at the same position" time="0" classname="touching edits: two inserts at the same position">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits touching edits: insert and replace touching" time="0" classname="touching edits: insert and replace touching">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits overlapping edits: two overlapping replaces" time="0.001" classname="overlapping edits: two overlapping replaces">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits overlapping edits: two overlapping deletes" time="0" classname="overlapping edits: two overlapping deletes">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits touching edits: two touching replaces" time="0" classname="touching edits: two touching replaces">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits touching edits: two touching deletes" time="0.001" classname="touching edits: two touching deletes">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits touching edits: insert and replace" time="0" classname="touching edits: insert and replace">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits touching edits: replace and insert" time="0" classname="touching edits: replace and insert">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits change while emitting events 1" time="0.001" classname="change while emitting events 1">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits change while emitting events 2" time="0" classname="change while emitting events 2">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits issue #1580: Changes in line endings are not correctly reflected in the extension host, leading to invalid offsets sent to external refactoring tools" time="0" classname="issue #1580: Changes in line endings are not correctly reflected in the extension host, leading to invalid offsets sent to external refactoring tools">
    </testcase>
  </testsuite>
  <testsuite name="EditorModel - EditableTextModel.applyEdits &amp; markers" timestamp="2017-02-22T23:10:19" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="EditorModel - EditableTextModel.applyEdits &amp; markers no markers changed" time="0" classname="no markers changed">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits &amp; markers first line changes" time="0" classname="first line changes">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits &amp; markers inserting lines" time="0" classname="inserting lines">
    </testcase>
    <testcase name="EditorModel - EditableTextModel.applyEdits &amp; markers replacing a lot" time="0" classname="replacing a lot">
    </testcase>
  </testsuite>
  <testsuite name="EditorModel Auto Tests" timestamp="2017-02-22T23:10:19" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.006">
    <testcase name="EditorModel Auto Tests auto1" time="0.001" classname="auto1">
    </testcase>
    <testcase name="EditorModel Auto Tests auto2" time="0.002" classname="auto2">
    </testcase>
    <testcase name="EditorModel Auto Tests auto3" time="0.001" classname="auto3">
    </testcase>
    <testcase name="EditorModel Auto Tests auto4" time="0.002" classname="auto4">
    </testcase>
  </testsuite>
  <testsuite name="QuickOpen" timestamp="2017-02-22T23:10:19" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="QuickOpen QuickOpenModel" time="0.001" classname="QuickOpenModel">
    </testcase>
    <testcase name="QuickOpen QuickOpenDataSource" time="0" classname="QuickOpenDataSource">
    </testcase>
  </testsuite>
  <testsuite name="CacheState" timestamp="2017-02-22T23:10:19" tests="5" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="CacheState reuse old cacheKey until new cache is loaded" time="0.002" classname="reuse old cacheKey until new cache is loaded">
    </testcase>
    <testcase name="CacheState do not spawn additional load if previous is still loading" time="0" classname="do not spawn additional load if previous is still loading">
    </testcase>
    <testcase name="CacheState do not use previous cacheKey if query changed" time="0" classname="do not use previous cacheKey if query changed">
    </testcase>
    <testcase name="CacheState dispose propagates" time="0" classname="dispose propagates">
    </testcase>
    <testcase name="CacheState keep using old cacheKey when loading fails" time="0" classname="keep using old cacheKey when loading fails">
    </testcase>
  </testsuite>
  <testsuite name="Workbench Action Registry" timestamp="2017-02-22T23:10:19" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Workbench Action Registry Workbench Action Registration" time="0.001" classname="Workbench Action Registration">
    </testcase>
    <testcase name="Workbench Action Registry Workbench Action Bar prepareActions()" time="0.001" classname="Workbench Action Bar prepareActions()">
    </testcase>
  </testsuite>
  <testsuite name="Stat Resolver" timestamp="2017-02-22T23:10:19" tests="6" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.015">
    <testcase name="Stat Resolver resolve file" time="0.002" classname="resolve file">
    </testcase>
    <testcase name="Stat Resolver resolve directory" time="0.001" classname="resolve directory">
    </testcase>
    <testcase name="Stat Resolver resolve directory - resolveTo single directory" time="0.002" classname="resolve directory - resolveTo single directory">
    </testcase>
    <testcase name="Stat Resolver resolve directory - resolveTo single directory - mixed casing" time="0.006" classname="resolve directory - resolveTo single directory - mixed casing">
    </testcase>
    <testcase name="Stat Resolver resolve directory - resolveTo multiple directories" time="0.002" classname="resolve directory - resolveTo multiple directories">
    </testcase>
    <testcase name="Stat Resolver resolve directory - resolveSingleChildFolders" time="0.002" classname="resolve directory - resolveSingleChildFolders">
    </testcase>
  </testsuite>
  <testsuite name="FileService" timestamp="2017-02-22T23:10:19" tests="37" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.561">
    <testcase name="FileService resolveContents" time="0.015" classname="resolveContents">
    </testcase>
    <testcase name="FileService createFile" time="0.015" classname="createFile">
    </testcase>
    <testcase name="FileService createFolder" time="0.002" classname="createFolder">
    </testcase>
    <testcase name="FileService touchFile" time="0.022" classname="touchFile">
    </testcase>
    <testcase name="FileService renameFile" time="0.002" classname="renameFile">
    </testcase>
    <testcase name="FileService renameFolder" time="0.01" classname="renameFolder">
    </testcase>
    <testcase name="FileService renameFile - MIX CASE" time="0.001" classname="renameFile - MIX CASE">
    </testcase>
    <testcase name="FileService moveFile" time="0.001" classname="moveFile">
    </testcase>
    <testcase name="FileService move - FILE_MOVE_CONFLICT" time="0" classname="move - FILE_MOVE_CONFLICT">
    </testcase>
    <testcase name="FileService moveFile - MIX CASE" time="0.002" classname="moveFile - MIX CASE">
    </testcase>
    <testcase name="FileService moveFile - overwrite folder with file" time="0.003" classname="moveFile - overwrite folder with file">
    </testcase>
    <testcase name="FileService copyFile" time="0.002" classname="copyFile">
    </testcase>
    <testcase name="FileService copyFile - overwrite folder with file" time="0.005" classname="copyFile - overwrite folder with file">
    </testcase>
    <testcase name="FileService importFile" time="0.003" classname="importFile">
    </testcase>
    <testcase name="FileService importFile - MIX CASE" time="0.005" classname="importFile - MIX CASE">
    </testcase>
    <testcase name="FileService importFile - overwrite folder with file" time="0.004" classname="importFile - overwrite folder with file">
    </testcase>
    <testcase name="FileService importFile - same file" time="0.001" classname="importFile - same file">
    </testcase>
    <testcase name="FileService deleteFile" time="0.001" classname="deleteFile">
    </testcase>
    <testcase name="FileService deleteFolder" time="0.001" classname="deleteFolder">
    </testcase>
    <testcase name="FileService resolveFile" time="0.001" classname="resolveFile">
    </testcase>
    <testcase name="FileService existsFile" time="0.001" classname="existsFile">
    </testcase>
    <testcase name="FileService updateContent" time="0.016" classname="updateContent">
    </testcase>
    <testcase name="FileService updateContent - use encoding (UTF 16 BE)" time="0.016" classname="updateContent - use encoding (UTF 16 BE)">
    </testcase>
    <testcase name="FileService updateContent - encoding preserved (UTF 16 LE)" time="0.019" classname="updateContent - encoding preserved (UTF 16 LE)">
    </testcase>
    <testcase name="FileService resolveContent - FILE_IS_BINARY" time="0.001" classname="resolveContent - FILE_IS_BINARY">
    </testcase>
    <testcase name="FileService resolveContent - FILE_IS_DIRECTORY" time="0.001" classname="resolveContent - FILE_IS_DIRECTORY">
    </testcase>
    <testcase name="FileService resolveContent - FILE_NOT_FOUND" time="0" classname="resolveContent - FILE_NOT_FOUND">
    </testcase>
    <testcase name="FileService resolveContent - FILE_NOT_MODIFIED_SINCE" time="0.001" classname="resolveContent - FILE_NOT_MODIFIED_SINCE">
    </testcase>
    <testcase name="FileService resolveContent - FILE_MODIFIED_SINCE" time="0.003" classname="resolveContent - FILE_MODIFIED_SINCE">
    </testcase>
    <testcase name="FileService resolveContent - encoding picked up" time="0.001" classname="resolveContent - encoding picked up">
    </testcase>
    <testcase name="FileService resolveContent - user overrides BOM" time="0.001" classname="resolveContent - user overrides BOM">
    </testcase>
    <testcase name="FileService resolveContent - BOM removed" time="0.001" classname="resolveContent - BOM removed">
    </testcase>
    <testcase name="FileService resolveContent - invalid encoding" time="0" classname="resolveContent - invalid encoding">
    </testcase>
    <testcase name="FileService watchFileChanges" time="0.153" classname="watchFileChanges">
    </testcase>
    <testcase name="FileService watchFileChanges - support atomic save" time="0.151" classname="watchFileChanges - support atomic save">
    </testcase>
    <testcase name="FileService options - encoding" time="0.025" classname="options - encoding">
    </testcase>
    <testcase name="FileService UTF 8 BOMs" time="0.075" classname="UTF 8 BOMs">
    </testcase>
  </testsuite>
  <testsuite name="Workbench Viewlet" timestamp="2017-02-22T23:10:20" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Workbench Viewlet ViewletDescriptor API" time="0.001" classname="ViewletDescriptor API">
    </testcase>
    <testcase name="Workbench Viewlet Editor Aware ViewletDescriptor API" time="0" classname="Editor Aware ViewletDescriptor API">
    </testcase>
    <testcase name="Workbench Viewlet Viewlet extension point and registration" time="0" classname="Viewlet extension point and registration">
    </testcase>
  </testsuite>
  <testsuite name="ExtensionsActions Test" timestamp="2017-02-22T23:10:20" tests="79" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.07700000000000005">
    <testcase name="ExtensionsActions Test Install action is disabled when there is no extension" time="0" classname="Install action is disabled when there is no extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test Install action when state is installed" time="0.002" classname="Test Install action when state is installed">
    </testcase>
    <testcase name="ExtensionsActions Test Test Install action when state is installing" time="0.001" classname="Test Install action when state is installing">
    </testcase>
    <testcase name="ExtensionsActions Test Test Install action when state is uninstalled" time="0.001" classname="Test Install action when state is uninstalled">
    </testcase>
    <testcase name="ExtensionsActions Test Test Install action when extension is system action" time="0.001" classname="Test Install action when extension is system action">
    </testcase>
    <testcase name="ExtensionsActions Test Test Install action when extension doesnot has gallery" time="0.001" classname="Test Install action when extension doesnot has gallery">
    </testcase>
    <testcase name="ExtensionsActions Test Uninstall action is disabled when there is no extension" time="0" classname="Uninstall action is disabled when there is no extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test Uninstall action when state is uninstalling" time="0.001" classname="Test Uninstall action when state is uninstalling">
    </testcase>
    <testcase name="ExtensionsActions Test Test Uninstall action when state is installed and is user extension" time="0.001" classname="Test Uninstall action when state is installed and is user extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test Uninstall action when state is installed and is system extension" time="0.001" classname="Test Uninstall action when state is installed and is system extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test Uninstall action after extension is installed" time="0.001" classname="Test Uninstall action after extension is installed">
    </testcase>
    <testcase name="ExtensionsActions Test Test CombinedInstallAction when there is no extension" time="0" classname="Test CombinedInstallAction when there is no extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test CombinedInstallAction when extension is system extension" time="0" classname="Test CombinedInstallAction when extension is system extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test CombinedInstallAction when installAction is enabled" time="0" classname="Test CombinedInstallAction when installAction is enabled">
    </testcase>
    <testcase name="ExtensionsActions Test Test CombinedInstallAction when unInstallAction is enabled" time="0.001" classname="Test CombinedInstallAction when unInstallAction is enabled">
    </testcase>
    <testcase name="ExtensionsActions Test Test CombinedInstallAction when state is installing" time="0.001" classname="Test CombinedInstallAction when state is installing">
    </testcase>
    <testcase name="ExtensionsActions Test Test CombinedInstallAction when state is uninstalling" time="0.001" classname="Test CombinedInstallAction when state is uninstalling">
    </testcase>
    <testcase name="ExtensionsActions Test Test UpdateAction when there is no extension" time="0" classname="Test UpdateAction when there is no extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test UpdateAction when extension is uninstalled" time="0.001" classname="Test UpdateAction when extension is uninstalled">
    </testcase>
    <testcase name="ExtensionsActions Test Test UpdateAction when extension is installed and not outdated" time="0.001" classname="Test UpdateAction when extension is installed and not outdated">
    </testcase>
    <testcase name="ExtensionsActions Test Test UpdateAction when extension is installed outdated and system extension" time="0.001" classname="Test UpdateAction when extension is installed outdated and system extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test UpdateAction when extension is installed outdated and user extension" time="0.001" classname="Test UpdateAction when extension is installed outdated and user extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test UpdateAction when extension is installing and outdated and user extension" time="0.001" classname="Test UpdateAction when extension is installing and outdated and user extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test ManageExtensionAction when there is no extension" time="0.001" classname="Test ManageExtensionAction when there is no extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test ManageExtensionAction when extension is installed" time="0.002" classname="Test ManageExtensionAction when extension is installed">
    </testcase>
    <testcase name="ExtensionsActions Test Test ManageExtensionAction when extension is uninstalled" time="0.001" classname="Test ManageExtensionAction when extension is uninstalled">
    </testcase>
    <testcase name="ExtensionsActions Test Test ManageExtensionAction when extension is installing" time="0.001" classname="Test ManageExtensionAction when extension is installing">
    </testcase>
    <testcase name="ExtensionsActions Test Test ManageExtensionAction when extension is uninstalling" time="0.001" classname="Test ManageExtensionAction when extension is uninstalling">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableForWorkspaceAction when there is no extension" time="0" classname="Test EnableForWorkspaceAction when there is no extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableForWorkspaceAction when there extension is not disabled" time="0" classname="Test EnableForWorkspaceAction when there extension is not disabled">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableForWorkspaceAction when there extension is disabled globally" time="0.001" classname="Test EnableForWorkspaceAction when there extension is disabled globally">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableForWorkspaceAction when extension is disabled for workspace" time="0.001" classname="Test EnableForWorkspaceAction when extension is disabled for workspace">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableForWorkspaceAction when the extension is disabled in both" time="0.001" classname="Test EnableForWorkspaceAction when the extension is disabled in both">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableGloballyAction when there is no extension" time="0" classname="Test EnableGloballyAction when there is no extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableGloballyAction when the extension is not disabled" time="0" classname="Test EnableGloballyAction when the extension is not disabled">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableGloballyAction when the extension is disabled for workspace" time="0" classname="Test EnableGloballyAction when the extension is disabled for workspace">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableGloballyAction when the extension is disabled globally" time="0" classname="Test EnableGloballyAction when the extension is disabled globally">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableGloballyAction when the extension is disabled in both" time="0" classname="Test EnableGloballyAction when the extension is disabled in both">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableAction when there is no extension" time="0.001" classname="Test EnableAction when there is no extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableAction when extension is installed and enabled" time="0.001" classname="Test EnableAction when extension is installed and enabled">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableAction when extension is installed and disabled globally" time="0" classname="Test EnableAction when extension is installed and disabled globally">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableAction when extension is installed and disabled for workspace" time="0.001" classname="Test EnableAction when extension is installed and disabled for workspace">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableAction when extension is uninstalled" time="0" classname="Test EnableAction when extension is uninstalled">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableAction when extension is installing" time="0.001" classname="Test EnableAction when extension is installing">
    </testcase>
    <testcase name="ExtensionsActions Test Test EnableAction when extension is uninstalling" time="0.001" classname="Test EnableAction when extension is uninstalling">
    </testcase>
    <testcase name="ExtensionsActions Test Test DisableForWorkspaceAction when there is no extension" time="0" classname="Test DisableForWorkspaceAction when there is no extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test DisableForWorkspaceAction when the extension is disabled globally" time="0" classname="Test DisableForWorkspaceAction when the extension is disabled globally">
    </testcase>
    <testcase name="ExtensionsActions Test Test DisableForWorkspaceAction when the extension is disabled workspace" time="0.001" classname="Test DisableForWorkspaceAction when the extension is disabled workspace">
    </testcase>
    <testcase name="ExtensionsActions Test Test DisableForWorkspaceAction when extension is enabled" time="0.001" classname="Test DisableForWorkspaceAction when extension is enabled">
    </testcase>
    <testcase name="ExtensionsActions Test Test DisableGloballyAction when there is no extension" time="0" classname="Test DisableGloballyAction when there is no extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test DisableGloballyAction when the extension is disabled globally" time="0.001" classname="Test DisableGloballyAction when the extension is disabled globally">
    </testcase>
    <testcase name="ExtensionsActions Test Test DisableGloballyAction when the extension is disabled for workspace" time="0.001" classname="Test DisableGloballyAction when the extension is disabled for workspace">
    </testcase>
    <testcase name="ExtensionsActions Test Test DisableGloballyAction when the extension is enabled" time="0" classname="Test DisableGloballyAction when the extension is enabled">
    </testcase>
    <testcase name="ExtensionsActions Test Test DisableAction when there is no extension" time="0.001" classname="Test DisableAction when there is no extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test DisableAction when extension is installed and enabled" time="0.001" classname="Test DisableAction when extension is installed and enabled">
    </testcase>
    <testcase name="ExtensionsActions Test Test DisableAction when extension is installed and disabled globally" time="0.001" classname="Test DisableAction when extension is installed and disabled globally">
    </testcase>
    <testcase name="ExtensionsActions Test Test DisableAction when extension is installed and disabled for workspace" time="0" classname="Test DisableAction when extension is installed and disabled for workspace">
    </testcase>
    <testcase name="ExtensionsActions Test Test DisableAction when extension is uninstalled" time="0.002" classname="Test DisableAction when extension is uninstalled">
    </testcase>
    <testcase name="ExtensionsActions Test Test DisableAction when extension is installing" time="0" classname="Test DisableAction when extension is installing">
    </testcase>
    <testcase name="ExtensionsActions Test Test DisableAction when extension is uninstalling" time="0.001" classname="Test DisableAction when extension is uninstalling">
    </testcase>
    <testcase name="ExtensionsActions Test Test UpdateAllAction when no installed extensions" time="0" classname="Test UpdateAllAction when no installed extensions">
    </testcase>
    <testcase name="ExtensionsActions Test Test UpdateAllAction when installed extensions are not outdated" time="0.001" classname="Test UpdateAllAction when installed extensions are not outdated">
    </testcase>
    <testcase name="ExtensionsActions Test Test UpdateAllAction when some installed extensions are outdated" time="0.001" classname="Test UpdateAllAction when some installed extensions are outdated">
    </testcase>
    <testcase name="ExtensionsActions Test Test UpdateAllAction when some installed extensions are outdated and some outdated are being installed" time="0.001" classname="Test UpdateAllAction when some installed extensions are outdated and some outdated are being installed">
    </testcase>
    <testcase name="ExtensionsActions Test Test UpdateAllAction when some installed extensions are outdated and all outdated are being installed" time="0.006" classname="Test UpdateAllAction when some installed extensions are outdated and all outdated are being installed">
    </testcase>
    <testcase name="ExtensionsActions Test Test ReloadAction when there is no extension" time="0" classname="Test ReloadAction when there is no extension">
    </testcase>
    <testcase name="ExtensionsActions Test Test ReloadAction when extension state is installing" time="0" classname="Test ReloadAction when extension state is installing">
    </testcase>
    <testcase name="ExtensionsActions Test Test ReloadAction when extension state is uninstalling" time="0.001" classname="Test ReloadAction when extension state is uninstalling">
    </testcase>
    <testcase name="ExtensionsActions Test Test ReloadAction when extension is newly installed" time="0.001" classname="Test ReloadAction when extension is newly installed">
    </testcase>
    <testcase name="ExtensionsActions Test Test ReloadAction when extension is installed and uninstalled" time="0.002" classname="Test ReloadAction when extension is installed and uninstalled">
    </testcase>
    <testcase name="ExtensionsActions Test Test ReloadAction when extension is uninstalled" time="0.002" classname="Test ReloadAction when extension is uninstalled">
    </testcase>
    <testcase name="ExtensionsActions Test Test ReloadAction when extension is uninstalled and installed" time="0.003" classname="Test ReloadAction when extension is uninstalled and installed">
    </testcase>
    <testcase name="ExtensionsActions Test Test ReloadAction when extension is updated while running" time="0.002" classname="Test ReloadAction when extension is updated while running">
    </testcase>
    <testcase name="ExtensionsActions Test Test ReloadAction when extension is updated when not running" time="0.002" classname="Test ReloadAction when extension is updated when not running">
    </testcase>
    <testcase name="ExtensionsActions Test Test ReloadAction when extension is disabled when running" time="0.003" classname="Test ReloadAction when extension is disabled when running">
    </testcase>
    <testcase name="ExtensionsActions Test Test ReloadAction when extension enablement is toggled when running" time="0.002" classname="Test ReloadAction when extension enablement is toggled when running">
    </testcase>
    <testcase name="ExtensionsActions Test Test ReloadAction when extension is enabled when not running" time="0.002" classname="Test ReloadAction when extension is enabled when not running">
    </testcase>
    <testcase name="ExtensionsActions Test Test ReloadAction when extension enablement is toggled when not running" time="0.003" classname="Test ReloadAction when extension enablement is toggled when not running">
    </testcase>
    <testcase name="ExtensionsActions Test Test ReloadAction when extension is updated when not running and enabled" time="0.003" classname="Test ReloadAction when extension is updated when not running and enabled">
    </testcase>
  </testsuite>
  <testsuite name="ExtensionsWorkbenchService Test" timestamp="2017-02-22T23:10:20" tests="40" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.060000000000000026">
    <testcase name="ExtensionsWorkbenchService Test test gallery extension" time="0.002" classname="test gallery extension">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test for empty installed extensions" time="0.001" classname="test for empty installed extensions">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test for installed extensions" time="0.001" classname="test for installed extensions">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test installed extensions get syncs with gallery" time="0.002" classname="test installed extensions get syncs with gallery">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test extension state computation" time="0.003" classname="test extension state computation">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test extension doesnot show outdated for system extensions" time="0.001" classname="test extension doesnot show outdated for system extensions">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test canInstall returns false for extensions with out gallery" time="0.002" classname="test canInstall returns false for extensions with out gallery">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test canInstall returns true for extensions with gallery" time="0.002" classname="test canInstall returns true for extensions with gallery">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test onchange event is triggered while installing" time="0.002" classname="test onchange event is triggered while installing">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test onchange event is triggered when installation is finished" time="0.003" classname="test onchange event is triggered when installation is finished">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test onchange event is triggered while uninstalling" time="0.001" classname="test onchange event is triggered while uninstalling">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test onchange event is triggered when uninstalling is finished" time="0.002" classname="test onchange event is triggered when uninstalling is finished">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test extension dependencies when empty" time="0.001" classname="test extension dependencies when empty">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test one level extension dependencies without cycle" time="0.002" classname="test one level extension dependencies without cycle">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test one level extension dependencies with cycle" time="0.001" classname="test one level extension dependencies with cycle">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test one level extension dependencies with missing dependencies" time="0.005" classname="test one level extension dependencies with missing dependencies">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test one level extension dependencies with in built dependencies" time="0.002" classname="test one level extension dependencies with in built dependencies">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test more than one level of extension dependencies" time="0.003" classname="test more than one level of extension dependencies">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disabled flags are false for uninstalled extension" time="0.001" classname="test disabled flags are false for uninstalled extension">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disabled flags are false for installed enabled extension" time="0" classname="test disabled flags are false for installed enabled extension">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disabled for workspace is set" time="0" classname="test disabled for workspace is set">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disabled globally is set" time="0.001" classname="test disabled globally is set">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disable flags are updated for user extensions" time="0.001" classname="test disable flags are updated for user extensions">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test enable extension globally when extension is disabled for workspace" time="0.001" classname="test enable extension globally when extension is disabled for workspace">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disable extension globally should not disable for workspace" time="0" classname="test disable extension globally should not disable for workspace">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disabled flags are not updated for system extensions" time="0" classname="test disabled flags are not updated for system extensions">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disabled flags are updated on change from outside" time="0.001" classname="test disabled flags are updated on change from outside">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disable extension with dependencies disable only itself" time="0.002" classname="test disable extension with dependencies disable only itself">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disable extension with dependencies disable all" time="0.001" classname="test disable extension with dependencies disable all">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disable extension fails if extension is a dependent of other" time="0.001" classname="test disable extension fails if extension is a dependent of other">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disable extension does not fail if its dependency is a dependent of other but chosen to disable only itself" time="0.001" classname="test disable extension does not fail if its dependency is a dependent of other but chosen to disable only itself">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disable extension fails if its dependency is a dependent of other" time="0.001" classname="test disable extension fails if its dependency is a dependent of other">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disable extension if its dependency is a dependent of other disabled extension" time="0.001" classname="test disable extension if its dependency is a dependent of other disabled extension">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disable extension if its dependencys dependency is itself" time="0.003" classname="test disable extension if its dependencys dependency is itself">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disable extension if its dependency is dependent and is disabled" time="0.001" classname="test disable extension if its dependency is dependent and is disabled">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test disable extension with cyclic dependencies" time="0.002" classname="test disable extension with cyclic dependencies">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test enable extension with dependencies enable all" time="0.002" classname="test enable extension with dependencies enable all">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test enable extension with cyclic dependencies" time="0.002" classname="test enable extension with cyclic dependencies">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test change event is fired when disablement flags are changed" time="0.001" classname="test change event is fired when disablement flags are changed">
    </testcase>
    <testcase name="ExtensionsWorkbenchService Test test change event is fired when disablement flags are changed from outside" time="0.001" classname="test change event is fired when disablement flags are changed from outside">
    </testcase>
  </testsuite>
  <testsuite name="Files - View Model" timestamp="2017-02-22T23:10:20" tests="9" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Files - View Model Properties" time="0" classname="Properties">
    </testcase>
    <testcase name="Files - View Model Add and Remove Child, check for hasChild" time="0" classname="Add and Remove Child, check for hasChild">
    </testcase>
    <testcase name="Files - View Model Move" time="0.001" classname="Move">
    </testcase>
    <testcase name="Files - View Model Rename" time="0" classname="Rename">
    </testcase>
    <testcase name="Files - View Model Find" time="0" classname="Find">
    </testcase>
    <testcase name="Files - View Model Find with mixed case" time="0" classname="Find with mixed case">
    </testcase>
    <testcase name="Files - View Model Validate File Name (For Create)" time="0.001" classname="Validate File Name (For Create)">
    </testcase>
    <testcase name="Files - View Model Validate File Name (For Rename)" time="0" classname="Validate File Name (For Rename)">
    </testcase>
    <testcase name="Files - View Model Merge Local with Disk" time="0" classname="Merge Local with Disk">
    </testcase>
  </testsuite>
  <testsuite name="Search - Viewlet" timestamp="2017-02-22T23:10:20" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Search - Viewlet Data Source" time="0.001" classname="Data Source">
    </testcase>
    <testcase name="Search - Viewlet Sorter" time="0" classname="Sorter">
    </testcase>
  </testsuite>
  <testsuite name="Search Actions" timestamp="2017-02-22T23:10:20" tests="7" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.126">
    <testcase name="Search Actions get next element to focus after removing a match when it has next sibling match" time="0.019" classname="get next element to focus after removing a match when it has next sibling match">
    </testcase>
    <testcase name="Search Actions get next element to focus after removing a match when it does not have next sibling match" time="0.021" classname="get next element to focus after removing a match when it does not have next sibling match">
    </testcase>
    <testcase name="Search Actions get next element to focus after removing a match when it does not have next sibling match and previous match is file match" time="0.018" classname="get next element to focus after removing a match when it does not have next sibling match and previous match is file match">
    </testcase>
    <testcase name="Search Actions get next element to focus after removing a match when it is the only match" time="0.016" classname="get next element to focus after removing a match when it is the only match">
    </testcase>
    <testcase name="Search Actions get next element to focus after removing a file match when it has next sibling" time="0.019" classname="get next element to focus after removing a file match when it has next sibling">
    </testcase>
    <testcase name="Search Actions get next element to focus after removing a file match when it has no next sibling" time="0.017" classname="get next element to focus after removing a file match when it has no next sibling">
    </testcase>
    <testcase name="Search Actions get next element to focus after removing a file match when it is only match" time="0.016" classname="get next element to focus after removing a file match when it is only match">
    </testcase>
  </testsuite>
  <testsuite name="Files - FileEditorInput" timestamp="2017-02-22T23:10:21" tests="6" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.019">
    <testcase name="Files - FileEditorInput Basics" time="0.009" classname="Basics">
    </testcase>
    <testcase name="Files - FileEditorInput matches" time="0" classname="matches">
    </testcase>
    <testcase name="Files - FileEditorInput getEncoding/setEncoding" time="0.002" classname="getEncoding/setEncoding">
    </testcase>
    <testcase name="Files - FileEditorInput save" time="0.004" classname="save">
    </testcase>
    <testcase name="Files - FileEditorInput revert" time="0.003" classname="revert">
    </testcase>
    <testcase name="Files - FileEditorInput resolve handles binary files" time="0.001" classname="resolve handles binary files">
    </testcase>
  </testsuite>
  <testsuite name="Files - FileEditorTracker" timestamp="2017-02-22T23:10:21" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.004">
    <testcase name="Files - FileEditorTracker disposes input when resource gets deleted - local file changes" time="0.003" classname="disposes input when resource gets deleted - local file changes">
    </testcase>
    <testcase name="Files - FileEditorTracker disposes when resource gets deleted - remote file changes" time="0.001" classname="disposes when resource gets deleted - remote file changes">
    </testcase>
  </testsuite>
  <testsuite name="Workbench - OutputWorker" timestamp="2017-02-22T23:10:21" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="Workbench - OutputWorker OutputWorker - Link detection" time="0.003" classname="OutputWorker - Link detection">
    </testcase>
  </testsuite>
  <testsuite name="Workbench - TerminalInstance" timestamp="2017-02-22T23:10:21" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Workbench - TerminalInstance TerminalInstance - createTerminalEnv" time="0.001" classname="TerminalInstance - createTerminalEnv">
    </testcase>
  </testsuite>
  <testsuite name="_getCwd" timestamp="2017-02-22T23:10:21" tests="6" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Workbench - TerminalInstance _getCwd should default to os.homedir() for an empty workspace" time="0" classname="should default to os.homedir() for an empty workspace">
    </testcase>
    <testcase name="Workbench - TerminalInstance _getCwd should use to the workspace if it exists" time="0" classname="should use to the workspace if it exists">
    </testcase>
    <testcase name="Workbench - TerminalInstance _getCwd should use an absolute custom cwd as is" time="0" classname="should use an absolute custom cwd as is">
    </testcase>
    <testcase name="Workbench - TerminalInstance _getCwd should normalize a relative custom cwd against the workspace path" time="0.001" classname="should normalize a relative custom cwd against the workspace path">
    </testcase>
    <testcase name="Workbench - TerminalInstance _getCwd should fall back for relative a custom cwd that doesn&apos;t have a workspace" time="0" classname="should fall back for relative a custom cwd that doesn&apos;t have a workspace">
    </testcase>
    <testcase name="Workbench - TerminalInstance _getCwd should ignore custom cwd when told to ignore" time="0" classname="should ignore custom cwd when told to ignore">
    </testcase>
  </testsuite>
  <testsuite name="BackupFileService" timestamp="2017-02-22T23:10:21" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="BackupFileService parseBackupContent" time="0" classname="parseBackupContent">
    </testcase>
  </testsuite>
  <testsuite name="getBackupResource" timestamp="2017-02-22T23:10:21" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="BackupFileService getBackupResource should get the correct backup path for text files" time="0" classname="should get the correct backup path for text files">
    </testcase>
    <testcase name="BackupFileService getBackupResource should get the correct backup path for untitled files" time="0" classname="should get the correct backup path for untitled files">
    </testcase>
    <testcase name="BackupFileService getBackupResource should ignore case on Windows and Mac" time="0" classname="should ignore case on Windows and Mac">
    </testcase>
  </testsuite>
  <testsuite name="hasBackup" timestamp="2017-02-22T23:10:21" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="BackupFileService hasBackup should return whether a backup resource exists" time="0.003" classname="should return whether a backup resource exists">
    </testcase>
  </testsuite>
  <testsuite name="backupResource" timestamp="2017-02-22T23:10:21" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.026">
    <testcase name="BackupFileService backupResource text file" time="0.013" classname="text file">
    </testcase>
    <testcase name="BackupFileService backupResource untitled file" time="0.013" classname="untitled file">
    </testcase>
  </testsuite>
  <testsuite name="discardResourceBackup" timestamp="2017-02-22T23:10:21" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.023">
    <testcase name="BackupFileService discardResourceBackup text file" time="0.012" classname="text file">
    </testcase>
    <testcase name="BackupFileService discardResourceBackup untitled file" time="0.011" classname="untitled file">
    </testcase>
  </testsuite>
  <testsuite name="discardAllWorkspaceBackups" timestamp="2017-02-22T23:10:21" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.044">
    <testcase name="BackupFileService discardAllWorkspaceBackups text file" time="0.033" classname="text file">
    </testcase>
    <testcase name="BackupFileService discardAllWorkspaceBackups untitled file" time="0.011" classname="untitled file">
    </testcase>
    <testcase name="BackupFileService discardAllWorkspaceBackups should disable further backups" time="0" classname="should disable further backups">
    </testcase>
  </testsuite>
  <testsuite name="getWorkspaceFileBackups" timestamp="2017-02-22T23:10:21" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.046">
    <testcase name="BackupFileService getWorkspaceFileBackups (&quot;file&quot;) - text file" time="0.024" classname="(&quot;file&quot;) - text file">
    </testcase>
    <testcase name="BackupFileService getWorkspaceFileBackups (&quot;file&quot;) - untitled file" time="0.011" classname="(&quot;file&quot;) - untitled file">
    </testcase>
    <testcase name="BackupFileService getWorkspaceFileBackups (&quot;untitled&quot;) - untitled file" time="0.011" classname="(&quot;untitled&quot;) - untitled file">
    </testcase>
  </testsuite>
  <testsuite name="BackupFilesModel" timestamp="2017-02-22T23:10:21" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="BackupFilesModel simple" time="0" classname="simple">
    </testcase>
    <testcase name="BackupFilesModel resolve" time="0.002" classname="resolve">
    </testcase>
    <testcase name="BackupFilesModel get" time="0" classname="get">
    </testcase>
  </testsuite>
  <testsuite name="WorkspaceConfigurationEditingService - Node" timestamp="2017-02-22T23:10:21" tests="12" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.31999999999999995">
    <testcase name="WorkspaceConfigurationEditingService - Node errors cases - invalid key" time="0.013" classname="errors cases - invalid key">
    </testcase>
    <testcase name="WorkspaceConfigurationEditingService - Node errors cases - invalid target" time="0.012" classname="errors cases - invalid target">
    </testcase>
    <testcase name="WorkspaceConfigurationEditingService - Node errors cases - no workspace" time="0.02" classname="errors cases - no workspace">
    </testcase>
    <testcase name="WorkspaceConfigurationEditingService - Node errors cases - invalid configuration" time="0.016" classname="errors cases - invalid configuration">
    </testcase>
    <testcase name="WorkspaceConfigurationEditingService - Node errors cases - dirty" time="0.011" classname="errors cases - dirty">
    </testcase>
    <testcase name="WorkspaceConfigurationEditingService - Node write one setting - empty file" time="0.04" classname="write one setting - empty file">
    </testcase>
    <testcase name="WorkspaceConfigurationEditingService - Node write one setting - existing file" time="0.029" classname="write one setting - existing file">
    </testcase>
    <testcase name="WorkspaceConfigurationEditingService - Node write workspace standalone setting - empty file" time="0.034" classname="write workspace standalone setting - empty file">
    </testcase>
    <testcase name="WorkspaceConfigurationEditingService - Node write workspace standalone setting - existing file" time="0.027" classname="write workspace standalone setting - existing file">
    </testcase>
    <testcase name="WorkspaceConfigurationEditingService - Node write workspace standalone setting - empty file - full JSON" time="0.042" classname="write workspace standalone setting - empty file - full JSON">
    </testcase>
    <testcase name="WorkspaceConfigurationEditingService - Node write workspace standalone setting - existing file - full JSON" time="0.037" classname="write workspace standalone setting - existing file - full JSON">
    </testcase>
    <testcase name="WorkspaceConfigurationEditingService - Node write workspace standalone setting - existing file with JSON errors - full JSON" time="0.039" classname="write workspace standalone setting - existing file with JSON errors - full JSON">
    </testcase>
  </testsuite>
  <testsuite name="Configuration Resolver Service" timestamp="2017-02-22T23:10:21" tests="18" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.003">
    <testcase name="Configuration Resolver Service substitute one" time="0.001" classname="substitute one">
    </testcase>
    <testcase name="Configuration Resolver Service workspace root folder name" time="0" classname="workspace root folder name">
    </testcase>
    <testcase name="Configuration Resolver Service substitute many" time="0" classname="substitute many">
    </testcase>
    <testcase name="Configuration Resolver Service substitute one env variable" time="0" classname="substitute one env variable">
    </testcase>
    <testcase name="Configuration Resolver Service substitute many env variable" time="0" classname="substitute many env variable">
    </testcase>
    <testcase name="Configuration Resolver Service substitute one configuration variable" time="0.001" classname="substitute one configuration variable">
    </testcase>
    <testcase name="Configuration Resolver Service substitute many configuration variables" time="0" classname="substitute many configuration variables">
    </testcase>
    <testcase name="Configuration Resolver Service substitute nested configuration variables" time="0" classname="substitute nested configuration variables">
    </testcase>
    <testcase name="Configuration Resolver Service substitute accidental self referenced configuration variables" time="0" classname="substitute accidental self referenced configuration variables">
    </testcase>
    <testcase name="Configuration Resolver Service substitute one env variable and a configuration variable" time="0" classname="substitute one env variable and a configuration variable">
    </testcase>
    <testcase name="Configuration Resolver Service substitute many env variable and a configuration variable" time="0" classname="substitute many env variable and a configuration variable">
    </testcase>
    <testcase name="Configuration Resolver Service mixed types of configuration variables" time="0" classname="mixed types of configuration variables">
    </testcase>
    <testcase name="Configuration Resolver Service configuration should not evaluate Javascript" time="0" classname="configuration should not evaluate Javascript">
    </testcase>
    <testcase name="Configuration Resolver Service uses empty string as fallback" time="0.001" classname="uses empty string as fallback">
    </testcase>
    <testcase name="Configuration Resolver Service is restricted to own properties" time="0" classname="is restricted to own properties">
    </testcase>
    <testcase name="Configuration Resolver Service configuration variables with invalid accessor" time="0" classname="configuration variables with invalid accessor">
    </testcase>
    <testcase name="Configuration Resolver Service interactive variable simple" time="0" classname="interactive variable simple">
    </testcase>
    <testcase name="Configuration Resolver Service interactive variable complex" time="0" classname="interactive variable complex">
    </testcase>
  </testsuite>
  <testsuite name="Files - TextFileEditorModel" timestamp="2017-02-22T23:10:21" tests="19" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.126">
    <testcase name="Files - TextFileEditorModel Save" time="0.002" classname="Save">
    </testcase>
    <testcase name="Files - TextFileEditorModel setEncoding - encode" time="0" classname="setEncoding - encode">
    </testcase>
    <testcase name="Files - TextFileEditorModel setEncoding - decode" time="0.002" classname="setEncoding - decode">
    </testcase>
    <testcase name="Files - TextFileEditorModel disposes when underlying model is destroyed" time="0.002" classname="disposes when underlying model is destroyed">
    </testcase>
    <testcase name="Files - TextFileEditorModel Load does not trigger save" time="0.001" classname="Load does not trigger save">
    </testcase>
    <testcase name="Files - TextFileEditorModel Load returns dirty model as long as model is dirty" time="0.001" classname="Load returns dirty model as long as model is dirty">
    </testcase>
    <testcase name="Files - TextFileEditorModel Revert" time="0.002" classname="Revert">
    </testcase>
    <testcase name="Files - TextFileEditorModel Revert (soft)" time="0.002" classname="Revert (soft)">
    </testcase>
    <testcase name="Files - TextFileEditorModel File not modified error is handled gracefully" time="0.002" classname="File not modified error is handled gracefully">
    </testcase>
    <testcase name="Files - TextFileEditorModel Conflict Resolution Mode" time="0.008" classname="Conflict Resolution Mode">
    </testcase>
    <testcase name="Files - TextFileEditorModel Auto Save triggered when model changes" time="0.053" classname="Auto Save triggered when model changes">
    </testcase>
    <testcase name="Files - TextFileEditorModel save() and isDirty() - proper with check for mtimes" time="0.018" classname="save() and isDirty() - proper with check for mtimes">
    </testcase>
    <testcase name="Files - TextFileEditorModel Save Participant" time="0.004" classname="Save Participant">
    </testcase>
    <testcase name="Files - TextFileEditorModel Save Participant, async participant" time="0.014" classname="Save Participant, async participant">
    </testcase>
    <testcase name="Files - TextFileEditorModel Save Participant, bad participant" time="0.003" classname="Save Participant, bad participant">
    </testcase>
    <testcase name="Files - TextFileEditorModel SaveSequentializer - pending basics" time="0.002" classname="SaveSequentializer - pending basics">
    </testcase>
    <testcase name="Files - TextFileEditorModel SaveSequentializer - pending and next (finishes instantly)" time="0.003" classname="SaveSequentializer - pending and next (finishes instantly)">
    </testcase>
    <testcase name="Files - TextFileEditorModel SaveSequentializer - pending and next (finishes after timeout)" time="0.002" classname="SaveSequentializer - pending and next (finishes after timeout)">
    </testcase>
    <testcase name="Files - TextFileEditorModel SaveSequentializer - pending and multiple next (last one wins)" time="0.005" classname="SaveSequentializer - pending and multiple next (last one wins)">
    </testcase>
  </testsuite>
  <testsuite name="Files - TextFileEditorModelManager" timestamp="2017-02-22T23:10:21" tests="12" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.042">
    <testcase name="Files - TextFileEditorModelManager add, remove, clear, get, getAll" time="0.001" classname="add, remove, clear, get, getAll">
    </testcase>
    <testcase name="Files - TextFileEditorModelManager loadOrCreate" time="0.002" classname="loadOrCreate">
    </testcase>
    <testcase name="Files - TextFileEditorModelManager removed from cache when model disposed" time="0" classname="removed from cache when model disposed">
    </testcase>
    <testcase name="Files - TextFileEditorModelManager disposes model when not open anymore" time="0.001" classname="disposes model when not open anymore">
    </testcase>
    <testcase name="Files - TextFileEditorModelManager local file changes dispose model - delete" time="0" classname="local file changes dispose model - delete">
    </testcase>
    <testcase name="Files - TextFileEditorModelManager local file changes dispose model - move" time="0" classname="local file changes dispose model - move">
    </testcase>
    <testcase name="Files - TextFileEditorModelManager file event delete dispose model" time="0" classname="file event delete dispose model">
    </testcase>
    <testcase name="Files - TextFileEditorModelManager file change event dispose model if happening &gt; 2 second after last save" time="0" classname="file change event dispose model if happening &gt; 2 second after last save">
    </testcase>
    <testcase name="Files - TextFileEditorModelManager file change event does NOT dispose model if happening &lt; 2 second after last save" time="0.003" classname="file change event does NOT dispose model if happening &lt; 2 second after last save">
    </testcase>
    <testcase name="Files - TextFileEditorModelManager events" time="0.007" classname="events">
    </testcase>
    <testcase name="Files - TextFileEditorModelManager events debounced" time="0.027" classname="events debounced">
    </testcase>
    <testcase name="Files - TextFileEditorModelManager disposing model takes it out of the manager" time="0.001" classname="disposing model takes it out of the manager">
    </testcase>
  </testsuite>
  <testsuite name="Files - TextFileService" timestamp="2017-02-22T23:10:22" tests="9" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.018000000000000002">
    <testcase name="Files - TextFileService confirm onWillShutdown - no veto" time="0" classname="confirm onWillShutdown - no veto">
    </testcase>
    <testcase name="Files - TextFileService confirm onWillShutdown - veto if user cancels" time="0.002" classname="confirm onWillShutdown - veto if user cancels">
    </testcase>
    <testcase name="Files - TextFileService confirm onWillShutdown - no veto and backups cleaned up if user does not want to save" time="0.001" classname="confirm onWillShutdown - no veto and backups cleaned up if user does not want to save">
    </testcase>
    <testcase name="Files - TextFileService confirm onWillShutdown - save" time="0.003" classname="confirm onWillShutdown - save">
    </testcase>
    <testcase name="Files - TextFileService isDirty/getDirty - files and untitled" time="0.003" classname="isDirty/getDirty - files and untitled">
    </testcase>
    <testcase name="Files - TextFileService save - file" time="0.003" classname="save - file">
    </testcase>
    <testcase name="Files - TextFileService saveAll - file" time="0.003" classname="saveAll - file">
    </testcase>
    <testcase name="Files - TextFileService saveAs - file" time="0.002" classname="saveAs - file">
    </testcase>
    <testcase name="Files - TextFileService revert - file" time="0.001" classname="revert - file">
    </testcase>
  </testsuite>
  <testsuite name="Hot Exit" timestamp="2017-02-22T23:10:22" tests="0" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
  </testsuite>
  <testsuite name="&quot;onExit&quot; setting" timestamp="2017-02-22T23:10:22" tests="16" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.024000000000000007">
    <testcase name="Files - TextFileService Hot Exit &quot;onExit&quot; setting should hot exit on non-Mac (reason: CLOSE, windows: single, workspace)" time="0.003" classname="should hot exit on non-Mac (reason: CLOSE, windows: single, workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExit&quot; setting should hot exit on non-Mac (reason: CLOSE, windows: single, empty workspace)" time="0.002" classname="should hot exit on non-Mac (reason: CLOSE, windows: single, empty workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExit&quot; setting should NOT hot exit (reason: CLOSE, windows: multiple, workspace)" time="0.002" classname="should NOT hot exit (reason: CLOSE, windows: multiple, workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExit&quot; setting should NOT hot exit (reason: CLOSE, windows: multiple, empty workspace)" time="0.001" classname="should NOT hot exit (reason: CLOSE, windows: multiple, empty workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExit&quot; setting should hot exit (reason: QUIT, windows: single, workspace)" time="0.001" classname="should hot exit (reason: QUIT, windows: single, workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExit&quot; setting should hot exit (reason: QUIT, windows: single, empty workspace)" time="0.001" classname="should hot exit (reason: QUIT, windows: single, empty workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExit&quot; setting should hot exit (reason: QUIT, windows: multiple, workspace)" time="0.001" classname="should hot exit (reason: QUIT, windows: multiple, workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExit&quot; setting should hot exit (reason: QUIT, windows: multiple, empty workspace)" time="0.001" classname="should hot exit (reason: QUIT, windows: multiple, empty workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExit&quot; setting should hot exit (reason: RELOAD, windows: single, workspace)" time="0.005" classname="should hot exit (reason: RELOAD, windows: single, workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExit&quot; setting should hot exit (reason: RELOAD, windows: single, empty workspace)" time="0.001" classname="should hot exit (reason: RELOAD, windows: single, empty workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExit&quot; setting should hot exit (reason: RELOAD, windows: multiple, workspace)" time="0.002" classname="should hot exit (reason: RELOAD, windows: multiple, workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExit&quot; setting should hot exit (reason: RELOAD, windows: multiple, empty workspace)" time="0.001" classname="should hot exit (reason: RELOAD, windows: multiple, empty workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExit&quot; setting should NOT hot exit (reason: LOAD, windows: single, workspace)" time="0.001" classname="should NOT hot exit (reason: LOAD, windows: single, workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExit&quot; setting should NOT hot exit (reason: LOAD, windows: single, empty workspace)" time="0.001" classname="should NOT hot exit (reason: LOAD, windows: single, empty workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExit&quot; setting should NOT hot exit (reason: LOAD, windows: multiple, workspace)" time="0" classname="should NOT hot exit (reason: LOAD, windows: multiple, workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExit&quot; setting should NOT hot exit (reason: LOAD, windows: multiple, empty workspace)" time="0.001" classname="should NOT hot exit (reason: LOAD, windows: multiple, empty workspace)">
    </testcase>
  </testsuite>
  <testsuite name="&quot;onExitAndWindowClose&quot; setting" timestamp="2017-02-22T23:10:22" tests="16" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.021000000000000005">
    <testcase name="Files - TextFileService Hot Exit &quot;onExitAndWindowClose&quot; setting should hot exit (reason: CLOSE, windows: single, workspace)" time="0.001" classname="should hot exit (reason: CLOSE, windows: single, workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExitAndWindowClose&quot; setting should hot exit (reason: CLOSE, windows: single, empty workspace)" time="0.002" classname="should hot exit (reason: CLOSE, windows: single, empty workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExitAndWindowClose&quot; setting should hot exit (reason: CLOSE, windows: multiple, workspace)" time="0.001" classname="should hot exit (reason: CLOSE, windows: multiple, workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExitAndWindowClose&quot; setting should NOT hot exit (reason: CLOSE, windows: multiple, empty workspace)" time="0.001" classname="should NOT hot exit (reason: CLOSE, windows: multiple, empty workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExitAndWindowClose&quot; setting should hot exit (reason: QUIT, windows: single, workspace)" time="0.001" classname="should hot exit (reason: QUIT, windows: single, workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExitAndWindowClose&quot; setting should hot exit (reason: QUIT, windows: single, empty workspace)" time="0.001" classname="should hot exit (reason: QUIT, windows: single, empty workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExitAndWindowClose&quot; setting should hot exit (reason: QUIT, windows: multiple, workspace)" time="0.001" classname="should hot exit (reason: QUIT, windows: multiple, workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExitAndWindowClose&quot; setting should hot exit (reason: QUIT, windows: multiple, empty workspace)" time="0.001" classname="should hot exit (reason: QUIT, windows: multiple, empty workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExitAndWindowClose&quot; setting should hot exit (reason: RELOAD, windows: single, workspace)" time="0.002" classname="should hot exit (reason: RELOAD, windows: single, workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExitAndWindowClose&quot; setting should hot exit (reason: RELOAD, windows: single, empty workspace)" time="0.001" classname="should hot exit (reason: RELOAD, windows: single, empty workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExitAndWindowClose&quot; setting should hot exit (reason: RELOAD, windows: multiple, workspace)" time="0.002" classname="should hot exit (reason: RELOAD, windows: multiple, workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExitAndWindowClose&quot; setting should hot exit (reason: RELOAD, windows: multiple, empty workspace)" time="0.001" classname="should hot exit (reason: RELOAD, windows: multiple, empty workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExitAndWindowClose&quot; setting should hot exit (reason: LOAD, windows: single, workspace)" time="0.002" classname="should hot exit (reason: LOAD, windows: single, workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExitAndWindowClose&quot; setting should NOT hot exit (reason: LOAD, windows: single, empty workspace)" time="0.001" classname="should NOT hot exit (reason: LOAD, windows: single, empty workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExitAndWindowClose&quot; setting should hot exit (reason: LOAD, windows: multiple, workspace)" time="0.002" classname="should hot exit (reason: LOAD, windows: multiple, workspace)">
    </testcase>
    <testcase name="Files - TextFileService Hot Exit &quot;onExitAndWindowClose&quot; setting should NOT hot exit (reason: LOAD, windows: multiple, empty workspace)" time="0.001" classname="should NOT hot exit (reason: LOAD, windows: multiple, empty workspace)">
    </testcase>
  </testsuite>
  <testsuite name="Workbench - TextModelResolverService" timestamp="2017-02-22T23:10:22" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="Workbench - TextModelResolverService resolve resource" time="0.001" classname="resolve resource">
    </testcase>
    <testcase name="Workbench - TextModelResolverService resolve file" time="0.001" classname="resolve file">
    </testcase>
    <testcase name="Workbench - TextModelResolverService resolve untitled" time="0" classname="resolve untitled">
    </testcase>
  </testsuite>
  <testsuite name="Editor Stacks Model" timestamp="2017-02-22T23:10:22" tests="41" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.015000000000000006">
    <testcase name="Editor Stacks Model Groups - Basic" time="0.001" classname="Groups - Basic">
    </testcase>
    <testcase name="Editor Stacks Model Groups - Close Group sends move event for others to the right" time="0.001" classname="Groups - Close Group sends move event for others to the right">
    </testcase>
    <testcase name="Editor Stacks Model Groups - Move Groups" time="0" classname="Groups - Move Groups">
    </testcase>
    <testcase name="Editor Stacks Model Groups - Position of Group" time="0" classname="Groups - Position of Group">
    </testcase>
    <testcase name="Editor Stacks Model Groups - Rename Group" time="0" classname="Groups - Rename Group">
    </testcase>
    <testcase name="Editor Stacks Model Groups - Move Group sends move events for all moved groups" time="0" classname="Groups - Move Group sends move events for all moved groups">
    </testcase>
    <testcase name="Editor Stacks Model Groups - Event Aggregation" time="0.001" classname="Groups - Event Aggregation">
    </testcase>
    <testcase name="Editor Stacks Model Groups - Open group but do not set active" time="0.001" classname="Groups - Open group but do not set active">
    </testcase>
    <testcase name="Editor Stacks Model Groups - Group Identifiers" time="0" classname="Groups - Group Identifiers">
    </testcase>
    <testcase name="Editor Stacks Model Groups - Open Group at Index" time="0" classname="Groups - Open Group at Index">
    </testcase>
    <testcase name="Editor Stacks Model Groups - Close All Groups except active" time="0" classname="Groups - Close All Groups except active">
    </testcase>
    <testcase name="Editor Stacks Model Groups - Close All Groups except inactive" time="0" classname="Groups - Close All Groups except inactive">
    </testcase>
    <testcase name="Editor Stacks Model Stack - One Editor" time="0.001" classname="Stack - One Editor">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - Pinned and Active" time="0" classname="Stack - Multiple Editors - Pinned and Active">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - Preview editor moves to the side of the active one" time="0" classname="Stack - Multiple Editors - Preview editor moves to the side of the active one">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - Pinned and Active (DEFAULT_OPEN_EDITOR_DIRECTION = Direction.LEFT)" time="0" classname="Stack - Multiple Editors - Pinned and Active (DEFAULT_OPEN_EDITOR_DIRECTION = Direction.LEFT)">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - Pinned and Not Active" time="0" classname="Stack - Multiple Editors - Pinned and Not Active">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - Preview gets overwritten" time="0" classname="Stack - Multiple Editors - Preview gets overwritten">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - set active" time="0.001" classname="Stack - Multiple Editors - set active">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - pin and unpin" time="0" classname="Stack - Multiple Editors - pin and unpin">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - closing picks next from MRU list" time="0" classname="Stack - Multiple Editors - closing picks next from MRU list">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - move editor" time="0" classname="Stack - Multiple Editors - move editor">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - move editor across groups" time="0" classname="Stack - Multiple Editors - move editor across groups">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - move editor across groups (input already exists in group 1)" time="0" classname="Stack - Multiple Editors - move editor across groups (input already exists in group 1)">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - Pinned &amp; Non Active" time="0.001" classname="Stack - Multiple Editors - Pinned &amp; Non Active">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - Close Others, Close Left, Close Right" time="0.001" classname="Stack - Multiple Editors - Close Others, Close Left, Close Right">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - real user example" time="0" classname="Stack - Multiple Editors - real user example">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Single Group, Single Editor - persist" time="0.001" classname="Stack - Single Group, Single Editor - persist">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Groups, Multiple editors - persist" time="0.001" classname="Stack - Multiple Groups, Multiple editors - persist">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Single group, multiple editors - persist (some not persistable)" time="0.001" classname="Stack - Single group, multiple editors - persist (some not persistable)">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple groups, multiple editors - persist (some not persistable, causes empty group)" time="0" classname="Stack - Multiple groups, multiple editors - persist (some not persistable, causes empty group)">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple groups, multiple editors - persist (ignore persisted when editors to open on startup)" time="0" classname="Stack - Multiple groups, multiple editors - persist (ignore persisted when editors to open on startup)">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - Navigation (across groups)" time="0" classname="Stack - Multiple Editors - Navigation (across groups)">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - Navigation (in group)" time="0" classname="Stack - Multiple Editors - Navigation (in group)">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - Resources" time="0.001" classname="Stack - Multiple Editors - Resources">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - Editor Dispose" time="0.001" classname="Stack - Multiple Editors - Editor Dispose">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - Editor Disposed on Close" time="0.001" classname="Stack - Multiple Editors - Editor Disposed on Close">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - Editor Disposed on Close (Diff Editor)" time="0" classname="Stack - Multiple Editors - Editor Disposed on Close (Diff Editor)">
    </testcase>
    <testcase name="Editor Stacks Model Stack - Multiple Editors - Editor Emits Dirty and Label Changed" time="0" classname="Stack - Multiple Editors - Editor Emits Dirty and Label Changed">
    </testcase>
    <testcase name="Editor Stacks Model Groups - Model change events (structural vs state)" time="0" classname="Groups - Model change events (structural vs state)">
    </testcase>
    <testcase name="Editor Stacks Model Preview tab does not have a stable position (https://github.com/Microsoft/vscode/issues/8245)" time="0.001" classname="Preview tab does not have a stable position (https://github.com/Microsoft/vscode/issues/8245)">
    </testcase>
  </testsuite>
  <testsuite name="Workbench BaseEditor" timestamp="2017-02-22T23:10:22" tests="8" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.011">
    <testcase name="Workbench BaseEditor BaseEditor API" time="0.001" classname="BaseEditor API">
    </testcase>
    <testcase name="Workbench BaseEditor EditorDescriptor" time="0" classname="EditorDescriptor">
    </testcase>
    <testcase name="Workbench BaseEditor Editor Registration" time="0.001" classname="Editor Registration">
    </testcase>
    <testcase name="Workbench BaseEditor Editor Lookup favors specific class over superclass (match on specific class)" time="0" classname="Editor Lookup favors specific class over superclass (match on specific class)">
    </testcase>
    <testcase name="Workbench BaseEditor Editor Lookup favors specific class over superclass (match on super class)" time="0" classname="Editor Lookup favors specific class over superclass (match on super class)">
    </testcase>
    <testcase name="Workbench BaseEditor Editor Input Action - triggers isEnabled properly" time="0" classname="Editor Input Action - triggers isEnabled properly">
    </testcase>
    <testcase name="Workbench BaseEditor Editor Input Action Contributor" time="0.001" classname="Editor Input Action Contributor">
    </testcase>
    <testcase name="Workbench BaseEditor Editor Input Factory" time="0.008" classname="Editor Input Factory">
    </testcase>
  </testsuite>
  <testsuite name="Workbench UI Services" timestamp="2017-02-22T23:10:22" tests="4" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.011000000000000003">
    <testcase name="Workbench UI Services WorkbenchEditorService" time="0.005" classname="WorkbenchEditorService">
    </testcase>
    <testcase name="Workbench UI Services DelegatingWorkbenchEditorService" time="0.004" classname="DelegatingWorkbenchEditorService">
    </testcase>
    <testcase name="Workbench UI Services ScopedService" time="0.001" classname="ScopedService">
    </testcase>
    <testcase name="Workbench UI Services WorkbenchProgressService" time="0.001" classname="WorkbenchProgressService">
    </testcase>
  </testsuite>
  <testsuite name="Workbench - Editor" timestamp="2017-02-22T23:10:22" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Workbench - Editor toResource" time="0.001" classname="toResource">
    </testcase>
  </testsuite>
  <testsuite name="Workbench - ResourceEditorInput" timestamp="2017-02-22T23:10:22" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Workbench - ResourceEditorInput simple" time="0.001" classname="simple">
    </testcase>
  </testsuite>
  <testsuite name="Workbench - StringEditorInput" timestamp="2017-02-22T23:10:22" tests="3" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.001">
    <testcase name="Workbench - StringEditorInput StringEditorInput" time="0.001" classname="StringEditorInput">
    </testcase>
    <testcase name="Workbench - StringEditorInput StringEditorInput - setValue, clearValue, append" time="0" classname="StringEditorInput - setValue, clearValue, append">
    </testcase>
    <testcase name="Workbench - StringEditorInput Input.matches() - StringEditorInput" time="0" classname="Input.matches() - StringEditorInput">
    </testcase>
  </testsuite>
  <testsuite name="Workbench - Untitled Editor" timestamp="2017-02-22T23:10:22" tests="7" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.023">
    <testcase name="Workbench - Untitled Editor Untitled Editor Service" time="0.001" classname="Untitled Editor Service">
    </testcase>
    <testcase name="Workbench - Untitled Editor Untitled with associated resource" time="0" classname="Untitled with associated resource">
    </testcase>
    <testcase name="Workbench - Untitled Editor Untitled no longer dirty when content gets empty" time="0" classname="Untitled no longer dirty when content gets empty">
    </testcase>
    <testcase name="Workbench - Untitled Editor Untitled with associated path remains dirty when content gets empty" time="0.001" classname="Untitled with associated path remains dirty when content gets empty">
    </testcase>
    <testcase name="Workbench - Untitled Editor encoding change event" time="0.001" classname="encoding change event">
    </testcase>
    <testcase name="Workbench - Untitled Editor onDidChangeContent event" time="0.019" classname="onDidChangeContent event">
    </testcase>
    <testcase name="Workbench - Untitled Editor onDidDisposeModel event" time="0.001" classname="onDidDisposeModel event">
    </testcase>
  </testsuite>
  <testsuite name="QuickOpen performance" timestamp="2017-02-22T23:10:22" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.313">
    <testcase name="QuickOpen performance Measure" time="0.313" classname="Measure">
    </testcase>
  </testsuite>
  <testsuite name="TextSearch performance" timestamp="2017-02-22T23:10:22" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.572">
    <testcase name="TextSearch performance Measure" time="0.572" classname="Measure">
    </testcase>
  </testsuite>
  <testsuite name="MainThreadSaveParticipant" timestamp="2017-02-22T23:10:23" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0.002">
    <testcase name="MainThreadSaveParticipant insert final new line" time="0.002" classname="insert final new line">
    </testcase>
  </testsuite>
  <testsuite name="Workbench QuickOpen" timestamp="2017-02-22T23:10:23" tests="2" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Workbench QuickOpen QuickOpen Handler and Registry" time="0" classname="QuickOpen Handler and Registry">
    </testcase>
    <testcase name="Workbench QuickOpen QuickOpen Action" time="0" classname="QuickOpen Action">
    </testcase>
  </testsuite>
  <testsuite name="Loader" timestamp="2017-02-22T23:10:23" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Loader should not explode while loading" time="0" classname="should not explode while loading">
    </testcase>
  </testsuite>
  <testsuite name="Errors" timestamp="2017-02-22T23:10:23" tests="1" file="C:\Users\adbist\Desktop\SQL_Tools\carbon\test\all.js" failures="0" time="0">
    <testcase name="Errors should not have unexpected errors in tests" time="0" classname="should not have unexpected errors in tests">
    </testcase>
  </testsuite>
</testsuites>